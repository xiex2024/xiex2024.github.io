<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Celeste</title>
      <link href="/2025/05/14/Celeste/"/>
      <url>/2025/05/14/Celeste/</url>
      
        <content type="html"><![CDATA[<p>迄今为止，对我毋庸置疑影响最大的一部作品，一部当之无愧的神作，绝对的第九艺术，平台跳跃游戏的巅峰之作。</p><span id="more"></span><p>抛开<ahref="https://xiex2024.github.io/2025/05/17/Celeste-story">剧情</a>不谈，光是游戏本身的乐趣就以足够让人进入心流的状态，主角的移动只有左右，跳跃，抓墙，冲刺。在后期出现了两次冲刺机会。但仅仅是这么简单的操作方式，其衍生出来的各种技巧可以说是层出不穷，配合上游戏内关卡的各种机制，让整个游玩过程充满趣味。而点睛之笔在于其关键的“惯性”机制，依靠简单的冲刺惯性和各种机关提供的各种加速，我们可以将速度提升到匪夷所思的程度，所谓“贴地飞行”。制作者在冲刺和跳跃上埋了太多的机制，以至于由此开发出的技巧数不胜数：切板跳，蹭墙跳，凌波微步，hyperdash，superdash，充能super，果冻跳，兔子跳，5-jump……诚然里面的很多技巧都颇有上手和应用难度，而这，牵涉到了蔚蓝的另一个将其带上神作的点——极度平滑的难度曲线。</p><p>我相信让一个零基础的人直接去打第九章，那可能上万次的死亡都不一定能让其看到终点，但如果让其一路从1A到8A，再把b面和c面打完，那再没有天赋的人也能在5k次左右抵达终点（更没有的人在前面就已经淘汰了）。而这就是合理的难度曲线的结果，每一关的难度或许会上升，但绝不会让人感觉到绝望。刚入坑的时候我看过全流程攻略，我的想法是：这是人能打的？我拿头过啊。而当我真正到那一关时，却也会发现似乎也不是没有希望。但毋庸置疑的是，蔚蓝的关卡极度有挑战性。</p><p>我将其盛赞为平台跳跃的巅峰之作自然不可能只是因为丰富的机制和难度曲线，很大一部分原因也是作为一款单机游戏绕不过去的一个点——难度。作为一款非常纯粹的平台跳跃，Celeste的难度相当可怕。即便是在打完了所有前置后来到第九章，也会失败数千次，而全流程乃至全成就再怎么说也会死亡上万次，而这只是176草莓，而更可怕的202（指全部章节的0死通关）需要极度枯燥的“炼金”，当完成这一过程时，便也算的上当之无愧的大神了。纵观关卡，其本体已经有相当高的难度了，而在路上的收集物：草莓，节奏面后的磁带，A面的蓝星，末尾的月梅乃至于无伤的金草莓。这些收集物所指示的路线往往更加困难，有时甚至需要一点点解谜。但这并不意味着这个游戏是以难度来作为门槛吸引所谓高端玩家入场的，如若你对于亲手打完没有执念，只是想看看剧情或是沉迷于这种氛围中，游戏自带了辅助模式，你可以增加冲刺次数，游戏速度，乃至于最轮椅的无敌模式，难度只是乐趣，而不是阻拦你体验这个游戏的门槛。</p><p>而减轻和抵消死亡的挫败感的，是近乎没有的死亡惩罚和过关后的成就感。不同于魂类游戏一些饱受人诟病的点，蔚蓝中的死亡不会消耗任何物品，几乎没有加载和额外跑图时间，唯一的影响只是在记录上的数字又加了1而已，这很容易让人一遍遍的不停游玩——死了再来就是。我见过吐槽蔚蓝太难的，抑或是某些机制太恶心（煤球弹球冰球火球滚出蔚蓝），但我没有见过吐槽蔚蓝有非常恶心人的非必要难度。成就感则来自于非常精巧的关卡设计，在一遍遍尝试中你可以清晰地感觉到自己的熟练度在飞速上升，过关后你可以确实的感受到自己的能力是有所提升的。当熟练的按出一长串间隔只有几帧的操作时，那种满足感难以言喻。</p><p>除了玩法上的精妙，蔚蓝的画风和音乐也相当不错，其像素画的画风在节省经费的同时减轻了关卡构建的难度，但这绝不意味着缺乏美感，相反，既不喧宾夺主但又足够有氛围感的美术相当令人舒适。音乐同理，虽然不算非常出彩但也做到了一个游戏的本分，舒缓因为无数次死亡带来的焦躁感。</p><p>我无数次质疑自己能否完成这个游戏，也因此无数次放下这个游戏。但无论间隔多久，我最终都会想起来，开始复健，打过上一次让我破防的关卡，接着一直打下去。我也因此无数次调侃自己是个m，诚然这无数次的死亡会让我看上去像是有这方面的倾向，但在一次次的死亡中我无法否认自己获得了精神上的宁静与放松——唯有在这个游戏里，我们可以为死亡次数欢呼。</p><p>《我在七年后等着你》</p><p>可玩性：5+/5</p><p>音乐：4.5/5</p><p>画面：5/5</p><p>剧情：5+/5</p><p>总评：5+/5</p><p><img src="20250320194951_1.jpg" /></p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红辣椒</title>
      <link href="/2025/03/31/%E7%BA%A2%E8%BE%A3%E6%A4%92/"/>
      <url>/2025/03/31/%E7%BA%A2%E8%BE%A3%E6%A4%92/</url>
      
        <content type="html"><![CDATA[<p>《红辣椒》其反映和蕴含的社会现实和暗示过于丰富，以至于笔者完全无法详尽的写出，于此留下我第一次观此影片的感受。</p><span id="more"></span><hr /><p>最近看的几部电影都更类似“叫好不叫座”的类型，无论是《你的颜色》，还是《猫猫的奇幻漂流》都属于那种艺术和文艺色彩较为浓厚，相比之下故事性和吸引力逊色许多的作品，其针对的人群似乎更狭窄因此评价也就更两极分化。</p><p>而《红辣椒》并非，即使作为上个世纪的作品，其各方面在今天也能称得上极高的水准，甚至如今仍能在网上看到的许多名场面也出自这篇作品。较为专业的观影者和评论人可能可以从中看到反映的社会现实和导演与原著作者的一些思想，而业余观众也可以从高潮迭起的剧情，瑰美华丽的画面，目不暇接的巧妙转场甚或是与电影相得益彰，恰到好处的配乐中感受到这部电影的伟大之处。</p><p>作为题材类似的作品，《红辣椒》的严谨和易懂显然不如《盗梦空间》，但内蕴之深厚，想象之丰富，画面之华丽，音乐之出色却又令人印象深刻得多。作为一部动画片，其对梦境的诡异和扭曲的展现反而会更贴近真实。大量出现的荒诞甚至略带诡异的场景足以让人感慨绘画者的怪才。</p><p>正如我开头所说，“其反映和蕴含的社会现实和暗示过于丰富，以至于笔者完全无法详尽的写出”，我尚不能完全理解电影所表达的内容，但就那些显而易见的暗示已经足够我再写一段话。首先，同性恋。在影片中出现了至少两个同性恋者，其特殊的性取向对于故事的发生和推动有着极大的作用。以及，女主“Paprika”的特殊的“治疗”方式——即以交合的方式帮助男性治愈精神疾病在影片中亦有暗示。以及，在影片中多次出现的梦境现实的切换，其标志在影片内明明白白的告诉了观众，但标志却又不是完全出现在影片内——即拍摄视角的越轴导致的不自然感——这一点相当有趣。</p><p>以及音乐，也是本片的一大亮点，以游行的配乐为例，导演今敏要求“盛大愉悦但就是让人感觉不舒服”这种甚至可以说苛刻的要求，但平泽进先生给出的成果简直堪称完美。（这一段是看的解说，虽然我自己看确实感觉配乐相当的好但显然描述不出来）。</p><p>红辣椒Paprika确实是相当有魅力的主角，虽然我说不出来为什么这个角色的吸引力如此之大，但就角色塑造来说，显然是成功至极。当然，无法排除林原惠美小姐也是HaibaraAi的配音的爱屋及乌的因素。</p><p>可称神作的一部电影。</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> film </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>py_notes</title>
      <link href="/2025/03/17/py-notes/"/>
      <url>/2025/03/17/py-notes/</url>
      
        <content type="html"><![CDATA[<p>自用</p><span id="more"></span><h1 id="字符串处理">字符串处理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = &#x27;xiex&#x27;</span><br><span class="line">s1 = s.center(2)</span><br><span class="line">print(s1)#数字小于字符串长度则不做处理</span><br><span class="line">s2 = s.center(7)</span><br><span class="line">print(s2.index(&#x27;x&#x27;))#若填充数为奇数则左侧多一个</span><br><span class="line">print(s.center(20))#居中并填充使总长度为20</span><br><span class="line">print(s.ljust(20))#左对齐并填充</span><br><span class="line">print(s.rjust(20))#右对齐并填充</span><br></pre></td></tr></table></figure><h1 id="集合运算和处理">集合运算和处理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;2,1,3&#125;;setB = &#123;3,4,5&#125;</span><br><span class="line">print(setA|setB)#并集，运算。而A.union(B)作为方法有同样的功能</span><br><span class="line">print(setA&amp;setB)#交集，A.intersectiom(B)</span><br><span class="line">print(setA-setB)#仅出现于setA的元素</span><br><span class="line">print(setA&lt;=setB)#setA是否包含于setB</span><br><span class="line">print(&#123;1,2,3,4,5&#125;.pop())#“随机”移除，但实际删除集合中的“第一个”元素，由于集合的无序性而称为随机，例如纯数字是会输出最小的</span><br><span class="line">print(&#123;&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;,&#x27;g&#x27;&#125;.pop())#此处即为随机</span><br></pre></td></tr></table></figure><h1 id="字典处理">字典处理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dict = &#123;1:4,&#x27;a&#x27;:&#x27;c&#x27;&#125;</span><br><span class="line">print(&#x27;c&#x27; in dict ,1 in dict)#直接用in所查找的是是否在索引中</span><br><span class="line">itemdict = &#123;&quot;item&quot;:&quot;banana&quot;,&quot;cost&quot;:24&#125;</span><br><span class="line">print(&quot;The %(item)s costs %(cost)7.1f cents&quot; % itemdict)# %(name)d可以获取字典中name所代表的值</span><br></pre></td></tr></table></figure><h1 id="人为抛出一条异常信息">人为抛出一条异常信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">anumber = int(input())</span><br><span class="line">if anumber &lt; 0:</span><br><span class="line">    raise RuntimeError(&quot;You can&#x27;t use a negative number&quot;)</span><br><span class="line"></span><br><span class="line">from math import sqrt</span><br><span class="line">def squareroot(n):#牛顿法求平方根</span><br><span class="line">    root = n/2 #initial guess will be 1/2 of n</span><br><span class="line">    for k in range(20):</span><br><span class="line">        root = (1/2)*(root + (n / root))</span><br><span class="line">    return root</span><br><span class="line">print((squareroot(5)-sqrt(5))*(10**10))</span><br></pre></td></tr></table></figure><h1 id="面向对象">面向对象</h1><p>python为所有的类提供了一套标准的工作方法，但可能在一些情况下没有正常工作，如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class fraction:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">print(fraction(2,5))#返回指向的地址字符串</span><br></pre></td></tr></table></figure>此处__str__方法即为内置的方法，指示了如何将对象转化为字符串<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class fraction1:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">    def __str__(self):</span><br><span class="line">        return str(self.top)+&quot;/&quot;+str(self.bottom)</span><br><span class="line">    def __add__(self,other):#加法运算</span><br><span class="line">        top1 = self.top*other.bottom + \</span><br><span class="line">               other.top*self.bottom#\可以作为续行符</span><br><span class="line">        bottom1 = self.bottom*other.bottom</span><br><span class="line">        return fraction1(top1,bottom1)#可以加入用找最小公倍数的方法化简来优化,但这部分的重点不在此处</span><br><span class="line">print(fraction1(2,5))</span><br><span class="line">print(fraction1(2,5).__str__())</span><br><span class="line">print(str(fraction1(2,5)))</span><br><span class="line">print(fraction1(1,2)+fraction1(1,5))</span><br></pre></td></tr></table></figure> ## 浅相等与深相等对于两个对象来说，直接==比较是比较两者是否引用了同一个对象，而非对值的比较<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = fraction1(3,5)</span><br><span class="line">b = fraction1(3,5)</span><br><span class="line">print(a==b)</span><br><span class="line">#建立__eq__方法，进行值的比较</span><br><span class="line">class frac:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">    def __eq__(self, other):</span><br><span class="line">        return self.top == other.top and self.bottom == other.bottom#仍不完善，可能输入的并非最简分数</span><br><span class="line">a = frac(3,5)</span><br><span class="line">b = frac(3,5)</span><br><span class="line">print(a==b)</span><br></pre></td></tr></table></figure> fraction的完整实现 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">def gcd(m,n):</span><br><span class="line">    while m%n != 0:</span><br><span class="line">        oldm = m</span><br><span class="line">        oldn = n</span><br><span class="line"></span><br><span class="line">        m = oldn</span><br><span class="line">        n = oldm%oldn</span><br><span class="line">    return n</span><br><span class="line">class Fraction:</span><br><span class="line">    def __init__(self, top, bottom):</span><br><span class="line">        self.num = top</span><br><span class="line">        self.den = bottom</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return str(self.num) + &quot;/&quot; + str(self.den)</span><br><span class="line"></span><br><span class="line">    def show(self):</span><br><span class="line">        print(self.num, &quot;/&quot;, self.den)</span><br><span class="line"></span><br><span class="line">    def __add__(self, otherfraction):</span><br><span class="line">        newnum = self.num * otherfraction.den + \</span><br><span class="line">        self.den * otherfraction.num</span><br><span class="line">        newden = self.den * otherfraction.den</span><br><span class="line">        common = gcd(newnum, newden)</span><br><span class="line">        return Fraction(newnum//common, newden//common)</span><br><span class="line"></span><br><span class="line">    def __eq__(self, other):</span><br><span class="line">        firstnum = self.num * other.den</span><br><span class="line">        secondnum = other.num * self.den</span><br><span class="line">        return firstnum == secondnum</span><br></pre></td></tr></table></figure> ## 继承：以逻辑门为例<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">class LogicGate:#超类LogicGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        self.label = n</span><br><span class="line">        self.output = None</span><br><span class="line">    def getLabel(self):</span><br><span class="line">        return self.label</span><br><span class="line">    def getOutput(self):</span><br><span class="line">        self.output = self.performGateLogic()</span><br><span class="line">        return self.output</span><br><span class="line"></span><br><span class="line">class BinaryGate(LogicGate):#有两个输入的门（与&amp;或门），继承LogicGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)#先调用父类的构造方法</span><br><span class="line"></span><br><span class="line">        self.pinA = None</span><br><span class="line">        self.pinB = None</span><br><span class="line"></span><br><span class="line">    def getPinA(self):</span><br><span class="line">        if self.pinA is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin A: input for gate&#x27; + \</span><br><span class="line">                            self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pinA.getFrom().getOutput()</span><br><span class="line">    def getPinB(self):</span><br><span class="line">        if self.pinB is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin B: input for gate&#x27; + \</span><br><span class="line">                         self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pinB.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">class UnaryGate(LogicGate):#非门</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">        self.pin = None</span><br><span class="line">    def getPin(self):</span><br><span class="line">        if self.pin is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin: input for gate &#x27; + self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pin.getFrom().getOutput()#即返回连接器所连接的上一个类的输出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class AndGate(BinaryGate):#与门，继承BinaryGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        if a==1 and b==1:</span><br><span class="line">            return 1</span><br><span class="line">        else:</span><br><span class="line">            return 0</span><br><span class="line"></span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">    # 在BinaryGate 类中，逻辑门有两个输入，但连接器必须只连接其中一个。如果两个都能连接，那么默认选择pinA。如果pinA 已经有了连接，就选择pinB。如果两个输入都已有连接，则无法连接逻辑门。</span><br><span class="line">        if self.pinA == None:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        else:</span><br><span class="line">            if self.pinB == None:</span><br><span class="line">                self.pinB = source</span><br><span class="line">            else:</span><br><span class="line">                raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line"># g1 = AndGate(&#x27;G1&#x27;)</span><br><span class="line"># print(g1.getOutput())</span><br><span class="line"></span><br><span class="line">class OrGate(BinaryGate):#与门，继承BinaryGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        if a==0 and b==0:</span><br><span class="line">            return 0</span><br><span class="line">        else:</span><br><span class="line">            return 1</span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">        if self.pinA == None:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        else:</span><br><span class="line">            if self.pinB == None:</span><br><span class="line">                self.pinB = source</span><br><span class="line">            else:</span><br><span class="line">                raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class NotGate(UnaryGate):</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        pin = self.getPin()</span><br><span class="line">        if pin == 1:</span><br><span class="line">            return 0</span><br><span class="line">        else:</span><br><span class="line">            return 1</span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">        if self.pin == None:</span><br><span class="line">            self.pin = source</span><br><span class="line">        else:</span><br><span class="line">            raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line">class Connector:#连接两个逻辑门，内部包含LogicGate的实例但不在继承关系中</span><br><span class="line">    def __init__(self,fgate,tgate):</span><br><span class="line">        self.fromgate = fgate</span><br><span class="line">        self.togate = tgate</span><br><span class="line">        tgate.setNextPin(self)#此处传递参数self,即让tgate的值设定为连接器这个类的实例</span><br><span class="line"></span><br><span class="line">    def getFrom(self):</span><br><span class="line">        return self.fromgate</span><br><span class="line"></span><br><span class="line">    def getTO(self):</span><br><span class="line">        return self.togate</span><br><span class="line"></span><br><span class="line">g1 = AndGate(&quot;G1&quot;)</span><br><span class="line">g2 = AndGate(&quot;G2&quot;)</span><br><span class="line">g3 = OrGate(&quot;G3&quot;)</span><br><span class="line">g4 = NotGate(&quot;G4&quot;)</span><br><span class="line">c1 = Connector(g1,g3)</span><br><span class="line">c2 = Connector(g2,g3)</span><br><span class="line">c3 = Connector(g3,g4)</span><br><span class="line">print(g4.getOutput())</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="算法">算法</h1><h2 id="递归">递归</h2><p>递归的三个原则为：</p><p>①基本情况，即无需处理就可以直接return的情况</p><p>②算法会改变待处理数据的状态，使其更接近于基本状态</p><p>③调用自己</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def toStr(n,base):#递归示例，转换进制。</span><br><span class="line">    convertstring = &#x27;0123456789ABCDEF&#x27;</span><br><span class="line">    if n&lt;base:</span><br><span class="line">        return convertstring[n]</span><br><span class="line">    else:</span><br><span class="line">        return toStr(n//base,base)+convertstring[n%base]</span><br></pre></td></tr></table></figure><p><img src="image-20250316214546049.png" /></p><p>基本状态为一位数，于是不断将原整数整除10</p><p>用栈来储存结果，那么python会将函数的返回值储存在栈的顶端</p><p><img src="image-20250316220244264.png" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rStack = Stack()#将储存的结果压入栈中</span><br><span class="line">def toStr(n, base):</span><br><span class="line">    convertString = &quot;0123456789ABCDEF&quot;</span><br><span class="line">    if n &lt; base:</span><br><span class="line">        rStack.push(convertString[n])</span><br><span class="line">    else:</span><br><span class="line">        rStack.push(convertString[n % base])</span><br><span class="line">        toStr(n // base, base)</span><br></pre></td></tr></table></figure><p>示例：汉诺塔</p><p>其基本思路是，若有n层，从a挪到c，那问题可以分解为：</p><p>n-1层从a到b <span class="math inline">\(-&gt;\)</span> 1层从a到c<span class="math inline">\(-&gt;\)</span> n-1层从b到c</p><p>代码如下（五层为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#汉诺塔</span><br><span class="line">def moveTower(height, fromPole, toPole, withPole):</span><br><span class="line">    if height &gt;= 1:</span><br><span class="line">        moveTower(height-1, fromPole, withPole, toPole)</span><br><span class="line">        moveDisk(fromPole, toPole)</span><br><span class="line">        moveTower(height-1, withPole, toPole, fromPole)</span><br><span class="line">def moveDisk(fromPole, toPole):</span><br><span class="line">    print(fromPole+&#x27;-&gt;&#x27;+toPole)</span><br><span class="line">moveTower(5,&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;)</span><br></pre></td></tr></table></figure><h2 id="动态规划">动态规划</h2><p>以找零钱为例，采用递归算法结果如下： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def recMC(coinValueList, change):</span><br><span class="line">minCoins = change</span><br><span class="line">if change in coinValueList:</span><br><span class="line">return 1</span><br><span class="line">else:</span><br><span class="line">for i in [c for c in coinValueList if c &lt;= change]:</span><br><span class="line">numCoins = 1 + recMC(coinValueList, change-i)</span><br><span class="line">if numCoins &lt; minCoins:</span><br><span class="line">minCoins = numCoins</span><br><span class="line">return minCoins</span><br><span class="line"></span><br><span class="line">recMC([1, 5, 10, 25], 63)</span><br></pre></td></tr></table></figure></p><p>问题分解为：（change-i）的最小硬币数+1，其中i为一枚硬币的面值，故而循环多次直到遍历每一种可能。</p><p>该方法的问题在于有太多次对相同方案的遍历，如下图</p><p>![]image-20250317153318112.png)</p><p>相同的节点出现了多次，而每次出现都会进行完全一致而冗余的计算，这大大降低了算法的效率。</p><p>对此我们进行“针对性”的优化，即用<code>knownResults</code>储存每个节点所对应的数值，在计算时先查找这个节点是否已被计算过，以减少冗余的计算。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">def recMC(coinValueList, change, knownResults):</span><br><span class="line">    minCoins = change</span><br><span class="line">    if change in coinValueList:</span><br><span class="line">        return 1</span><br><span class="line">    elif knownResults[change] &gt; 0:</span><br><span class="line">        return knownResults[change]</span><br><span class="line">    else:</span><br><span class="line">        for i in [c for c in coinValueList if c &lt;= change]:</span><br><span class="line">            numCoins = 1 + recMC(coinValueList, change-i, knownResults)</span><br><span class="line">            if numCoins &lt; minCoins:</span><br><span class="line">                minCoins = numCoins</span><br><span class="line">                knownResults[change] = numCoins</span><br><span class="line">    return minCoins</span><br><span class="line"></span><br><span class="line">recMC([1, 5, 10, 25], 63, [0]*64)</span><br></pre></td></tr></table></figure></p><p>在这里介绍动态规划（dp），与上述算法不同，在这个问题上，递归采用了更为系统的储存方式，其会储存从1开始一直到change的每一个值对应的最少硬币数。</p><p>对于每一个值，其需要硬币的最小值，来自于这个值减去一个硬币的面值后所有情况的最小值+1。如对于（11）来说，为（1）+1，（6）+1，（10）+1，分别对应减去的硬币为10，5，1的情况，因此代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def dpMakeChange(coinValueList, change, minCoins):</span><br><span class="line">    for cents in range(change+1):</span><br><span class="line">        coinCount = cents</span><br><span class="line">        for j in [c for c in coinValueList if c &lt;= cents]:</span><br><span class="line">            if minCoins[cents-j] + 1 &lt; coinCount:</span><br><span class="line">                coinCount = minCoins[cents - j]+1</span><br><span class="line">            minCoins[cents] = coinCount</span><br><span class="line">    return minCoins[change]</span><br></pre></td></tr></table></figure><p>如果我们需要得到对于每一个值，在硬币数量最少的情况下所有硬币的面值，我们实际上只需要储存新增的硬币的面值即可递推得到所有的面值，修改代码如下；<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def dpMakeChange(coinValueList, change, minCoins, coinsUsed):</span><br><span class="line">    for cents in range(change + 1):</span><br><span class="line">        coinCount = cents</span><br><span class="line">        newcoin = 1</span><br><span class="line">        for j in [c for c in coinValueList if c &lt;= cents]:</span><br><span class="line">            if minCoins[cents - j] + 1 &lt; coinCount:</span><br><span class="line">                coinCount = minCoins[cents - j] + 1</span><br><span class="line">                newcoin = j</span><br><span class="line">            minCoins[cents] = coinCount</span><br><span class="line">            coinsUsed[cents] = newcoin</span><br><span class="line">    return minCoins[change]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def printcoins(change, coinsUsed):</span><br><span class="line">    while change &gt; 0:</span><br><span class="line">        print(coinsUsed[change],end = &#x27; &#x27;)</span><br><span class="line">        change -= coinsUsed[change]</span><br><span class="line"></span><br><span class="line">coinsUsed = [0]*64</span><br><span class="line">minCoins = [0]*64</span><br><span class="line">dpMakeChange([1, 5, 10, 21, 25], 63, minCoins, coinsUsed)</span><br><span class="line">printcoins(63,coinsUsed)</span><br></pre></td></tr></table></figure></p><h2 id="搜索">搜索</h2><h3 id="二分搜索">二分搜索</h3><p>正常的搜索方法时间复杂度为O(n)，若列表为有序列表，那在不存在于列表中时时间消耗会减少。而使用二分搜索，时间复杂度可以降到O(logn)。（注意如果使用切片方法（如下）可能不严格遵守该事件复杂度，因为python的切片操作的时间复杂度为O(k)，可以用计算下标的方法减少这一操作的事件复杂度）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def binarySearch(alist, item):</span><br><span class="line">    if len(alist) == 0:</span><br><span class="line">        return False</span><br><span class="line">    else:</span><br><span class="line">        midpoint = len(alist) // 2</span><br><span class="line">        if alist[midpoint] == item:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            if item &lt; alist[midpoint]:</span><br><span class="line">                return binarySearch(alist[:midpoint], item)</span><br><span class="line">            else:</span><br><span class="line">                return binarySearch(alist[midpoint+1:], item)</span><br></pre></td></tr></table></figure><p>但问题是，排序可能造成更大的负担。</p><h2 id="排序">排序</h2><h3 id="冒泡排序">冒泡排序</h3><p>冒泡排序多次遍历列表。它比较相邻的元素，将不合顺序的交换。每一轮遍历都将下一个最大值放到正确的位置上。</p><p><img src="image-20250327173026645.png" /></p><p>其代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def bubbleSort(alist):</span><br><span class="line">    for passnum in range(len(alist)-1, 0, -1):</span><br><span class="line">        for i in range(passnum):</span><br><span class="line">            if alist[i] &gt; alist[i+1]:</span><br><span class="line">                alist[i], alist[i+1] = alist[i+1], alist[i]</span><br></pre></td></tr></table></figure><p>其优势在于可以提前判断出是否已经有序（若一轮都没有发生交换），对于只需要交换少数次数的列表有优势，称<strong>短冒泡</strong>，但大部分时候是效率最低的排序方法。</p><h3 id="选择排序">选择排序</h3><p>其与冒泡的区别是不再以交换将每一个值放到正确的位置，而是对于每一个位置，找到未排序的最大值放入。</p><p>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def selectionSort(alist):</span><br><span class="line">    for fillslot in range(len(alist)-1, 0, -1):</span><br><span class="line">        positionOfMax = 0</span><br><span class="line">        for location in range(1, fillslot+1):</span><br><span class="line">            if alist[location] &gt; alist[positionOfMax]:</span><br><span class="line">                positionOfMax = location</span><br><span class="line"></span><br><span class="line">        temp = alist[fillslot]</span><br><span class="line">        alist[fillslot] = alist[positionOfMax]</span><br><span class="line">        alist[positionOfMax] = temp</span><br></pre></td></tr></table></figure><p>由于减少了交换次数因此速度快于冒泡。</p><h3 id="插入排序">插入排序</h3><p>最坏情况下的时间复杂度仍然为<spanclass="math inline">\(O(n^2)\)</span>，最好情况下为<spanclass="math inline">\(O(n)\)</span>，但采用了和冒泡以及选择不同的思路。通过不断地将新元素插入已排序列表实现排序。</p><p><img src="image-20250328161147281.png" /></p><p>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def insertionSort(alist):</span><br><span class="line">    for index in range(1, len(alist)):</span><br><span class="line">        currentvalue = alist[index]</span><br><span class="line">        position = index</span><br><span class="line"></span><br><span class="line">        while position &gt; 0 and alist[position-1] &gt; currentvalue:</span><br><span class="line">            alist[position] = alist[position-1]#如果比该位置的数小就继续往前挪</span><br><span class="line">            position = position-1</span><br><span class="line"></span><br><span class="line">        alist[position] = currentvalue</span><br></pre></td></tr></table></figure><p>可以看到，尽管时间复杂度一样，但该方法快于冒泡排序，因为移动所需要的时间短于交换（只需要进行一次赋值）。</p><h3 id="希尔排序">希尔排序</h3><p>类似于插入排序，但通过一定的步长将原列表划分为几个子列表，将子列表通过插入排序后再合并。不同的增量下时间复杂度不一样，但介于<spanclass="math inline">\(O(n)\)</span>与<spanclass="math inline">\(O(n^2)\)</span>之间。其关键在于找到合适的切分列表的方式。看似要多次排序增加了复杂度，但实际上，再后期的排序中，各个元素已经相当“接近“正确位置，需要的时间也大大降低。换言之，只有最后一步才是”真正“的排序，而前面的步骤只是预处理以减少最后排序的复杂度。</p><p>如对于增量为<spanclass="math inline">\(1,3,7,15,\dots,2^k-1\)</span>的希尔排序来说，时间复杂度为<spanclass="math inline">\(O(n^\frac{3}{2})\)</span>；而增量为<spanclass="math inline">\(1,2,3,4,6,8,9,\dots,2^p3^q\)</span>（序列满足递增且<spanclass="math inline">\(p，q\)</span>每次最多<spanclass="math inline">\(+1\)</span>）来说，其时间复杂度为<spanclass="math inline">\(O(n\cdot\log n^2)\)</span>，证明从略，参见<ahref="https://blog.csdn.net/qq_36667170/article/details/103899517">希尔排序复杂度详细分析（翻译来源：HansWernerLang教授）_希尔排序时间复杂度-CSDN博客</a>。对增量序列的取法来进行优化相当有趣，但现在没有能够在最坏情况下也能达到<spanclass="math inline">\(O(n\cdot\logn)\)</span>的增量序列，甚至是否存在也不好说？</p><p>可以用另一种思想来理解：将数据存放在二维数组里，然后对每一列进行排序→直接合并在划分为列数更少的二维数组，并重复以上过程，当然，在实际实现中，仍然是一维数组。</p><p>通过代码来实现，举例：先划分为<spanclass="math inline">\(\frac{n}{2}\)</span>个子列表，再划分为<spanclass="math inline">\(\frac{n}{4}\)</span>个子列表……直到整个列表完成排序。代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def shellSort(alist):</span><br><span class="line">    sublistcount = len(alist)//2</span><br><span class="line">    while sublistcount &gt; 0:</span><br><span class="line"></span><br><span class="line">      for startposition in range(sublistcount):</span><br><span class="line">        gapInsertionSort(alist,startposition,sublistcount)</span><br><span class="line"></span><br><span class="line">      print(&quot;After increments of size&quot;,sublistcount,&quot;The list is&quot;,alist)</span><br><span class="line">      sublistcount = sublistcount // 2</span><br><span class="line"></span><br><span class="line">def gapInsertionSort(alist,start,gap):</span><br><span class="line">    for i in range(start+gap,len(alist),gap):</span><br><span class="line">        currentvalue = alist[i]</span><br><span class="line">        position = i</span><br><span class="line"></span><br><span class="line">        while position&gt;=gap and alist[position-gap]&gt;currentvalue:</span><br><span class="line">            alist[position]=alist[position-gap] </span><br><span class="line">            position = position-gap</span><br><span class="line"></span><br><span class="line">        alist[position]=currentvalue</span><br></pre></td></tr></table></figure><p>希尔排序是通过对插入的改良实现的，因此shellSort方法中调用了插入排序的内容。</p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你的颜色</title>
      <link href="/2025/02/22/%E4%BD%A0%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
      <url>/2025/02/22/%E4%BD%A0%E7%9A%84%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<p>我对音乐和绘画都没有特别的喜好，因此这部作品于我而言虽毋庸置疑是一部好电影，但或许震撼感并没有那么强。</p><span id="more"></span><hr /><p>作为商业片的话，这似乎并不是一部好作品，剧中的冲突显得轻微而温和，也并没有那么多小高潮能不断地调动人的情绪，抛开轻微的百合向不说，貌似没有什么能夺人眼球的特点。但是，它确实，从结果上来说，也让我这个对音乐和绘画兴趣不大的人能够一直看下去。在我的想象中，看这部电影理想的场景应该是：在某个阳光明媚的上午，舒服的坐在（躺在）书房的躺椅上，阳光能照在身上，我心平气和地在电脑上点开这部影片，带着降噪耳机在不被人干扰的情况下消磨掉一上午。整部影片的氛围于我确实就是这么休闲。</p><p>细节之处反而让我印象最深。声音和颜色像是这部影片的特点。单说声音，电影似乎着重放大了那些细微的声音：火焰燃烧与熄灭，雨滴落下，脚步，呼吸，翻书，乐队使用的那些接线连接时的声音……如若不是我的错觉，那这些效果似乎也暗示了窦子对于声音超乎常人的感知天赋。当然，末尾那一幕白噪音和背景音的突然消失也是一种常规但有效的声音手段。</p><p>而作为影片名字的一部分，颜色自然也是亮点之一。从我的感官上来说，色彩鲜明而不激烈，感觉十分舒服。不知为何，收音机那一抹红色令我印象深刻。而作为三人组的颜色，红绿蓝恰好是光的三原色，不知道是否是有什么隐喻？其实我一直觉得橙色或金色这种太阳的颜色可能是窦子的颜色，但结尾她翩然起舞时看到的正红带来的震撼绝对是这两种颜色无法比拟的，而一旦知晓了她是红色，那也就觉得红色确实最为合适了。而作永和路易这一绿一蓝更是怎么想怎么合理。</p><p>其他方面，很高兴没有把窦子能看到声音的颜色这一点作为“异能”着重描写，很高兴整部作品没有对感情线太多的描写。</p><p>是好电影，但我确实无法对剧情有很强的共情</p><p>总评：4/5</p><p><img src="微信图片_20250222233856.jpg" /></p><p><img src="微信图片_20250222233905.jpg" /></p><p><img src="微信图片_20250222233909.jpg" /></p><hr /><p>P.S sorry ，窦子，一张你都没拍到</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> film </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>画中世界</title>
      <link href="/2025/02/17/%E7%94%BB%E4%B8%AD%E4%B8%96%E7%95%8C/"/>
      <url>/2025/02/17/%E7%94%BB%E4%B8%AD%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<p>游戏名：画中世界/Gorogoa</p><p>很有意思的解密作品，精良而小巧。</p><span id="more"></span><p>也是一两年前玩的游戏了，剧情简单而隐晦，倒是没什么好说的。但该作的解密，构思以及美术精巧至极，常常又令我拍案叫绝之处。</p><p>游戏的主要玩法是通过画面的移动，重叠，视觉错觉实现解密和进程推动，少数的彩蛋也能让人眼前一亮，玩起来的感觉有种驱动精密机械运作的感觉，环环相扣精妙绝伦，兼之游戏流程较短，很容易让人一口气通关。</p><p>游戏的难度中等，循序渐进但不乏大开脑洞之处，但各种谜题十分合理，正如前文所说：”精巧“。</p><p>手绘风格的美术令人眼前一亮，用来衬托全作庄严而孤独的氛围恰到好处。当循序渐进的音乐配合着游戏结局时的恍然大悟，总会有一种孤独而荒谬的感觉，美术风格对于结局时那种略带宗教恐怖和克苏鲁的画面也是十分自然，”来自东方的神秘力量“刚好可以用来形容这部游戏给人的感觉。</p><p>《画中世界》</p><p>可玩性：5/5</p><p>音乐：4/5</p><p>画面：4.5/5</p><p>剧情：3/5</p><p>总评：4.5/5</p><p><img src="Screenshot_20230604_171258_com.xd.gorogoa.tap.jpg" /></p><video muted controls preload="metadata" loop="loop"><source src="SVID_20230604_171538_1.mp4" type="video/mp4"></source></video><video muted controls preload="metadata" loop="loop"><source src="SVID_20230604_171301_1.mp4" type="video/mp4"></source></video>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>why not die?</title>
      <link href="/2025/02/06/why_not_die/"/>
      <url>/2025/02/06/why_not_die/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="A phrase and a title." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9421f8359403e9cc5707b982fc5276b0840da0e98393a4a1ed4d4b7661339e6e">65656f3c3e4487cb80a6cc94c13c3fa9964f38cb4069ad37fbab766a4a4a071d1c22f3726806211334047847b7bcc66f717a732ec66513aa820327f601c24e5339b0cfb9d339ec1a1bf7a993b8f9c04e5814d42a8404f594182ac4e4d39d23ab6bc047facbca28b45658e773f6a1606237d7d6837a8390a3a41b7cab9f7cd9859141a89cb97f1a5b2e8188aa281827dcd1d2f5b09ec01c25a9579732267eb752b61f73e4cbec7856b3e5f28f41a5fcc9838f7f343c46bd04f5d8c92fe48b80c15ab7a36d58966f95ff8264dd3c8d9d056cd2f04b403a00bfc4dcd8b4991a031fe73faa9ea3a5720789b5dd7c6d50e7e3515b1ebfa77bef1bf4d57daa53b18edd5d7badfac8187d922e9340fcb6ae5dde9ed36a28f2f8608092c404eb4531dfec76e4d7c44b45cd7ea703a42b7476b4ee6a7a090e900742ef81f983b5e35c1778b798561c921717699df7d92546740cb2365ea7f63b906fe413040f4c81a68f6c171f42516cf79435a7b5574bfc443a13dff7d6fd8a109ad64cc4c7a3220aa160f20a4c35ee804f8598dd8f0a5c0b8c493ac6e55c074ee8258481d3e2ba64c1cbaef01554007c165cc309cc8058ba0fd5a29743ec8e3ea777de3d1bb99065d456752a4717e6bc90394557fc0aa2e88b3d2b9dd59909a8df7b4f4fe248d2f0a5edbcc5425f45ed4cd73a233715f3898a00ee8b515f13f1844eb5929485e6069dc30526149ff6c0911517b1204b4119bf3461ffa766c39b1a3261288e3b48d5ac1511ee0351e32d6f90192b2c14313f918b4a8db3e69e0e8126ebc899d45df78a57eb1a171dbe1547f1ca0235512e8bac77a70d82249b862446b6771b54f7943dffc94a8acb97f52696e79617b9022ccc85b64c485eb713e54bbd204f973570d1e182374a5639e6bf9ac9e7fe1c206d2e2309b782ed741180c69ebc4264fabf9eb9bbc1ce17a6c38e1e4cbaa9098598aa2ff37ebce6000ee74f640a2d331292481ec63247f7dab3ab3c06684c91d067d32de52c79bd8f4c42ff8866e9be730b0ba93560e91558679afb2e1fcdc461f7bd1f4490520823583f897a273016661584cb66aaecb694e6a95907913701af9f20e3c1e07471cad77e07176e6877c64ee75be46ef88ec33be0d86dbd00c81fb8c413f0174779116cea6eb0e84cc04649c7db24104a48d6d77e2d9ddca978d7702619ebd70824df1820f76b7da27b57fb036dc7253f68cfd66f8b75737a8d7bf17658e1ac5135c04dadc15f51eecb52f06b06743258126ce62604afbada7900443905e7336c7d805616193ae466945fe82e84c4b1a6db8ab0dc28e057c864a29d216a5d8e2f27d6b3ece05202be0ba635f0d267bed127bec6e38739b6ce4f9ac55927e98d24dbbe8a0bea6a77124f8b8497ba3eebfe2eb37132900e9a666590dd0b7567f4c444f4da41415aaaf9f33b2c235c130988f19cd2de9ec67b27b9cd934930fd84896237a653556680984a34d930887d8facd198ed2404a33cf772de5ae00cc24ca0439f89989867ef07e426afcffc70fed84b693eeb5c2b6138ed80784fce31d261468632896efb11cd71c240f60ef68362649409d3b5b5daad18d8dbd2be72617f8c9f316f4d76828e4e77027cc2a000bd42d7393c5b471e5d849875139869709ff6a6cd90d9ff82dfac94157dfe5e7a8f6be4f43af59ec3e50a734ad338aee4022838f7d11fc9bceb1d417ff2feaf2289b4cfc2d012958a3c4e7c2de4a1e526e9ba9a6d9f15d75f885cf98e71bb0c55fd12e9b54b120b233b9b2d1dc275ab4795012c994df7a233378bbe2a6ca61cccb7897cf555a18406e42166209ff926d67e6f974dc68db441e0f121e3fb3d3d724ee9769dbeb1de6a839ce45052c7b192a1fce846c328c2c552af2fe23af1bef58876eea279c45f2e504348360c0edf2673f6963d116855060ac15a3560c432ccc83fa64bbe88f7a3399375140e5dd18bcceccbf3bb4c2515e2deb25964911d9a07b31c546386753207e5be16e7dcff184287367638539cba3f1dfe1e583ed2bf7f5115d4079eeabbb67ea30fc3a7e05b487d3b458eeddb26b84783004a7d4f1e5e255f54c7b6715e71b13111f0fa0e2ce651f226281815fb8264d81b05b431911f8733ddd51e8f77c98cb131dfde879d2ecdf060f09c8c480eafd5f5876c0f249f79cbc4df28207012c2dc1f7c96eab935da14e13da7136f5c00eae250a042e9e1acbc38f540eca826076aaf730f933460def2f9d6789c501507e2ca417c3c6aa2e1f8aa4eb6d257946b9e584ce803819fd34374a5ebd4c2d22e47300cfdf40fbd61fefe53100a7e33e61f9160b3b579c4e10e3373f18dcfeb4128aed72d11aff30f8751108fa899bd9f49c45fcbc9913268f9b4a658aba9e9eac34db6a3e5dc52c455acb55f5f2b204807d6e4a5e3945105b182bf13ed0094b5b240af926b3a3f9ca37e753e7000ff885c790c2d102e9f0c1449a1bd13de58cb41eb22c68d157420ac75555f4dd83188f8bb676d374cbf8999264df627de69184a4b6efb41ccd3870b79e8bc7151af2557d820902e1a060346298bf1601c796e32a60f40272be0ba1b993c5282e9a98f4c031f09a80e05beea94d1ca540b1c9e1428fe782c8cdc628634a5ffc40b1a08a4d26f89d9af3392808cdbd165521cd62ebb1e29e126775b94ed9e2757182b3766c96ba8bdc372b9025cab4037896e00a464b54f93b7a20be4e7b34d0e76f9c45c646651714b83ec7a8b76cb3e895da553bbbb25fc53c696c1c917733f84f7da33182dfc7f1d9fcc5c369e8242d2835db4e65ab59dcfee51ca3e7ba03fec6d87fdaa2d7950f350ae9d8734bc19f9b58ce47a7d833221a22e4669c12e22dce33103385a02a4b149c4fec2354e7f93812ce7d43d0b1f3008f268a1a2ec81344cc9c927dfc547495566f957b8c9141809730c1d8ca9ef2a1524246ad4ac46e83ba23f88488e0bf43c86d5c8717afc6b778de916af430ce32e99f3cad19cfc6a7feadf225edc88f59afe5a89a2150ce9d6b5849c2c333c79ad26b3dd8c74c10a82d66b1dca94fe6a14934002b3646d971996577f4b8d126304e8e80e71aa4332a5c240210992393d4ce2ea829879cdc93aed44bb0cce13f7f2686e56d81a240f7064d9b09838fb20bd266d1fc95c30d1f152eda9d0413604db1c52818a2307490b13cbc8125d0093413cebf3baaca0c6a97f9d30e69ba0e1f2307b157f00f1bb81b48c8af7c047e9d15113e11627819ce696b42e7a4773638a976b91863beaeb659c8c30cb2410f4525be25b24efb1233275c2347da475d35a53beda0eea096eadefaf97a5d34bae70e018fef3b45f9f2ae55820a29f01c2f4459c9422d6b9f77dd53c65f09792ee54c24f143eb9619e2daab7fdd855e14d6f37f24619254d7a662bccd359a3ac4dcbc46dddeac4f96632d63f5f9b69a45fe84168f665b3f9cfc12949f07278e8c4e35e50c39b613bc8dae743d2fa9b197ab34df1b5a2c938a1c31dee8f9a6ea72dac641479ca0e89e316605c8d0faa221a3ab1478bdf06502504e743b88cdd6f6d0cb24efb34d955a94c19c0bc2c479406735280dc96daf44db797de35a6c1ff5fa352f2416e736558fe19a57071ea9593935be3c3681d73b2bc1697833ef22623c064cd68065d5ef0d6a63b758f46987229ad29cb93c7899b50277dcebb873c5f7475d8186e27c0b567f4a16d558f897a3f7fff7b850b99b0ac1ee36a82f748bd07cfc49639e6bd9365509ce62ccba25be86c089addce581a17f69725274464d0c4c36308960ee1ac47f72d0db2de96cd43bda74f69ee554c03801136ad96cc87c0e861eb1c5cf7a90da462160f5367e90c2913fce6f69a464c89560576ab0853e19262a356850068273568e42f7dc12c82acd8eeb26085531446e39bac922d6016863f5b5faae6cce9dd0fb3a72242c7cab94ec5a50b32b104bde7c061d68ceccbcf2e45d425c0825a96cefa1bdfcf4ba2526b07a19f278e5c18e0d97cdd5d6ae5c8cc59dd4b1b62717f7ffc9519b045a56941b0b8ccf6db3127d2fa76d2165bafeb152631a0f83ae607f9085f59fa3ed6fac2a4a57da926ac1680361a60914da71da3c8ff74b4bd67f629e971fc44f0ba1be67d77bd2dcf70dfd6acf5c722103ae94f391cbf1affd622eae71c6a9d4bed20ca6312f406ff300e7a9965f540f9f46559a77d4f67e16bcb02a22bd894218c06cc60015169ce225efb136f9a65ce314b76c95da022818e66bed98b89b709feffd2857771e02a479cb508cc3e65703e8a524071378f7afae5c1502bb8fd199980e49f33012be28290ca1e87138870f326baf6e23d2ccebe0a66ce46b124c6ef48c742681c1e513fab6085de6ce72d0213bc0d3ec26e58d73a2afa690c680c2c69e71b539411163dc45825952b0a33c940d4cd5b2eb49299a9d8972021e804e6926251cd753492875b5d5067dd8033b8615252078844e7081d781abc0e278d94eb64b217bc616dc9319018c93b02e00c40c170e7ec45eef70bf61340abae87c3867a299b2117b0299d0b625c7adb7fcc0e8b530980dc90187007eac0e985d727b442773cb223a9855c2de52e88d3593bb53e909d0555fb9aa24e79ae0c5eb8e7430b88f3c66075d1d0ac1e102212e8d867f38e547813591f6ab4b45de7567a13bd4f5e9b48eea1e007285a97452b01eaf757edfda2faf1ef46d8fe5d1b528bd653e76daf6e1ead6a49b89e6099e8667ba6f92adc7c074f0da2b34a5ea1c97a8f5d483b8730bcc704b1807495bbaa122466b0bfe216b9767a525317fe25a59b51d9fd8dc38a706b215909718cad03d0dec47901a1b147bf019a732455b853f8d2e6d1981104b8306eea48d149bf624f05116a3969a9d2b5cc0add689219f276bc183f4cec987efaa42ec4addc8bd3b99ea9417bc7af9aefaee9ad99c7453fddf1ac42d98b775961c533a30fcced2eba4b1b2ec376b87f7d2627683355560b26f266df909c33917eabaf948ef0134f219d57573beb2d5c42b6843b4606df008384a80e139ee4d76d665706111a53713d23b0dc71c97a1abb00a0f404b5ffa242beaa1ec09abd798085f0aa83bfd0a744227ceb6fcb82c81d95f570affc5c9bd488fbc04b562fe88749b52c87cc438c38f02aa7dc98110b215f024044f11f05f26a662dc01a6949af9b0ea7df109eabcc8b8cb3079a6c48edf2d55e7e6082d738db876f0fd581d4f9b7cfafd993032444606df872c8f1861c90f8877bb9fc499e4c0a76fc5e55d743e1fadd7c054e3ae77ff3dd1f2dad0f1e6185075e7347f96672b12de99ca674eef7604a92da3a48909f0b7fe8ce28528957a5d37f394a38b5ca067f3c703a2574425a0e08cb9a2d7fb5c47b0e170e3980945d0142e374f4f32629d5b1c98436dce9228fdb75deb46ad0dd8d1f8f45ae3c6fcb962ae6ec79d13354ea83b1bf1983d39885ea3207cd832d4f9182f498e225fce4765aaa24c7f140c323f3630906c24500aec2a9603d1c4198bbb0d9e5ead1bf20d290748f3d71023913f39309fefd5be2e3e5402b3346d29585306dd455f588507bc16c9983b3f54cff8a5459cfec2b2ed6901253f40cf3f85599b6579d7e05815032947001ac00e74e601cb642b74a959075e11f8907631134b4d9d4dbea9c1dad5937cd1a96f9878c746a3e042e6737fe36398890ce1a7e4cfe212a10a53eeeae1eaf595e1501e8773e74e137ac8f9bd533084a5d2de4e7e79100cd4ac669903e0821ad5dbc101e78052ab3787cbaf3f24f68dc83954e2169bd9e66965cf08fe6f7f452a91226f5fbb523fee5cb439aff5ece1122cb9474f5908e31f23370b51a3d277118f37d896268916ff3d502e0ffd95df990027a815d10aec40e5802c3e2a224623e4a9041952a183722c64bcf889899eca34bd4613ce41d2c0a6a1b192a5cbaee825d5d898a198284ea532eb10e3351e5b9c0123985b4373757af075294d56b2605542cd44d8c9d6f905a63e8528028536080b7e06f84516489eda307fad7de57a11bdd3d41f4e18b362d80497f9fd6bfbe12844d3b992dde57a43c6989b8c93f9126ede373451c46a7278243e33988d86696f23b5f8974ae295f4767f3a3cd190882fd089ccb047515b714f839b878bae99c67d9621944699dc8c06ea738b35bdda64b107a2a97c8a2058e257bd27d779a21baa556f70e73e8b267d4863b51ac5c13473b7e168cc0497e64b1e0b2834129fe137a0f5b8607b173c686368099880badef5eb8364bc30c2b2debc7fa03b981b42789d92bc9456a017ba873e4be7984660e34e974066988a4912aa7a21bf8c8171b936687d4b1b1ba722acc5fccd53338d3ae4f51b02260e0a14f3895a5662980b15d0b71fce2957fafc24f0b23466b4301f10dfe7bb4221579c49d3b639a31ff5bc5596ec254d84e79ae852630e8191003712c3ab7a7d868f0dde6001ec725ed820e5b95747bd7854a8e65f32b646a8a4998559ef870d4591904e1f4cfa726c04637f43c17b8c354dcb6347ff975f1db8e8605ee80301446e20afd99f612ad8cbfdcf9d35f5a856ca33613c087e33d80f8338969269b3828cb56359b769637fd757353e2a311edcc13c3d2839385ceb79f32ede381c159a07e00ad188080a3913a696f37ebaf7c509a0fb5212558f27ab9fe4172d1d40df6f9789a5c72af0d44b9f9e0564acf6ff454c230cf52a59ac108f2e3b5c0efd2db787f471bb5b44f0f808050233c5aea918708444d721a49c10e277f1d2adb008d2a3fcc3b8f5dbba3542246e58cf94ff69968e4af1860c510016b232715d257752c8a8416a6c4b362a9aba3452f47c61c7ffabdd4070771c4de7673cb1d45b08cbfdfc99432bee5da7050abfcef86bbf8dd29c0ca159ecf0c9495a3e88035978ce6206b2b5521d0e4ec5f6a8803c7a360ac4e49f27bbdb0a94103d6ce51cbaa320887ea28cc8b998fa452e810a053699ac6d65b5bebb0156f82f291644ada9d59d3f4c0466731b43d08066133d32a085fec19a5beb695a502962a35fbbbbca40e3c4f9bde116cc2cce91815c40ad03d6dc8b81e54697f5688849d890c28b1b5b9e3bbe9a84146ae1a9092696a57ba0bdd57d8527d62b9d7a0921aa1bdbd0a32f2c8680b06290e0b4133015fac342234eb48c6e169f2263ab15ca43954a60c3b0a21de9cead0a463251eb70a2bf2935c71910d6fc86ed9c5d621ad9f0f267ddcb14e31b4aaeb6479e7b4998eac5aace43faa87147238fa8e47c723459129fb7957d3f2cb1136bf13ef9882f380e322568f8ca0fcdf3a2cb6484fa8802be4a1f30a18829b7b8934aa89d5f3b7516c395aea913890ea952d1bc00ef40c77a068dc9ed5ef637eaa8cdb365396e663a4c36c99906a6a1a64290df35785f44550cb4fd6967616cf2f34f49a1fc3a0db5c84e0ce7e19dbdb9fc343bd83df61435221a14cbc882b584f1f94c00cd46579573f9ae19068a400ebf2acf7315351de2681938ce1769f73c12bd1903238d5d9bf2b38a5423cf3bf289529d07488b8c2d94cb396b70e6d5daee7038edf8761b0a46aaa2960373994dee5e3050fcb089e482b8d5ec213b87a3e7adacf7485df1e21d2452f0012c110db2fb79791fe213dbbad0a51e798d20199c53cc45e5f7ba58494d15f8c74acd54d22df1445001aa762823d58d383e120e6dc7cd937a39be44edb6fd59067a6ccaafbc1f8145525104c6c11cf1bb190eac8d5aba2b4d776aa24351d7a74df1b74f39e6a5522ded10590bb8d72843ea05286e041b8b2d660038364e759dedde6c1a37723f92da7780a3e49898e6cf7dd4c3db1b5c32d178f6ea767dae266744c637af7846ee3d73022114271ea4805d550a6646b6023c7fea56c3bac89b973342bc1e70335da350beb10e1257510cc1a37406976301b20f2c7ba21636065e989eea799be4e004629687038b5c8a01d4bf6351feb4e6297dbed6722cc94c920d427a8eb6f1b6a6c2aa77f4d7004ece7a0b6a9977d9ba99c18f8003056e20acdec6318f3d91d84c7d005c68156146be3c3ddac3fa353f1319762dd8b788e9b3564162ff79123b33290a870b998c5a226442b35c930bb2cf360fb65fccec539515dcb2dab8ecfe9cf3725d5b388b6253a1c47d7b0be65b01f8923af9dfe556121e4b425713fbc5a31108e87fdff1bb1523cbde320b3e4191ac808a4e9ee37e9a5d20e7bef7e02b7b4ec580793b2c61809db7c65f51e14a65b7ffbfb3094507c8b4eee22c80b4030564ccc99c72e83d1736707de399d12573fcb8613d7edaa49fb98fd359ccffcc19d95ff220042582f34adb4880ccb31e9a5f2b7bee8dad9b76b26633bb29de77dc730a7c11b2fafb5eabb56b18861bab58c007c633cc3af4e9bfbe9bc342fa11d93dd22ecb658b1b025a503efe5cfe44459d6664a25986de3f286283e9908eab7b3e7d8037acf470b88920bcb3fe453d1d15c84f6f39e322531089e0582128c9182c14e6a82d892591a014a74d00fa3302690c113bec393722f9e0623163dea0fa3e653fbb131f9659d3082216b47df6cae3f4055017cc1ce21a5b571dc41f5ce3a32b1c920f0aa7f21d47d666fbb0b234fe59975ecc09743bd6b16d8d9c715b78253fadafec2d73a4477d09e54a2077fd9ffa348949793d6e5a0f56318d5a6a7818c803d0925e8eb11c6df455cc9057793012dcf02b0bbf1df511edb3103c28304b0e60134c03c6966d38c255db217429acc0a23ff737b172372230d1706ba53a5b7b27da399f6737da70894d1658c91b84759e7f0c404a930ff9a5ff928b39cc7f665ccc5bce7b27c8215d46745b8f08340c641b6164cacffaa8ef04f0fc52adbc1a976547152fb43ebb29a67b5d65e1119b8c972954e482286ea791783d35b82c30eae04862368659f6a4a4363d3e919b4392ccf61d8f8e078873ed654e02ceb6c3bac876bbb93d0c5867972991f697f696273ac5d18a2f62f97c80f23988516b906311e91c349c2528120749c0b9f9ef37b7a8ca4f54035cd7a1b89ab90643c329a965c32037e1d92c934784ba358d4ec7be339c8de2b654c95870d06d46703669a4aef065cd4f1f772aa96e77eac405ea53c7ad8611755dc2757e63d4afed626f060fe1e583842f057fc8e00a0e5092a1cf29c212500d1e99ed955d7b24a131c3922941247948417965aaac0d5ab1d601152df4bdc20a9eff5e063aa6d532954400d8f54ba9474c56aea034f5013e232c328ea50ca7908e32a3ea51cf16929e6f9d9d4090aa33b86a753e5484794e0537b73160a3c47667b10b4b70655822c14212cf418382779314597996acdeb24b02229a178a996619db709ecfe80b997c401c6a74966ab2004de4840ebc54745fad40b4a080fc0a9e49a81ec83e6211e95f098c6048a3047cdec2d61a05a1190c3c4715cbfbe6586cda44256559e09f5046f1866166a2bf2d9dc9b8b520006010b067e0316f555447a76047f34acaa297223116dd7a8719076232c810b69cfcc74b6264a2e77793c587004e0f9215935ae18bce95b721bd07563f2b918db19fe3b535762283d6ebf80a391067fa00b9379b8ffa984b24f90263770bfac8f8c60cecbe7757ab199eb7427d8ba64b4a5b501a747f37fdce89b18196caf651c1924fd63a95700fb85f1a5220c1be3dfc09d7213d6eac6f4856b97940c1c0deabd18a3abe61d5e2568146f9f44bca990c07e39aefb18a58e3087019633d75a07044afbaf83e90e789cba10c3a0fdfebb8720cbdf63daeea88e08ed00793b632573d6d1d25dda92b59fa9ad8411d9e96568012aae5e5b5ed76f8baa77d08c7a13411bf83329723a11079dff6c82a8c6cedea719f13b384cede51549bdbb2095462864fede01a185eb8857077b184dad79265dd535a793c7355b291fc7a618ebbc24903cf440406bc292ae85c5c9e171648168009d5bc8024e615427d20045202d714315cc065eb973018b46ebbb8e79a1d0604cf7b836e769278facc9aea85e108a318e549d1f7911bb54e7a53b4b7415f20b0e8cecda2f878adad70be07be1d8dda36141e50b01cda27dbf1a11d1647376ea780ce337df90ad4fecbe7adc3577fce3819ed075a48a1de7880f77ccc88ab727d474fe04beaf6df4b8a9db61dcea7eedd6a433b0b3f6f3b6fef12f2c4582138e1c3db5038a15561aa43c5092d93a22d4692a78d82294c9cf57e0c45107444593e80f5899372ed4c80c34c866f7f76f97cae298bda6556e18b840df2f89ee7aff1ca8da2d7aeb2aad48a2c66f391ea9c0ce1c70d6350516cd009c636d121a57136b8882f11ed448b3565132072a85140311ff544a0db221872b313c78478c3b01d059076849bc927ccccadf78a007be80d9dabdd81d1dd0a1e332d5db34e2e9d747a68fda9d03f4f36014d08586d80f267b31d14da9dddd70e62a07b1ca52a370d5b7d34552fb0e826ca01d651b8ab50d167da941a35054e834718e64358a98239e1f303e07e241bf41eebfe2032cca51737d0e34afc5f2ce804c94693cce731f3d02c804d4718a1c588338e48729a0f3b6dfa803d8a00f1d25ad232d93a639b58561a458abab178aaa4c27c6abf176acca7d8d21ac5c3967581bccfd2bca4ca780f70f8b4144af18f718238895a6d5e2b5b330a3fdb8d908e39db24896e62975da5b08a9c6f221d1f6e0c5c782057cf3be491b5a6cbd9b31dcc4b9082c611690cdd3d66dee4f208f4b7d73fd25c98d36413f4f2822687ba0679f1302e979ec45a1e4e33bcb3b5f0c90ffbe79dbcb0bfc1e92ba83af416fea02c7743635eff30d1cba4e3e3a1486be997bdc9b4f83e580dc876fdc098a2d4dd82e7fa43c474658603fcffc9d85e8133a83dd197db1eeba504c80d4bd49eaa54aa912af68b092fbdf3a905ea2ee117d37664d808fd4e5eb8041412899dffda3be145a62d11d35df44e56f896246b5361f3893a9b343d06ad753683697bc5e5e1d9811fd4c977ef4f84bf42bc2427a9f8c2b8779c9a763b85e5ad4604c45a34293e77b0db00f8542f5e3f14c070b3133c17a59830caa3b9cdab2cd9c93d772ea93d5eaabefa79ed8214703c5c7282cb61c96d7e83506478bbe202bdfe97ab86623c2023dfa80821ded77ac329236d66a22a39844e432fb5fdcd7c3b9492ac939945a729e4665ab8bbd05725908a418296ece8456055cd543d064b4744c3c4e0179bfc852a2a6d2da3d909dd07e6629295f00ab45a25b21af108fa20dbcaaa2f90f517d141b7850f43ce5f2cd62896686f8c141a80bb6d81d7275239c8e25ee57809f34df1338a2c9aa60b83332b12c1687c6c984fc4e1652a4228b2da22e1821f146545a914f97cfda56b0ba1130c8e8165ae3fc77510a5b745986f61f4952de8380ed90b796ccfde8a1f9ad57230429100af33646cbfd61a7efa9fb215cd023f00fe4e04419fa10af86d7674fde61fe7d717fba7de62f2b1310609b1ff13c88594ea5425ac40b35cec6545ff4c87d84be32c3f4ee8113c7f4378d4662df5721822a613b2110a803e7b7ba6636ffb16f213d54dc348325b18cee83815cd7325c5328abd4479eae502e2b9d646a857bd3426f2ebd66ae1aff244338584b33d261eeeba0d90c8380ba547bb2fb9e4a0041e21cbf45de6800ee9d85d11108f480483b379ad480284b1b657b4558b828ddab96cb28010d857978fa7ca0ddff084287c8fa904deb6a7d4558f63d650ada3086f9cf9609e45fa9254d68bc37f209e63de068e0c67162b1932aaaba32eceac9f2c5d9b623e6263d36e40dad14ce7c7ae60906b8bb2d559207178c9b33e54098dcc222948c7c64ee598522322d3d238a8cebdfc02a6fecc49afd956d80d5eb6a6d5255b6b1afb8ca7154032b977820ad9c7da45df99443d22629e2a30d51e48d78ffaed470ec7d6b7f8ef4da3ca788202711dab5379e07862078c0bdd7bda31f5ebf7da1b060261f5d4f9bb71223568e7b74cca1c26f10e8f03b511bf8bb18f6d1a959c2bd9164a36cc34e9c46f6e03e5f1a50ee8fa6d123c0745094c7ffad46f9bc76127da95b8431cacdf7c408678046179af40b1f4cf1c79fcc80d0c9ad26b7dbea573fd7accb1fd4b2cddbf2623e86d554c412c89f19a678038324c8c6e8207cc5345f70ac75c3af8d59324f8ad0df6cb8a9365f1b5c1942cbfe828d335c3e6887a291035faf478edfb1bc60b07ce7b96a55c36ca8ddecebad2d3af42c8341521f6dc173e560137544c6036187431197244c8461f9ceca089068f1c8a3af2f55f0f5b9ee6d13f5cbaba3f14b6d76df94011ead923984853cd2048dbb224d4c69e04923ed912bd65680547e826684d562c8956204ba76791cb8c652b295b830d3271c09de8d68b229985b58a78cca58897fafa23a2dbe2eae52140be8f4de6c2819530e145378460dc63bce864accab3741b094806904730b402ed768ae697c9c7c022fbade5559f106cfea1285d73ee51c94ec66faa800fd5ff0d4e0284cc3c93be8431df0fee389a7160508684698e4e8970bbc0240d81754e2c98057688287306bb8e818c6fd67616cf506a5d8b5c8fd7551c5233250bffa181c2b2fe44bdba1cd4d485ce3cf004d195231f87b5a9c1bd1c173eaf6dce5c582da15259ffd3bd8a6047b29f334995b674cd2acadb63543b8a3a854dad986389761272c043ebaca46bdc7966bac650fb9308c840cadf04d289363d5cb3875313a94fc6c2f06136ebdb43a4d98afad6d29b40fa58327c0b117d0246b2cafdf7328873fc8bb9cf39fea1b240201897c089c5332fb5bde30609759e7079459a7bc8d02448f2caa4c2e9cd7710940257e621539ddc02caa3c2c12ffbfa9efcd7057b9068356607f0068a5b233f26c9bc2f7e8dea0dda864302ba877029d2fbac826b0757ccea94b9e6cf329d42dff2bf473364ebf1831f171f738a8223607a991761fddbe41d2fc9256208edcfed5000b61e063e584fc69a76b10b0288d6e2fea347142132045e6d8408424e95d3ce497c414dea48042a4a7f0609b47834f04511ab6dc7cd3e01534331399eb124fe380cf638ea6be2e6f7a7fe7f6064607194eebd59edaaeb211b91078f871935ab4e5085835e7bb47a444deb519406b744f5ae518f992e430a5728e4f1fd870157b30570bfb1396eb45f61dc6ee08bd966692384146ad70833af6a1b5058ad81f08c49f8a67d6615cbdeee625842d6e6679afb2a5b51552878bdf5ec9e90721501251ff17717a65d74bc100d5baa419fd481ed0311c3585f935699b7b1e100a6071ba9184408252d0f3632eda9d0182f188d7adbeee60e422943608c7ca81e020943ad9f6ddca87dd18e6bada35d158bb2f4b7c871771b9aaa2fd8e825fffcc5834de51d7c87ef548bf2624f06923fa9b5046a069d0872fea1b9a80c9d624640699e60f00631822846468b7378e7461b3d0aaaf03483ed7ab4e2de7a8b4afe33c996ca820668e24ed4c0f93274f4319eb45580f4cffb6d9dffbdae0c7ff7b2d6f9cc0e9d84a6707f73b25dc923443d66e4fd8e16b5625905008511d84b9f6eaf17eabc654bb2ee5053967e63f7a8c4ef3a32183bde23e27a14eadd27328121226f36060081ee8322c840aed72a2b4c853dce9bf6d2547cd421c074294133b97112be489996c4c55e710038431351e581dfc67cca390c62bde59a124c3a9a4efa0ebea76bf2653b653007b64453d5c1677c2358d09131dbef6ab5c5aede285603e86b03a582524bafc3ff645fa32ba883ad7a03550889fb7c62c1f474aae3853e7a459a7f00c03c85725ba87d5b7392eb9bc7850d961ec27acc1bf82fd4258f392cd3530f0ed5ad24f7a045108d71a11bf40ff9378a5d0eabb0297d7572f9787f37d7941200030762ded94ca933534541e1d8c58bc3dc1dd26d77949084e7af942111dc0dca7f6167e85e92c85241e090ca70fcdccf0a701fb17146526a8f091d3ff042feb4252213af2c70b1505fedc851faa46df1a1e792e1c55a75b45fd972195d6402483e86967e18e2d06271f8e09141170feedb096156ec70c7b0312d8242bbd05b5792be690cf69f5e040090d854ccf5b9cf53f6ced1110b653aa0517147f6e7cd6d180d5bee065fe48a16c14257aaf92531d3ef6161da35d74ef84a62a098679e827536aabff6b172f086eea15bcd517ae3a6988d3c0884da5204cade9435242a7b681ab5bd3cb02c4bf345695e687543cf4e62bbc54e5deb6caabad0858104d68cf14e2cb39fcde07d43398ffbb29ad74e33f558f8f6312a9a6cd5fea66b0f16506af865a8fc580af3cdfd1e8ebc88551854299aa1029f41c27659261a95072d249ecdc7a43a78af544fb5d9f9334bec5c98398b7f4cb76570f64c20974aca6a9cfb25ceb94758d8ad5db9ef75e4f79d1ec7895e4b4c8b6ad94d347e3fc130cd223c3b732c775fb15bc255e8b30e03efd0ba570197b3262b9f4c1e678cbe59207326f58d4df49d27fecc718d4348505cbba1d24c367f17ea2b74ffafa48150f32fba6659fbf602ff499acff8a84cb0c8c0a0d079372d8dd35765ec037c74ff212f6986b0a80d0aa80727e3b706cf4645fa0f3ba6eef7b3fed9f463f0ff3a26731cdffe92716c46de9778326b34bf918958636e063909c659a8ef9f6c5a27b64c13d267ac9af5a282eb159280645d4658d8d5f4af88ded5e483f008c6d5cd247d3f5a671d55d2f7673169e193b736428e6b1746cbbfc7114dc22aa9603a6b1b9747e0785e0f616fdabef19b2982b7ebeaff59c01f738718e7e0b3e38a2ceb077893b82516424a6aea256cee4e48befe7663d1911fe314a7b689578271dfc3ebb3e1d3bdefdf5762b21aa2470bd427c1a77531ddf5ab1fc2449d74ff5cf62ba5c69995f75713b10d198d2eaa8ed53766d891273dd5bb20dd9667dccb5510f997068a89207520defa897323da02d4fdc1ed3d474fec6f1daf49a621627989c67b23a24933fd1dfb821659f64cbdf7e756bc70f089d89d15c889f1a366562a83dbdda60221d6a440b7bb766a5c3a1ed684eaaf9ad167252612e087ca41656965308c8082134a92ce0844bda30ad7e7cf96a317a89c2f8313fcaeb0dcad74d746ba05f5e40fd72bb6493b61c91ee28b4008fa3a932717eff20db5a5ff09b107412adfa09a4e78f135d1a4109cc42ec2d79016b675836f75e42790fa0ebb4f5b3168f122d5d964143f0cb4c002b5c62f3db3db3a9c7f085bd1da642281e0541f379ecf60ec7d479d513fed860240da946e09c1ddbde4744fa5059ccd06eff48b69964be049a7a6f63c987f989c85bf792f5ae74c77f8004449fb96d36d6a93aed0ed57ba9b1d8a88b404c1432aea4141d741a24cd7017609f53e9ff1380c8e57d6f0488af32f74da46d54bc538358c7aff5f7676e83cf58fb257a93a9d950f8bce0e7c3c05e344cd1736571011b651322dc40a574ecc9e6dbc028d7db0e8cd789cd51febb43247c306c910ff33858cfc2508097b6d8970098c5ac522ff7e68f9b5e3b4bf3c70959caaabfa11f0208fa8a2519aee750bf615896361e6df80bd21d9b1bf14e9038851501fbda90d0637111a698849ee4d02e8868b367cb4c981f163de7fbe37947d4050ad00f09c127df1d606a295e02b5309e7cbb69b418ddc4cd7f0edab4146d3dfa6a3e7c2c8f8fccdbe402da73c30d62b75805ee9e7cd196e3dc352ba67ac922bf02516bfe89d4bc14d2ac892bad620eab91a0a6e6b228626fc418fac54e8801f4397df313dab78e98cb3cf1bd6b37f1193f9803f44a2ec39304892b882fce0bcadb864fe53688bdafa01e1acf312ead73a866a7bbacf80b14758a0e7446709d3fafb37946e62fa754e380f83606b17b079102d9aecd1b3512b95dfc7d421c6dc94cd3e6d1507cdbd5aaff43f947a76d65a79938c5cb4c81e722fc7b0594b39dd205091208dd236ee1b2e09ee808084150614b962665a58dc5009f48798ea254278aef2841b9f400c24af5ef0b8c61083d2aeabd1098393b2e27d0108993780a2d0484adf51991968dd4ed03228cad34e29790710ad092265a1e798845de14e2703eb560e08473cd21b584bfe2c599030fdb0f635389eb89829e49310507297f2e60606d8c6cc7da999efc4ff796e9d995636b69ea3f0c448eb7921c142f27b8cf9cdaf6e7de03a8c1e250a879737e9eae0d4627bdcb3d3bbdac4053462d34136b75e79365e200ee2f274fc5517f80bbe5116028fe9b7034a0b7b70e4da1ff59706a85908daa5eee2e24d068902e04010f09c95257e9e6bf6bc6f3eb23d3640a7d054ba4ad248b91833dde2b9f0abb3b41f0138b7e7e077ad46218d954218d84191e3e1d9ad68294bf8ecdd1cdfa0cda2942917035c2d16bf983a900baa5b241cdfeecbffeb4c01118710f84be15cd74ab9d2b4ecbb8d1ee7fe356e202426aebe219c3a266ece23b1ce7230aa91560d6888b4d9d4a3034bd9f09987a67809685d72ea169ead50982569cd3606525fd5fa69a7552beaf7c3429a4720c5c84047b881ec01e8f2d5010f1483dfe0429478652310e897ba4f830d67f9b5df6a315af0e4a6469f7b3b5c48c934e4284a6ec7c893162c72ac5c4a5fa06cf48c1f60f8f5aac2f5f5c819bfdfe1776f1e2c1b5200a51a373cffd5833d085b9658e73e343a1f5c8fba17277eb6de5d4fd5558c57528af9f5a46613c99d0cb7f850a41dbd245073276164d54687f48e6e123bee0c3efc3a73654cd632406a32ac894699fde99996fca03cf8aae8169726d0a136e875cdf43b92f8674b3216093e763869f71c2e570020c2bd182c98a79b2e3ef181942a20c7120dc4fb2b26b6dff76567bf5c75d5a312759375f0c53fb11a32152961ea5a37b668558cbe55eefb7cf0ccb9dc2cab415050f080600280aa00eea1c647bf8fdbfeffa93f83122f19ecbd3d5ebd91e08ce500adf27d57777f062c93d39a8641ec6319326cd732ab8cea5ea75f876714fc56712b5ce6d3c919b06a6c1ff10377722e2ce70dcaa3d5c8fa334b8df138b4863735abbd9bb6b45c7bee169ac1d518fe91990ae258c7d5c1ba9b8c9bee1dc99c3dd5b97c02a9b389e01a41bc403ac006562892c2fe648210462e155c7f34802726afda07a852b259d1781b1769b25e6b7561a116a8cd43bfa373b588409e41ee26feb820be134eb7abfa5ad5c900d83c40d9e09cdb55bd46885a4254ffac9d2a81e9008a7531ff90ec65d1ee7e850957f2d178664cc83e5655ddc8d1ffd333a25b7008ea6c79487653d311c0c0757a375365d308501ba774a8201b6e63c0d0d2dc7502b854ab954d56716cd2f92a1c488abff270df3c1909ed26b879512ae3beafbb6d7816b228d169cfc64c3855fadfd017f1f39270700aa373d7b894163782717bd0eba342476bab9264a0fb313bc06d0fb549fee3725bb29e6ed38c668dc7148711f06a0c1176b5be48615a0117c352f7d036450821234c314ed46db9ff61c4eb4d7f3b98c7dac03d4be75baf376f40e5af945565ea2fe76978d58d775015f46c6c19a91ecdf14d2a27d1d34453d2023960db2ad61af9fa4b200fc3bd8986acc7db9442a94842cd564ffb64594afd4add60466474894e880e6bd21e9db2e6494d3195d1c7ad48ae3050bedfe78207a15aae5499175e1b8ff7a28725c9b6d600b32129b128ffc2d5b4a6569b10b9eee79b1d42a45551456314a334769282394ba68e8b0a26d63adca0b8e6c0850b700d158d0c8721b41be9c6a468fa738d1749ecf8e1c82cf523913381151a7ee8e5cd47377804b529019939ba4ae12c3dc3ccb7b4c406d36b1e3246e5b40e0eaf79c68025ffa4521913e4a94743de08e6eab81125abb37e7b41d5c17570d4c927a0adcd8592145b66bf429f83a102a0d9ea89fbfb27fe22ea823c48b43ada179a1581e7bfeab024034eea84896579cd8c48bfdbf28a2d9468bd9dba79bc41659a58f056b88adfae7c7015ee5c11eb718f1a97e29fd7e56c74c4b7ca685ee432b46eafbb1acda7ec3fec7b97903d29adec1c91623428b0a318aa863e74aa067b468d6445516e2a7d7a9c1152bedbf3f1b8d503e6be77ff0098045b8f8640f9fed56c1ea021e80f4a863ea01726f48fe6eb55fdf4a0b35871bb0410d1f0d4a3f456916832ce7b4f86aa9afd5ddb27b9150fd82dabacb85ea188c6a4797540498cc34e02b929f86f4cb40f254f489e06be73915273b6b66a9d4d8b80405f3ffa195ab69c5ac412e602b1fd5d6a281837ccc491d7dda920406526f28f649ad8015736890f350d71b505f58fd5cb67f52eb445bf02d038f90fc4d995ac5218374cb0da6a761294be47dfd624310a7543a0220f9dae50d9e707f55ee426e8cee037f484a3a5eee36aaccdfe4b9e2e9227a69b11dc145798465ac147991e669543f7e1d193d29c29f9e088cd2b009d47d86063e47a149de42fb8411c8dede1b5be966c6441f70424a41ea8a6205dcb347866cda910cb00d2930850a27830e733895d31278891e9059b4a0a8d9a9e3d7125245819252de17ea532974c1637844f96f1fae39b0462eb8130be4293c7add116afaa0de19c08c8fb69190387d02e4e8ab2632f93bb59effd49626f38f05701a2aabc796e5800bc45747ced7148e9b5227296983c83a3432badd2629e47a286bec83ee877f8ee4c87c2ea80405c9811b59fbe302070dda1a1d1bc0539a8a9d9c9f42b2bbc0dd1c9f1426cc33132485ac3e1432bd2a09ceb4e4c9aa6527459c4a2a6eeba9a0179289c9aa4da2f38ca9c7fa79742c4df09590566fbb7fd031ae9e0e04fb394556778f0f4c753ca3501603b218ef7875b207aeda72f23cbda38f4ec6d31832b5e47a550d1117f79fc00eb47e27cce6b5dca97279f7eb32c3fa4dea35b82cc48cf905215ea6880277c3adee6e0715f2d8782efcfb65fea43414368dc3823659d213e1cdccfced27a09cfb9b5c0b744dc3c777611da896f9e03f61c620b3da5488b81367bc5c2c4ba56f0e04ab7926f2c9967280fb3906e610d9ac9ba2abfece01331274520cabb4eab4df6e3203e370067b2596c066c01266d09d73095d30452542eb99e9185a79d366d52f5d6882dfadfca2756b81d2e07b82f1cd9ac735f4d416feb9e6c26776ca39cc36af25f8d1974a0196544485df4615bb53d759c7cf017773a099987778094ed63f4b4338aa6057b88f350a505a1cdb77de82941af0cfded0883e10f43643c781bb206c9189739a79c0a715da00ad903c6679c43ba6a263a1e0797fe3f1037b0936c51af786b362463457c695884c61afc68da484c5c78697ff961b0387c1e7638ca24eb365681d94e398ec4e4525b0a72e05e5e293428c1a4a2145b81744a5d6cc273ca8923751c582cc0b900102198283563f51401a803b2642f5704b9746ac34dabd946f3c4b2b44755d7f4cbd766d0279e6af9546815fc3d3dbd1506f790970dd70c8804dd3d46d1c503fee4500d4d1dfe0bc1885e651b0c7b733901c120382c825331f520fac0431c4e7c3ba2609505cf94415311d82978010a40367a3155c28f4d230c3363418b97be4ad9debac63f1c0773c76f559a4b939697f990c4d2c45d228200b9646a754bdfd141418c3df2f3b93574563141df0f1bd3ba690b2cb31542737d2b3930e63bb54b84ebc498f86f8793ca5b29e3add362ebd9df78a0104daf302d64d6a171e7499d2c3f914f89642261ebb78b889ad01ef0cfbbf5f8dfc21d9b5b768a6a72beb4553ec2c3521344c0140aefbe611b8453158c2ac7c664474dc531bd00d50a3960c8694534b2ee761d7ab19c5ac21b3cc27322763982fca6a67738e00e315b50420ddf5c6f22256954b673e44e0c91801e9158aa7d5826cbb70223960ad7e472db28001ec68bb6fa523d54641ff1a5e0d534a6367ea8667f4b0497a6946d5840937458f6408b90263cb84b5467c6e64adc9ca469a9d09df0a93624595b9b3b68f4107d8fd82b934a0d78b4fa8e37167851f37b5863623c4cb2289e4e7a383f4b1c6a8b192d4ad5e36d71f9770a9403df0ca6291f77ec2a4b61d6b084ba18be3e1c26245276bde0504a6e8a5904cd84c09852865daac883550f6420a3ec8ef62182cffe11c84885ff84d262a15a9fd0e8710e41da28b87bedb43004d7771a632ca247fc5c8ec79f530210b6f83a9a968b655c48f7ef1e4a0ca06420e237e621f1585f94ca48735ec60f2a9c42e70861aaf7d15b10cb5090ae0e3d609276a537ab7b23ea48fa8a48a71677a23c36c2ec93de0fac01bc53a76d614cbd37a356a0e8e1fb8f5500a5566bbaf0d906f73e0a380d267e594edc75553b7d8913402c3510408599c27102cad38700ed79731269c484677bd38b3e5a70acc19ac74c9b7b6652a7446bda9cad281440dae243cb9ac1a86394c3b43edd4ea9c6d178bb2a86167039f8829cfd1ec54643e1d8d9f20eeb3d7df2d396f7484b8ea7e8c671d4d88508effb3b3b2eaaa06ad8344ac34c80719d78bea6b2b14c890df163709acc8714eb88e5a988dcd1bf5af21fc1314c65f02307c2d24c96d1b92374959d93f7b72a3e65be91620db799cc05fcc3b39deb1864de57de68da6cbae633938d340ec2abc2f9f03b93fb8998947d127fd32a5fdbe6fba45a25b152101377adfb732e0295d5585a6558548afdd8c961a08f7c96f8fb9614276cd8853fd2392f15861914af97759f5f2d7db19f0d7caf04bfa479ba5b71e465ac456e57198f0d906267126054da814cb6241895876f8f3407a0d12bfd1aa2b58435f9efb0153a93bea91de5c9caa9183b66a9e4dc2a4dc42ea1ba6a0b633cb8d579fff73ef0bfc00709d33978112e3f6952bb72a19005311d0ce22bc4c9b22527c24ba558709d1a28f432b590f7c73a5e7754a48112a57b3e91ac81b1bdebcbd7d599fd5f2c322db7ef0c2baf0b7428b8c2e3bd722e3f0c70374b5329af869213ea69c5082eca836aafc39fa6a701c9748e384748ccf5c225e974e3e1965f4b7b2f187ca6947d6331d5f3d9f016304d063515b9652d83cfb21543dc98d7ef7c421896f9e0f7738336dfc1ff389167dceb5b6f9d3c19deb34d1794c72c15cbbed3b5df6c68037d09f6106e0d8fde7cb3d4ccd8245df8f2cd2f4eff1628f2a821364a1a40f3deca4642772a95ee4499283bf87434706603509bb90a4fbe4c2b9ebc778999de09129291e61d5e8b24455725d1ff0dc6dd92117d46c43c4cb41ba1eefb2a4836c1c7ded835526806d3dd16ab04d2e43aa4c4e1332ee72740a8d97e7faf20289e70d7d13ab03e13d638b91313526bdb34315e4cf07f31e5134bca4a68e75d0cb52bc4a979861ff98d144a406bc5f3c0cdd3ed18e1c3959b3ae21eaa71a0e6d23cd52483beeff1fb5c79dff067b459c11f6c1e4dff4a869ba0489c02fe974e748bdb9b35832fc46598c1e1a1a848bf2be71ddd15248c80e86cda6132d6ea0f334096e2e30b0c950b1b6118c60aee899cc3cd8a169a1b7d6b8a9f22579fcc13b1ee1268a350dd2eb75fe8e9288bb4eec86e36a8303fbf89ef271337c64b0366511c84640c7e1392f3799cd6ac4202e96d8d9d3c7ee47b077c1466b183090b51bbf68314ddbd377af7b9fc15b8a0640b447fc932d6dd3a5e6b750443fd78d8dcfb73f2cc5eddf6e6ecb46aeb8a7ff9acdabbbc0950d9bc2b6973822f51610957c58f8fdb7345cecc5c7546f20c271a3e33bca945c149b6e64217f973fa3fdc71157d45f55e1092a4f73cf24236e367781e7767786fde3e20a9373ce7513f47a368c6b1c3856d93eb7932f694ddee10162dd7b507f0fa9b2a598708e1f50cac12f010ce245995c510c38beea13345545b567133c515d50efdbaa737f8021960020ede48d9274fa00ff12df91aa1ff32d94859387f455f23d47d57f9a7e99ad5d465701aea7082d74db65e58e6e5d58fc61db8f9005f600c393290807277eb55635e175ba9037114f8002d89091486c4375687e8197babf43023bc65f3b20b37f14e46400dcd97c4f0ad54d542ab2d1cde181ebd0f438e14a652f3718d21a2b4c4b312416c102f8ac56f53e116649898d5db986ae3897f69af2de814f6a91e1c701b024c8f9e6c3b0b934029d60c4518be843af3dda0b723df538f0f404a235fb1452dab5a2cd96c86c089522e9c0bb52a082eaf63a888db6c54cbb03d2c1a379f41961b1b67a77c1afdd178c0548776c64265051ddd63ff479a5181d989d55e2755f470a14db907ad3aeaa1735436fc497594b32c9c55e20bb64b7077cc394b29af5f3f530789b6c605b6b7ff7525c0b91bdcb70128f918c3fc5dafa96dfe8ec7861e2aec51800155733a18f86d1d1c3e43f6c5b96b3ed59e3d17b614bcdb7faea9b152a4203e9482e4f4b7e3d1048d94538b811935a004cdc00101cbc052b766d725a612b5f59fb814bcc1bf922688de2ebeddb23a1657b914b832ab7927a35f10122583fb15508a743c95910ab9e3a513f9076982ff9ecd19af990584bca44a4af25b8ec496422a3d9a41f71ac624ec052ff4243e6336481e71760b6c6adc40793bee3a1e611c01c65a6ddbbd8970be7ef9b1a413bfef45217c379263850d78ef9de1a8ae1e52395e6fd9cab3458c2803e9214dbadac3359457382c28b5784c90e5ea0c24ee9dc3a1afb360a0c31d273fa4d9513d89933243518e7bd3d676251e186167931c75143dfde58037d7e04af189a4db60896571c03047a876f7666e5b90d3de8d82946288da6f53eaccd573d0a3aa238b66a7274641156f692704a9dcc3f70c40cb89bc73b8ec91adc60a259dfaaeebc01efe639e129ba905a4257ec104030aac7337ee2ca76bcdea06e4182392d545421ca02698241c9b38b86f66ebe240beaeb277aef7d1efb2ccb98545f4467b0be15464ccad82ecae3be8bbf635100192cdad7d0152249e926714d6ffa4156d6a336b314aa57a6e4b279080f5018d97ef5cd2fc3062156641d654c8531129851056dbd9455079638f0d7c59277de867954b38b387128714719c4377a1a043b7f1b7413bca1747c90f2af3cecc4d4e7972fe23b709131c700c4bc22798b424321f2ab12b028a7fe5c87c66fd518958ef1db448fa31904e5579d68e86465e84658b9394727c9eae7984ab5443dc884f5bc062cd093fe11ac93c6410458587a4a8f0f60ca5dcbdc48cc9937a40dbdde6eede0f7f7a763e4539183e94a507f6b8111d3faa603a873c2ca633aa17add3766d1e79e5b461f09a0bf9a0d50dc1c76241638484c9cbab6924e2a2313bccaf32e08fbd032cbe73c55f2b1f2ee1150d62cb0735009dbb7e9395f606a4b108808a3b72af61b212cbf6451fc3454cbad324700140f371dd17c816263b5f0de82bb6595615582df2cbe30aa4d2b4b46ed9947bf5140cad527467dde487b24cbdb10459d8f2e5e9c626fd7b864b9c3d512bd472e5dd7eedd89746e491fd3b3d0e43f244402be3204cc2f989dd40319fe28f526ec2bcd48e2b3fb3baa4b96bb7a77d05b574eca6a20ef4a8eb2c25963538b4d677b2435b30479d637ba7151bb4e2b20eb7d34c6f0ddafb7c1e5ecd5b5be863298b8446438fe45bf480d908788b9b33718ba945763992b0f8ca3da34989b9b29c1184f77940678278b9ffdd10666e8508b0dfcab109926d2a8338c95217afa39ae6191b32eb232d09cb4679ca79cd9eecb8a61d47d85ed165fd2d63d2d73c599e8289a6bd89874acdc97df33344089c060e362ee72928f6079f03a0805e6ea2ce4ddf1db7edd4b4ccbaca8a1f5ace4383af82c5c4a4fd459f45c5ecd276b604fd4a29b04b1521da80608d9e95ed9ce3964bb989f6905906964cc3ad3650c15b152801a08dd09e5ab21372deb68dd41b1d02dabf0c6d8f9ee381efe704a229b15d71702d6d4681b35ed38cfd13116e32b175dcfe03f91b88a2ff8b53a84ead656a907838cbd4c32a29f093db15336c8a258f9872c461c44d8cbb3b1b3aa3f7bcc1bf8c7e1d25425e608bd7ad5e1a6361235de2d4fcfa4091ff3b9fed28d9c7b13cc6435e872b1f5769cc6f29bf22a4740bf4722e02904184b04d2b32cc12e1d0274f54dac37a58f726f2173bf3bdcea7dca16ec33ded9b9b19eed74c798f41155b35ed8ea5ba901677246a6fda0e74630c87166b36c52bc55a1017ea3ff7feaa71d32fa86d88b201cac0fd13b137fa6e48f6a07b697ee9a9bfeb188b285f32fc4c91a0b0dc861edcc8536d2ba8a458c300fd20943a3de2f7dd909874a626b294ee7ec97b83283bc961e7186be29cba95170363a5f3813f1d6dd10c34b1307fff5a902c65fe60de949e662c6db8fc182cfbd0bd891c9e0418bfc8f907c6ae05876c40943a8ec566ebd85b433f082f73309ac80870f0b950bc7bea49d1baf919ee7bea040aa7da293916ea30bd919f246a874fab7266188e17829cd720cbec751def7be266cc5adcdc57e858d1c2078b45743cd34802a05e39f5dfc465f76b3ac28a91cb56ce201ebf9174150012f5f4a0af8160cff8bca609b8dc3ba88717103681e1f0fceff429a24e3fa35ea6c1eeba67d15fbfe15ecf60e17780bcd635601146045d957339bfa75002f156eb2a8d85641ae838698099080a2f8dd43b0a3f0bd290f25c57116933001692203d241abb578b7961455eb6932b2987b6a51eebca2381a8cc6f88a83a4caf9ff0c819932bacb7dd74e09d7b0f36fbc157ca105d3d87d0dfa0d132b3241335f44976bb22386466d190c478a192bd6e4a4f6e2b72a0daf5f9a5e4fec67a0fe96318c6443c02d83051bca466e43caa4780bdf96177bbd2e39aa8ff830e1e706e9328101c6a0f68c70e5d5cb32792bb3b12b294a3f9477c473267560716a320ba5d9595bac57e319cf70229693a8e7457a840f45257d020197b5e805e0d89842e8019c0aa39615acb785b6eda9d4fa7fbca40f3d235c477b918b0dbff518fd867cec9a8c1ed08d6d309e784e4525f659084e6026bab587cc7f76a8b8ba3cc94848eb4e05a5d72900508982b75c272f6352957e9b239036555c3ecda2a565831f069f235280e6e34dd1d00c6ead2f37e944811fa5245b7714bcd19b7819c612de7870c3ae3252fa678c5d8513ba135a61df9ba621361fb97427423bef386cb6f9fb26e4de2dd2bd71d8c7b121a6fd3885e0228bb7d93f9a624341bb684ca2508f363ff7f4f5b983153a14c01e2f621470a644d1303765ac4bb2d9a7be4c73d236bb971c975b2e9631063f3ea8c6bf9a56d17a1d31cef437bb6edb66ca2e1693a70c863c1fc8a3b495c42ba809571349f0c4ef41bea2ea5c0d8a7381a9e5d409cc8a82b547fc8171378bdf14f3a7dde805a4bdef68b53439cdf4d7760883d36a3d6af61177ca293eb117c7f98b972d84512ddeca212beda481d7584d8a0b7a09e45b3a2ace55f4af2534866753906ed05608b834ccb8560bd04897d23393935d82cd18c3a25ac9b1a3968b085c4dfa16ff78290f8a5b1706ddc185573ef5f36063fdd180cdf0f25e91965ca7115663819e49fcaf78fb2d51ce27aa8b93479ea6ba55c3fe6dae983854e31c4fcfe1c462aba67cb81c51ec3a6d68def40c260e7035b60450da2933306edc3fa3908d54f2512be4602f1f0266aaf9d56104cd196e1b20f20f3a78f7823fca9f1e7312df11672819750cc0117a3791f929da8c62df9043fc07d611108920c0931c60266aed6c663a965469dc3d97da954b0cdecb630d8fa2e7ff8b8752e7980e34022cb644692c4c2b92abf1b553ee62b32a3e5b82ef14bcc878b8c6e43b26f08a06070e28ce893f297a221954638259e9eb27731690af24c341a46b43bd6245c86cc3b124b37a12c88b4e037cb8df4929e2d18478053c10315459d89cd8f66c248ed717acad23d85d55491ccef59d4b67467cd38a50039a6a81e7c191c8a493bbd00aff048d93a0a957a0aa02e977612284ce7e77806fa201fc1b7d1278dde67828ca3ab3a3f57841fffd4ead06e273ace561a566f2a162939326b17f88414183a3fb40ff6303366ba6a20be99c0b7a8dc952adef5c5178223f72975b918016b6cd81d6d826e5c94bb1e82c502550f0aa50e2a10e6a5964881f3af98e72457ea91a9bb50ac3716b5fe1d7aa5a3416d82b56e39d3d2168397b0e84068a50b76e9bd3c978a0cd1d4e1a64c90f3cafd59e2075cedfe2325632313527c06559f5e50f50fd1ed52dcb3868491af0a4dd039edc79c3a16207888d1c59cd3d79f9423eb31ede940a238f2cd79cc22d96085a196b19ff88af7f309b96154c513dd193aa8313faf0cda746c218c33d8b2ebd2a5f16dca0d42e6f3fc378b1e85216dffa8114fec183628e54e624e6af89d19ff62e1b92a9f21b9093ed79a51b7740258ceadb7f8d30088b310a7c34889e2986b3e6995a56ff728819e3b3f4c2b26010d5e53f9aa2c539532e61df2ce4e014d2e7f842ba0c7011ffdea4b924e28ed7aa95455d20c539c22bd3b0d642b2f79017cefaa281c698d2d7997d52d50e4100330116b3711da236a547f543b5f00b64fbc7f2b2be55128da548ad2c68f7c4f89d2421a9a842bc1cdd591984ed4028c1973c0a682132f172b25202795f55194d54ba98fee041862fd37dc1bf377bedef9b44299d5ce91b6165b0417d6190fdc64cad2d0240fbd4250df2e9f9a9de244d11f8695bcd26074aea7b2fed0d572443cf5e7d82796b1d1f817ed4a983eb486b2ba1e5fbd2a799677a75819b3b014379d1be4308c966e47c9539e2a6e1ae3815c017335669203ae7c129d469f68b164a22077439077c16c5228fc87fb2dc8fdf13412eefdc6aec8829c189efd1bb91ac622a794a57e235f034708ee50b75cbdd3485baf27899c652f0acfe92ca06f757e06b5bd88ea382c07d04cc0d4d15b8cd280e27f575a45b8df52bcd4d300fe5eb533143068decc91a58dd56baf3caa265b94fe2c3b98c8a18443c224bd0afcfac18beb2ff456ae00119a8d463958b059fab43ea3a36374241412633c9904a47c561985225695e55cecff0db0d9f4fbc6e9cb20e0a965a27bde003ed474900902efb27967d3fc44347da405d85158d91499f2376cbc530cac767f0a8b5df6500e181f7b87951adc62e9cdc9315cbce444b2a463d6fcc15a561962965d9da1bef761b79d9f4925bb8717b3e00a40b9bb917c6e597edab72814cd1b27a56ff4a403e60f007a7e3c97539ade440fb6f7fa7558cb5e316a5a56414878e4b6c390741eae51bbfe86333e7f37984f1394d0620257cb0a6cba5703b64889a781fab351bdc492ae30b6a91d99df72865036b632ed518ebaadbeb8e173ab1523e317b7bbc6e55b48f836333c6d0c9f75250555876895643b54b68e480c9e07646221edc873915c48ae9f8e8ef217e1734a77cf1599cad0575befc928abc82ed62f025216f3909692db8e5a900882fb847fe3378d7c34adbb9fd37063d805839ac89829d50cb5ea8dd697d0f6bb557f07a4ce1a26004fd911139bb7e2f634d287a104dbd2d6819f652c481751d533868129e450b965cd31d9e2867af750e6333f748fe831162cb9aafd2d71987d257610088b27098262db0246a569ab1b3c667f348b33b1eac1d3f9b3bb388c73a1e0a67f4c6640ec1aefd680acd77aa0064cc8725fb51a4d491ec0ffa587187505e7eef8a3088f2b493cc7bd32e6c7060e297b4b113fd8f02c9b78c5b78c2adc5ce8cf59359dcf1f4769fd36855bf2c246f8ab6cfc72d6b68f99e371073aab1e3cced9153771e88b4ebf23ac884d43a31c1a57e4d1a6e0eed97c75cc117303872278b1b1755e0946b6f18db258637889e3d981dcae237df3ff8e33319790cf877437518d6ec109c6ae2615e06a6e9d569e537c1e54841869d83c5e61164d04ba829593a877a733849cd4ed3e4fa732696164c48bd53e253f8b7c3e5039e86df025e4fd044554864cb35f42b8ddc4c748bd1e2bc28f1103fda6677534bbfc128addc8840c5fb5612e396d51af593ed185fb41d92f8918c5fe28bbdeb6ddeb1561dab2ba845332a9faf101e491da955269f56399ea00bf15ea1fef53b36d6284e0eb12151b3ba979e58240735cba3df09ef9145127cd0f9affcec6bd216147c97af5fae53be55f7f38c10b909562dc45811f5e2912f0a8959887d63d17ec28a3940028437bec5b2a9a0499f1dcae426cdf17d67df262614efa2b660862c96f4b48c804b2db9ddb77ba4e021bac61dfd57fb3038996518a8851c51568ab54ab24fbb6f2502265f4ed3800e90c21b3a87fdc76b847e6a557d3a4c667fdfd8aed94e5a54f2fcedf60de6a730a7e2ecbf80b988d774d54bd7091d128048773c15aafa840fde747905372d557bd78837395b29c37e2d86c2288329737dcdd32fd359e706de747fc0c24c857248febfe33db1315a55bad516fceba811e48a226e5089a913eb2544b5607f946a4b1e1d808aab7d456226cf0f22c50284e3a4d3d92278f3ec03a211a1aba5bd18e9a3adbfb5033a1f721949b1bb7ca0bfd04d2c20085286a0cc356bc6a3261ebe6e96e90886c5495408f5b62e844138538156929641f42b7a13a4dfa29a36cce9c3af38e76b936d615607d52a374fdc2976cd1b0edaa377117a5d1953c6a3b48757a0dad3538196fbc49610741c3afe2723a14c6e012d5a9de6396b9e4e46d8982fb7532e3e7823a971a421825d3b5f1faed57aa5b030768311abb0a26a3be4752a3412822ddd95384b272fb9e0024cddaea7beec0aa2a8aa21309c342b12595a3d9b5f210dee86ac762c60cbbec3df5da01baa3585bfd28a519fa1c05b53df363ba42a5467acd394c4000f3c0394226c5a5e0c7f5f12e9b606d274488142b8a37bb38136da19f34d927d62faa672fcfece3f5762a66676e5b4e6053b589132fdb18430e384c13bee425d4c3ad9d5bfc7b141de65afff3a0baefaa757e9f22af02fcb0086ad3780506ac86e7acc4d1e7dc5d6d7c9d8cf56420582d13265191664e1c4f1594c0e5350ce9a8a9f6ae35d3922eab447ca8dc59b7e5daf933167aa2df808ee6fa4a7c7a1cbe7a85b520ca4c2d86f45e0e199a8815e43c45aef807f3ce7bdec12af362375da6ec26dae98ac24b5fc7229256ee2e29419bbc9a629ad5dcdee526c6357c81466fa9264a1975f141574e106f47a88f547b74d10de45ed0f79286cf8049652a2026919808e99656a4d6a802aa8d26b066c157fbb155cd35a27ac23a91cca99ed8d541c9c061e906eb32f252a92e1986646c865879d54527d13488d31344aa967d6faa572dca8ff0c44c4bcb7eb02e3cbdf47d22cf491f5e22be84c7859fb586ec2804df1571dd943b02a9d888b1334f5bf43bb3ea2c2e9a65505d18bc4b81c6da1ab60278a04cf43cb2c17c0e13b9365b58d344adff6f52bb80d5424ad2787b52c16a057c2e0817ad97f0a7ed0b5f01725003cc9a58fc6ea683fe8bebed133914d4a6e6647a16e34dfe74454ac4430356fe382ec2e218ed57f1e4d6ebb1d88c86839478966c9d9f55aef00f99998bdc6e514b9d4aa46d8a1fd20b65e4944acde9cded6b9946610db379587d9b4cf5d1af1a2b75c9da52cd45c8d27331e001f34e16245d2dffc5730b89b9ad05f31a83d8d0dedeeffbe0e2f30aca3f420151958960deb56bf7eaedb3db5a5db2d978155c52d62d295871df0db4d040541e2faa9912e6e11ea3170a6be0d1c8b6a868921c9ff325a10c70fa0d0902d97d99792037daa7f234d1de1c7d42ac34547eb0afc54372c4425ba418d8afb9a2051ff5e708eec6c34bf81d9b271c35764c877966b02bd0a1ce64b5b40a6667fd9da4af20044e525f4dd0cf4c1eff325570ba2ed71e00e9b2c38a56063c6349b2bb698d8f925a879675e8b427905681ef7a1827ffbaa9cc3a0c2967b064c881a1a0da502e7b391b52d3ec0aaf3a3d0478fa8a4e435874fde7aac5ca5b76a7665d641ca3f73abac2b26c67a1579efe65a2d7fa3ef0d0ffe03d1444fc5ed1a5b30909759883b0f85abd11186389cb1e74f60589975e60735a661e360c35db015587c09f63a995384aac90be27d8421dfaeafe201f2286a0a7dc36e59526ae75e7151a87e154c0195533a6f78bba7232a867d4940184c676eae67463d4568ee93fd1ec08935f06bd9afcd0be5a2b5cd32032ff57b363df47d9e47ff4f3c409f866aa9bc39c28a313f3cf04692c025dc5716f56d96b623d171e1c7a0863dfe3ffb167a0017d83dc52c4d4afe5090070263d680bd8a896ee0e57ead38576d1f956fb1fcb68d798fa75c1b61086d85eab2022e7ea0e98096c4ab6f86a5ae7a9fe93183e7a520d930977a877636c13f063e4e08d36583ee2483b8663b205df768baa2f7ad64dba4163d10248b348cbd0a5df906f5676b0b3de12124db39bd67ce35c2235f795377c4257156fd5b852571420a2e5be050ba150f3cd1768bc1c7bd99784802b5a173024141ce67cdd1a44258d543748cfb4f821e1c904a2b87b71d3aa59edbb98f7e00021dc1a837f063e76ef74df1b96db380e8cf6cce1738cc359cc23e2e21e6294eeac2ef2da051ceb9b76f0ce30c3d3b590d916ecbba35e68d33091be9c2b4e4e66231de05eb499478efd1b2e01ff5fb7906b7cdfc5b0f84b7017aabdd901b32ca8f8a3077ee1f5bcba32d5cc2712d14c5589fd3fc8352e281b83cabdc061f63f64b1db8d5f136b22ede8dea131a816cbd9114648906e9897f8285aaa20f182f76a6006cd54ebdfb58cb59436e215c0ceb0a47447e19c429936cccb8869e75affec82c81238941e0ac06c2415c661eb64b768a0ca2cdc421870a97fb4c35e2e414e72373a6bd119fd2a5281086c2b3a4cccd7dde8374ee424acd2c50120b7cc98c10a88248d4d6180591800a4edaa8596a31e1221f61084df3d8483277a0c35a1134db01b5f25e2f9f03bfc2c647d0b18af864538ae3229d055108a914c20e7f12e4ff739ede7b3df671c537b83383d2e193d8721e0f6b0741c9fd002eafa52b25e0a9f4344601a1aa8e4ef1a0e6eba7320dfa2f71139bf0deb4962c2c6ace6fefe9899e3a57436ff4fba11f9a9d1926d2495470984921eb89aeda57d74f645ca0b5fa31f604c26dcca4244fde7b4efdcf05b1f095bbebe542810df9454c64b30a0fe4967bd431ef12a992fd87e62d53d67ace2082a09085a6169b638cc68599257d0d49b8fa6b4e6069fc50e8f607b1acdbe1fc5f10adc3e47d8f20ca04cfc3e7821748d5f97c18f4a6f3644bc7a0d691e048287a8dad18ed70f930ec3b6b02cf310e3d380c73c50503d644e7ab8ec76dc7b626b7501d9ccab6bb4e4125e898ff35fc597ae85be936e09e05a311e3b6a427c57a7041b0775957b46f5925743dfeca3af61c99a76d4dac900963e64a734345f3619b696394221f20dea097cc98834ea7f099e12848d76d1568da0dedbbe5f8bc456a761b5c079e23a272c3941bc648e127c72012acae6afaeac7c937313581fe333da396f66c6e653da6ade869476e9107f81abfae219c32ed368a94d45efa7ff7e37f274cc8d8d9f46dd97adba8fb16db65425921697d0763aa1047a8b0f9b7ce866acba13f30c63ce6b72c43459987471580967faa00f6577fcf652bad27ed9c6a81436f95f969308160b0b1bf97d26c0002fab1ae49c4690702191fe9fc65661c4769e3be6be9fa498161b321d11cab9b3c32485bcbc232a668f3ff47e50783d55a79de73f163cf1fff1e189811ba0cd7fa3ca17c047552b92425762e080f03f2a45823cc170407d871556b7fca360dab5373676a0dfd6f5a95c7056e6004c0842b4705d93ebad42abdb6bb947554aed55629abfd2bf337214672adb23a475c06a032af2b09f4c1345f32b3800b6baae05de20e24fb2f737702872422d4877185b385f9716d03b970d7801e07ae8e35b4262acfd6f769418a173781a31289ee14b1ce80e687b8f09dd8fefbffa9d892cf80e8d4f0e038fd52f71f0eaa85747964eaced2a9b01545f75f8c60c354eb857f9a5f45f851da49f739ee7716f04805979000a0db22a39014509f2614b5d9e8d2385fec6a5b70b57e5a4c7b3d468433518a3e81822803fec0bd6955ff3a0e97362148f92756ad3057ea969f817381d2f4f6fc2cd4c3ba6a2c5c7eb50b5909296ab06bb8b55f74ff3eb00ece94579d50cc824f143c4575737e3aa8f0b8f5ce19dc79144f2ba881306a79093f277435d1e384e833d5e4da31058b09e138b6ac9f4af349d0569f44c534dcf57c4ed1f95eb4327d04ed89cd9f2d180b57dc1e804d563f42213de7086b6f247c685a04db443141372d90e8f527e0d43498876240936f9bcb5ebfdc81cf973afd082a91f5bcd738cc762a7ea4fe8c0616c1c5d51f7c9ed39b73a356881129f17b772d1ff6885712aef95180c92f7ebcff0b3c4877398ed347a9d91ada46c10156e793009bbaf04145f6597875818c2bf4da4ba665544b76b7d5b5b872545c6f57f491920f2a9c171b6bf57d66bce7c60c03de9d345cb0bd4b8d50c02168b7c7776d9451a7de3a8a3d3768bc92c1b361388094cef7d58a1cbe62baf5a7720c272272a60932d3f791cb3100b70313ec9d5ced94a89c1824ee5123fcd7df22a17b366a7a821d3ee0bcddbee83a8dd79961632dfd577b93bb32f6175cc088e2e4cb8de777783cba3eb14ef70913c7c86003a0a2cca5e93558f8f828b9521395a5264c5fb5d4d8f56dc0c1e82de68fb43657b378174799d42ef033ebe93bedf7d4095ce3ab662196156be9f62559e0a4e59bc2f483d5d62d0ffd10ecb2d0f8991fc97d9aa2f9f62596d9ad6f9315657518ad4783e4fa519f2bc96af32922609f77940c8f8254b97c51302e8abae9b5b29f0df07b1eb93148f25df197f9117d7740ae42f0ee9301e144c0dee6172aea93721210e10bb78516d7dd973a607dbf32dde8cfea6ced8ae0b9b33cb8e176a5c180cdb00cb0b9fe12250162872e48b2d305344ccddf69dcda9884a97043879f630c8393cec10aa71fde3c54fc47e8f1da6089b35154ed4628c11d4aa6042f9d7c02b938e15938d30859093bb1038ee4a2b4b06f460403b5a6971cd1834b1207ce2fccc878df8942a763de63f1be98df90acf53f9a957d62230a4a768e53d8dab759dabc909f05a9f824ced2f45d0815c1c2ce791b5338f8c7a0d670495be0b442d20b50f6fd69114e8ccf882e86b68422af0a86686a5dc06910d96bbdc8092a57718500b7989b97abb5b7babce17245e7538a89fdacd4c845af79701125fd6202dbf26a81aa7be50557212d72481a885e9f8f6e4391e0a6069365c73ce00a3d7422790bdbf83aa6902b5b357b3ce8c9866031ed9d41547f37c5fd150001f20d190160d4907ea9c055ec445a64e3c22164b857b3b6a30455ed6be5e3df21551135d8cf54cfa5c95719bde5b489485f24222b88e484424b42cfb8d6f2345182d23d2e3eadcc5f2fc47e11616d0cbfd09c2b59d14792323b2786ca0cbea0bc9782242d59237848696249fd8aca72c9a127c331e9dcae12c6b97f6f215e18fe25d06b960793a39a60ed068010d7afca6d80c1e1c416c16dfa4744029b865b8a859d3be03ee95e8f0fd0231e08de6cc696056b3c411ff417909a6ffbd69743984c8888df9a590c44a6a231be02e9b770378b2e73ee41a95c415e70e8f44e2838c16790509a4c71d2a6363275d5e03a89da2fa1ec5f78cd54247ca57a24c9786eed4f915cb340cfa06d83981e710c94e897571bb5b991723380cf59497414bffda06569e4ba50cb7c4f3c7bbf09159c7f5ce986ca68ddd7c78c6ecf6fcf20dc17c47ca82ea20c1e307ccf9aee870efedbdb98fc3dd6e7469d812656dc9c7a016a8469092252e59de1b2bb2b4b354120496efb5c70ab35a115eac8bce53f22b73243a55b7023dc78c2e77df364c781ab93aa2c9fe50e5e594feaa7b3d67f583179adc155ebfc38a102f783c41f7a073b89665f8844b5f15cd7176bb38dc381c6283a094d86caff9b3d4ade3bbf05d1a99cbf8f3c0d39262d18127220357a6ad43cf501e9a3ff2936880da2484fdd49e20f0d82656e887f6310f5c493b812fac2a7168bede6f37b3e9dfffb31b70dc596edff577c74104d241af1af3e71be45153333d5680a5605849bd1072fb625b5dd240f0b8fc78979db1685189a3a12f3f24cff6217ce0b3499aca65640453cb54819c918270557ae46af592543559500a3717e149536746391fb28ed99d666b82135420f00bb59e579722d870aaed53e9252c94c1f5d90ffc682327a8c8baa3817948b2dde8491914870a08f95671f3fa54e37be32356bf54433a9b0e593d0bd8ab047b378932cf4e23fde3fee0269023df767adc36601177b002930ce13f6b4ac2f648ba610f6543755db7e29020a702421a84eccd9cb24df10bdcc13a20a0f1f362e28986148ebdd23fa046bd230a9fff0fe46ffaae1faabb00d0b3ebce857c470795730527c0eeb5a91e5cecbdb385c23989e3a61f63fdd70748f27e642b39c0174de25e00e69fb14f80b8be58c81cd5530659af1f3124dc9b1ff435781b244d2da28f247774149e66a42cfa93a5c18d3977aaaba9e8dbc8de01d3c3fc5cb0578a6c388e429ddbc7fad8576f39e333b35adf758a6a6e698fe9c4d4144a14e71cdd2bc3780525440d93a85057cb5758b1c4f34aaaefddd0512c8877bc2574a6ebc8433ec454ad5cb86d3aa267db6eb599583f47a8ea5bce69e5499352d888f48ad81316bd24bcd5a3499048fe697d6caea62320156004867446eb158ec8d6432348b3429d5b50329e417f81c63be57ca83bf71566cb6d8052312de5da70d7268385116cdef80aab222c12dd1fe5b2a1a0af803f05ad6c75c7b0a1c5ea16a117dd3047a55d396dd9e7e52ec2a182c7ed0f1e28633c7a2ba0dc79aff8ee54042d78d72c1bafeb68d821f78c6ec8fc27f366f3252edcda66c39bbd6bead35478a9ec3405105151711222f695177e3257a82acceb16790dd972270565adb98ebd77e674f7110b1e6e3ea6ec80ff64b512b101410f80b40ce62abd52dc795d0cd93636ffa2968f9f8cfc399aed4292b4ebc15b6cc92d53c3b196bc8fb02573d2a8e93dec69ab0889a330110661996b6009edebc14f07dbaf6653ac3ebb4c7097015a4a1379b651d7eb9ffd7058a3a44bd32d54999f2d8f9cb98b75d7c5621855a8627d784305173d233b8eaa139137d3cccafaf150ab9260ec74ad15adc47b8b13fefe92c622c9321a637071fc017f727001ab9ca4fbaa9c270a8efe343de1e345a4baad96b245a7a4a89dab38f6f8fcc025ea875193d04ca147c415621f0b8f48c7505d40e2afb1bdcc48cfb43d290323f98558fc449b4b7bd87941ef341134176a0e8e2a68483d106630cc01b484880dbbc6b16873dad4adcc97dc17c94e4e8e249a2b8c82f4b325af6df1218b5b22643ef56d5df2a552d7b98af674b53e9ac3493ef4cd39dc3d33585c94e3aee697dba78b3f1b95ccb93306fe4f2db582105b115c56974d6c768661c812c191e965e48cafe95545b8bd38e48298e451c72e17348315fca27fef57b1bda3d730c030932db4b5cdbccc7f72f0284e25f7894ed358db626a8247c912394e5e4b3d5d197f61e99e3dc46e5a3c9ce3497b999f7d538ffdd795b1f6c84bc8161b410eb58f8f30cff59c4a14c92043df5c021d8b27704a5ae653d7d4fde6f730ffa81dde12090635d2eb81ab1697fe66a78c9e1676a6444c2e1c83dd5925ecd671d9131d86cdfd1d26250d3c0636cb0b72d393a8cb3c76e4cf2087cbbbccce13de2985a071c9b5557867aeb0138e9a5274b5971f6e1f4f44d8e2686c0311508b747523dceb7b71e6732616bd2b6289b2c6e2a42c5658b582668efafdae93de5c2c4bf295a258b5f70de4fe3968d0d28d047aa70b54af938a9d85e1e816533e0983c78aa57a9711749823c5de8b9c950c3c9f8d03bce0d733dd1186f7651f8e4c54dc1debd07748f58594a37fd92f35005103b711d19273d5e3ff2c6d473b109d800adede3e7cd8282efadb60d0b826dfa252f4ba4154f245d41a55658b6324afb74148f0d6a57d2eed5d7212f5f7bc85243675e7d8a0df6ddc8343b396ce871f61325eac18acafe44861501f89a6b2b781de0eccd412bc4a62a5aa10ca0128d83dfe884b8a25fe344c28ccf8676be15ce882db5d75910961954fab43f374b8e0083d1ffc6fc95c99f6985b2b61a0708a07a516824c9719ccf43f43e420e308b2ec1e876456df07e6f232aa821da57d850b728db500d5e8a24749d91cc94e4b7454f406bdb25f5e26ad884b70d617c2a531a5d80073d00b6b7b52e7cd8d2355d8c1ed152cf3a2180dd7bcf2803a266dba96ce04bb9ea27d60fa7829194786284ef0e61c78d9594ad50f6f56bc5b30635ecd2966d43f301a389d5e5a0b551947c67c3418c8bd5cd31cc407a6f26ed32ff82c038a61d28b66fbede86b7c458561eb1adde81bed4018c256418841a5a5b944618397e0ec6fbb39b9efbd561593bd7d1694ac2302bd9b8d189262a273d0db4cd1c00c0a417e03b15f0229347336f9e87fd9a437a942d3123f8684457eba905e50aef7ac740c48d45a0f8c5cf7e71b981f295f1008f1fe59024540de0c7acfdcfb5a9603fec1ff6dd80b0ed80ac6c91d3f77a90f0f7f0e5f91e3cdabf9381dbd136866f14ca7c02e7f79174437ae2749a1b94ce30613090243b77e4ab9d43a68dacf7afe5d015f4f0b000f6a3949e645198ff267a2dd96d2213535466c876b5094df80dee50b497a0d9298a7adb99a6d6594e87f538619a70608fd9001b35aa1855b70e9eb85032316c8535c10706ff8e649b7f396b42856f299c9ec829df28b9f03f7e233666d6349ee97cee82a9ca6e0c767bbb84c1380fcd07f53a45e593172a2851a19fb0d5b1fc402c509b74a8cb00c084c08a74d4b9be6aed26df346c03f435183c07b1b685978c2a02c3cb89bd64a54d3593da156d44ee0bb0cc9da17ff41c92afa41da4b27e927960c78be47991bbdf56b8c389d4251da873190e5a9708dcb7f3aea8d2484123e01662c14d94a9c15ca16a9da2db27dcb91f7e309c8210990bca31ad85896292fa80c221fb18d8ec2ee4dcaa1ea948f9346e50f659f6e1e84486e241f833daca8492bb61a9354af78670862a838a0aaba8aff709038a3669b7945961b2bcf7efbb2db590165333104142d7145fc1634bb834c8cec271d0d29a20fea90ac9eab6e28243c3c194d677e2c96f5c6fe895a353679720f7716cd9be3489ef1d09dd90a60be80e80ba2f3fe4080fafa036d645a85ddea17ce3643c82189a8e2f21535393476a1b8edc5af6e8494b67b73b85dc67ccac5df8ced8f60568aa946e2f3d7c9fbcd0a928959ccc804c5359cecbe7f254f1b2eeec3d2902d0a34f899cc9097a6c143c91fc1cce43043c58c937620eeba08c103cf311f8e8cbf35e638a55f943b7bd4145852dbc2eb015578a3bb4ebd8b418d04d959c48c24a396aad6530d6cf235f483d6903cc476a6c9db512fd8214b550bb25972b00f737329e2e85ab95806c67d854459c9a9ef85b565e4131c91eb046e15557c8b266e302967f91ba09d4e52aac2fc39daedbbd5c415762de646b6de30400853d538ae8f9432916cd59bd29b7dae18a702107a5fd659de835148f5c6faf37cf27dd638b966f113550e74655844447663cb4d1a3b444b29dfd8b3318f43f9602c75e903c755e06128f016991cfa32b330a602e7f92afdd1ae6f8c780f9b53403a53310a36ca7aaa26f6e73a3c7e22dcd091385ac0c886ac6da33f334bf577d97fb66ea263c3d82f63413f028d78f4bf318c99afcae8eeaec3793d7319c11723e32624ae6cd774417c71bc6c16bad3539f06ff3918f368f13ea970a8cd0e62f0ba0b9f342e40bc9a096bbaeb188100504658459ec40a1f76a37ef2c1d63e1809784bf68d33d53386b79520aff30a1df3f6fb72c14bf804b42ef3a49d6a546ea7a2c1f81bd824e826b85087a09fd62cc08d4544cd5e9fea17b8a35ba0e4d6524d74fa94718f1b5099ff661d4cf309ff87ae6175ea62d60536dbb1e80b3c0761052345781b9abb2961e16dc6e6f03ffcc672eb715902293e4a0320c219db673919b17e065427cd291705a4047087a46f302a0f06f3e28a159f62a72e527f1216e9f6cfb34fadc5dfb204208ae6995c0a07f94ca45a0b80356161d599576d9e631fbb3a9ad36d12e1e6a42046ab310cbd8f4037c5dd8242a21e1272c50fde155722b445fdc5179d01a1f58092c750999b594a6b0dfbd59ecb3e6111564e5f285af8530ad19f9c0d6072b6e5f51c7aca310cc89dac8c8d9e129bc18c723532439bf2d06fb71bbf7d6135ced44ea7e22a8d00c4715bc8c7bdf51bc92ad69063c8969a0abd6e278fba6f4140fc3ff15f6e60dabba3b0e8d7237e2ec5c2d2c32fa7fb87b294af5258054f6f326d72dd5e9b95ba14beefa353e25cd84c03e186a07cd05772dd4682f22800eab262a83344c5686dd978f5827d80e0d7007b7e01a7198e57a69abe48aca829c7837cd086d1e307412281ce7521178d16ec1cb2432422c87ff4d1b8e7a3e98b68471a5e3bda69f9de7b7c9d9db6d9db8757ed0dc92ff463a381737482363734e1c781cd1ff8a6fcff9f8c7e82e503bfb6f82f0962a738dc7616e15c57b1ebfef68839f273083671b382fe530eea30ef59f07652b9b0cec3016373efce3bc94d6362fcb4acabd454496f06b303655382f635183e4016ba494367493ebfa735fae555fed23f27073d85729bb19987481b9094d386c1c9df33eb04bd43dbf611a96a175cc1638c68b0325c84323dbebfdb3dd4a710413e485963a6f824d1a6acb8de180d72fc46bb9399b497d8ce12342331d387884c6668b0067f78f5f935e00416820c0cb27167bd3ed5eb6ad7b9a60f211335c2684d363e98e9d0678fe995ebd955547175a3821f06974cc875a14a48bc4068983f33831f52f0e78f49ad09a0822d92fd133b6a45270cfb98ddda927dc66533e38b15ce2203e4f7444b74de5188913b300394fd9a90d76d84d669e65ef03b4ff131828df589f139781b163baef1b8add245f5481bac58e6f9629b672b036c010e453ab3ed161e09fea732fc90a42f9c38fda66190903ef8eeb492885ed51c87833a9f7c27f54d3a579073532494c73c20bbee31ac4fe16dddf1e82588d88718ceeaaf3c8d1aa7ea803be06880ddaa3c70248a99bf4334240ec67176dc6c38fc9b9beb3967589c5a3f56e454b7f21cac5c0be576efd0eee71a5862208c6c5f4164717b1dfe94d83a3d28faad4e7ab4f93593eed7eb7035353ea82bc31fcf4c7a3605f80fab124743099fffbaeba2ba4d9fd5e8d6789c0297f9a1671e70cd43f21f523ffa23a92bb62eb2d6cdd2e055d7ea7c2ddc178411101fac874d38341053f2a112c1370ba26c12f8a2045822083681f039d55dde50e019ca289f9e57f6582c43592c91fa4ea59d06a6f7d384273f4f97fe2ff6e850afb2312d55b66837deaa9ef63f89f4bee5071e2edf868bde2cfdacf98b74fdca35ff1792564a6a820dc71eba6402f082dcd8804e37afb3fe57bdc1ac1c64d5f059ea415e1a2d15151f38e8340eccdfee89baf6b99d2e29269f326821de2b5a8c6bb992dc411a5c8ed4860751d4400d9da0de954d00ffb0dab53d1791c505804ae84eaaff8bd2de6c081107e01352c9096cbc12f76b18c94700b48b75aa46cb49375e110430e2b581dc7cac77858ca461fba8c794c287503500473c60a80bebfece6e2a6cc08c65537f23c59bf40b797faaf384f051be8911c60fd3430a2eb283fcebee848c23501a8bc33872c6f0d858c7d4f0c89658848cf063d1fa9feaf37b5b8ea1d6051a7dcddd78fb8fd5464628c64a2389537de5b95f6a492aaffad55e0f455e42c9cb709b02f6be9681be95ad1220170c1b93f2d8481d9789f003d3663b93c50ca96a2db22990f14c0507285c411e250fa56e65744521008693de48114cfd69447e8c1f6cc5843e9e488ca6eda2b971a48a364836d3dd285da1d67042cb8445649eef9c28dfbb0728b074c8b6c9ed8eff32614e97de70afede36a7808d9b682aff1db9d968f5d18bfdf54fc20fd3ddc1a22ed62886ac2b101de627582d010008f5fbc94a28be72951e4752a8785f2c0db8b1cc9bb470dc19f907ae631a0e4098c115fc0913a55300ea0d426bd81f7ca7855912a6d8912e64bbec15f8e58127501d556f317353fd066a4c0e8360b2cba36fe2d58b1884004921ea5d46c1c96494837738d05bb5bd803c0285fb2ee212adab229c1e9f18ba69da7666940c3c0b844ec37495b92b97621a1bb89971059e42ec75b690bcf133a65a0b4c741d8123b6c99c714d31f2b6e67199839e64aa0c1ab33bf7ba69af51ceb63d56d17821635acd31a0f069dd1517e33e6de62093d70b9eb347c930a6d8ce3c3c5ae3ec8a1485c67ddd3731969947f6aa8fd1a3d44d1ee0c435c38a425f6f547b7903382a0075399ad2d38d62c27bac168f4687cee6624e7e3e7970f393ec25adf53b6f37e73336bc757981fae4a712841484a9e187642ba70a613e34f07d703ad42cbabd1903521ab4391eff429c2484d5b7d8491dabebbca0b55257324a02dd058ab7dde5dc99fe00bc30d360a8101437386f3bfbb96182241d466d676ed01d4095595502f189875fcfa01487cb65c052b6408e6c90584aafe7c053a50a1d46ec110bf5d3e33d2a882370a2fcdcc6a6cccbaee78f307d0c6d0bd484a6999264ad1b8de64258028a5d5390d6341bc9481a15db5edbb23ca468721a1300d135ffd157a07e21b14bfd0e5dae263723f40fde656b75c5528d356020e7f7a86d5e01a6d2728f3c72a32d0f96c37a2ccf473b4b4b56166f25b36bbcffa2787fc58276dfc5784f61b7d373293d783ec9e7fb6589014ff658aae049db329220a5d137961166718dbbf9560f819e127d01048c6f3d39f547229ebcb49c74bbd5e9bd2cdac420b5221f770af1ebe7c9d9787687008585141f84db48c9ebc4c4db7d9220e4b0a122fc22843923806740f374597b9a44c2e9f9a13b689fd3e2c6bf13618d96884e4dc95fcb8a3d2fe7e411af8159e63034e3ed5eec2ce837a5881c1df883c43f8f3f07bed8440d5e1d20f331e8580b41be402c03ce3f30fc865446bcb7945204e82fbcaba0bd939a7a9652440963f295f46de9fed309abe55c115f764ccc24ad263021ff785f351f3f00f5562c6df93281e84c2a9d6e4a467dce2d27f73d16ca296be336059028f33e8014cf294db2b3a30173d9f2a17b6dbc17b7af473df01d8821dc72ba9761fc2100cbbf373f3bb38935379852d80cf54928d13ede60648923b701856672f0d014eef64be34aea8dc2cbf839a3589b3b31cfbd55404df34977eb41fbae2c26500d45baaa9f8ff6019eeafb53b961626d9a61c5bdf3cec19e06e7c50e5efb385a5845f50150432203e77db9a033020f51eea556c703ec6d36b82f219bbaad0ac6435b9702a71d5d973fd71c6e46c7af2d3f25201c7c86d6459377ae3191301b36292c9650c1e6990ad2510ba6d1cc360b00eda4f4782bc335b67e4e95b1585a1c371529d866e56a4a1b9753790755b4f9f28bf7ed2a5b53f880ea3637824911d61021a7469427efc9bec2b0edfbbc3fab45e6977ad0a456fd2ba175e0eab566303f4dee0abf68714d289658bc8e65dae9def403449ff6fc1a09a3579c2943e8a41d0de6884f2c9afbbb8b9c0713bf6b9178a641dcf9494ce20ec27fbd15b2f6a621dc07070ade2bd4fb590004d60c167b11ac81d0c5ef425c6e2f8843077797c7eb1e6be5673bce700d1715c2504640df8e02a05a43a462d0e3d19e958e4a5b791e25f010ddd048e538b3fc23d2c5864e8357ebc806fbc08016bb3cf4995eb3db9eeed76fa81772f5092f89d303c681b42573b451e4347e1067a3c7d61b7593f8c3a24a53f505ec8391a2e9201edbcd700aefc0d5c1614e80d69962f5fcf56d43a2291f8a00d8a3089d01159b6aef849c8280edcc75c4dfc9739bdada15d9e144ef24792c61d7ca60b61ae7de3d2eb759f3ca93f67ed78ff0897d949611377540ecfc10b57470bd4d62939abf7e310847e40ecd5a90a5d44fcf426838bf0c04d6e8848f8619270eac830b46c44b112d8b5288a0f0c4da3db5a15c55d2aa3778611641fbf1603f3038bc3ded65a2c99cf6caef3fdd4d5d950f804ca9437a53f51d52a0195e5772339b559404a93cfcf532be47b8508591251967abe5f53c2b008ae9dd6b6199ae3f280f4129f061f15bbc00c655ec5f6f1041b01056c688263e8f73a8d5a46f16b6c6f06b2d6671a1617028d2d63a1cbea7d5cfb5bec32a93a16ccaebd62421c3e134e41c633971a030c9abdeec402e5790808dce42703be548008615905944dc8693896c7b099191b44e1410608cd3090542da2bb2b3455a805fb5c2bc99d9335f5c311aa3c1d0664fb3b6b7232853fff6051898b4acce9e48833ce621dddfe8b956d3d85a9938cb552076482015f2b0a1f0abd5e4abe178f8a35ff7047d6da9d269a505d4d10db132e4dcdb545427f9d5053331341140922f2b2dcdcb5e4eee6ede3a8969cecd1cd6989ce197a9e8e179bbca4b64f73cf17e3f9fc007613dac84c075ea53cd3a37572d73cb3c589d57940589b922b9c6f004d0986ee1b24c908d3f6597b975ba1de04181a0eaae769819b880d46b6241222af640fb6779a09ca6647646fee29fce15d394c73423113f16e4872adb80b05db562c24925f993472007891eef62bbd30d4f51ee8f3c3540b1cf2321371d7c35691e2d34dfd1e8b3b92929ed83a70be675bd65cafe2cbf8e63c822206d0512742cfe16fd4f8b68b6c0f2942d6f5abfbce2a6dbe38c09f7ce5a42cd3ac28dc2d5b7db870f3918c4d18f85c6f3c35ba2ba0c421bcff1b21e0491cd9fe43c89921727a3650e32d6f850b993ebe2ab8248f07e76f7020477f584e59f2cddbd346c33869e9f28bdb4450bc09c76e91ff95ad39d54d0bf86dab202175e45a53af5524899f2bbf99c66e0251f50d4136d898a316d1b94d923417f28f4bb82ccae04589c532398227b0f3fa65099bab8053a7aa8735cb4ca25a378d3287a040441a0e8c85f71f80db03d3aa6081b4f780e97bf42371c5c53a369172fbd0489d59ae8c78c46c8634db6c8688a795774ec56d149953358915897031cec64f6db0563e1797f33c449db4b4a0db077327103dab528752d1eb6e5d3d80d2fa8fb78c2713dca6f296630783b5ef7f765e67b4bf9828c846542e0612c6bd43ad1bbe68b93b45be574410f04f97d8394f8f751fc4cf131691879d00909554b4facf746b72dc7443e3537ca83bb352594248ef1fce609610d199034298e8dcbe468df483ecb111c2b33af80f9ded227eb8958eb55fb58f8443167830676df66bd1aefce759bbf69097b59761b8de7adfd076a23c87ec380965210bfba1fd7288c5857e648083e167316313a69ca9b5a629a0ec6bd256d5b7da2ee5cebbfbaa235302f54aec4bcfaaa56d6b1ef25e6386c6c5a49c690fec991aedba18f9b33aa5d3a50c00434c4aacb886822da98d8076038c290d09d2ddf9af8b654e543d1ab30795936adafc9161ce1841660bc3eaa86347be720aefb2d74cbf3158a2e7d3d8a931f2a38b5adfffdf4125dac5f4c4bc17055c690463d4cefdf4c2ea1d8c08a8240ea2bbf539305a9031a4a4a4e469733af04fa6e76740c9874a6803617a342243a2acf7830e42b3db97eafed5f38e33c86ab228410c994299fd76db08d2f94f7095463167376a2cfd3e73f6d14b2a0f26e5be87147ffef69d553021223c119e97a0d0a78f7ea7a9e9705cad0682c38c913bf6f86dcda506c5453482df5be409549732d3e9bd861b3022fbe14cbb62fb682586f14e536df9296485b12a97f3838e8e11cba09dccbff5b29c038331269c00811610bb54e24dc08f39b761800bc899a74e1b0af66b8261e7c7ee82f6a495d86f69cbb1b93acb93e009426e5cef76e22eb6853eec11faf991f18344cde78753b16fa29f457466f6c28801cccd17199c320bd67a0eeeeef4ee5c44bba632ccf6fefa0c5f75f9bf3a30cb31f711e6c908efae4a8726b4b52f14595062b48bfbd7bd73667d6d14654ee267a044faa55f5fa78d2e84cd1b9742da299e46a22452619e2b8ca61f516f8b8fec2f22e69007de85031cb80f5720e00b27fdcd21eeb4b7a42ca150d6cfda1414918a748b3129095ae4b72f474e9ac7cb40628f674a98deb68f9c4d90978bc06b9a2a0534f0f790aaa830918ac7896ca556af82d704942a2e94c3892ef47cabab0260371e22554dd85d655bf7d3d67b143d8d174809683d36dc35058c5a9e2cedf3ea0a95c3d7577d9c7556807e069a80086b21a8e0bd685c3e871e3a01e78865fcd90c5dd79ea4a445323e885230b03d518582aff324ab89120f5e5067902a75446ef246d9c0a25a6399b148380328266b8e9a221bbdf94adcab15df14e7fb8f94b9ed956b3069dc8457290ab9e7ea41a8a411403faaffa3f95c3a8f4747b1f15725853120613468e45fc50edf95d06ea41db88e0a112e9b92fb9d4483335501ef02fddad9aadd66babf2692a4e5d8509063d53491714b9f99cdcb45430d5bd9b61149472d2969499d9701eb3f14c2152f47234683826699e230df797113c3c0281eded33f52f02c4671ffb8318846f3a0aa2e5c8894f640bc7fc15c5448c8a6224197369ffdab2529e6bd3a6b76761f8593fc76431d17069a08bacb7e642e9cd11a65d5b4da8bf1e18915a34673de21d7b572b316303bfaed935a4c8a00d7f6a91bd060e2dbfeda67da0d2cefb8c1c7ad220185183dacced25fea850aa7b4cf905b1f5118dd444ec20608a4d131eccfa8a60651c3059e4ee43ca837f4b4d8e5a1e1174eb3cf7c4c6c003f069df3ef93f2b7302d823de485a76bc35a30e84a9b28594846a59bbf3f79dbfff253cec19163f3cd1d0eaad103517d872e9d93cd6ed405ec99d143df01f9a9fdd4cbda1d64254bfd290586928e92766224e198abd94be2a8a87861dd70080f06b4f64d4c1fef9a6ea8af4492eff78f36db50a7d6eeef732facf2da0a66f996c3142d0c490f7077bb99890d0ff6a227daffb39d9ec6b072cc218fefc3191cf8f2038f6f3d39fa8d8e8dfce9d7fcab74b8ee5e75386c566195c33d364f0f6e6238ed4f70af1b462e14ee56591d2aee55dbda3745bb8d7fc1984a86aa7a7e954d26a71a47c00e6ae68b9caacd8afb59faba2f6f9972311a3fe96e16cf3f44ef5f54a160c1828d953da79ab15811f05a142c405eb283172913cfbfb8e0ec3955484507c0006e3b9caf847fadb145d178c1d00ab79bf0c8dc01a92805d672070c72ef599ac41b705c91035b7426c4afffc74f62a5340504185e18f0328631752c36b99cceb6556a3083b6f338298f92d2654663bfbc9481c411a54adf7695da8dbf56a7d435f0d262d62828610017897ab49c9c7d83499ebb1777e7fcc691fd10a19754b98c437aed1b198b422940761f436eb7a9558053ed1496792701efdc6125e4d283e3c783aec6b1a183e00e3688a394a1345ba3ac7a95ca369398442b7067969dc564780d9d2fa04d3a40695887e657470962ed57ac3af7d6225936f09eb6017467ab6aad0b0de48b8da92b35799d838daaa24006f37ce2c39655c03d869ec6a8664784a0719aa5ae72ce2a4ced74841350978afb463b0a32d6cb302e0abf5b4dea40da0bb7f8b8d6fe89c0e1adf30b23aae0d474bde5581099da2a427e194c16f98ee1d22f1fac750ad96024da9a08033c4f0befd678aec03e6c3ceb25547f52934feccc278b057639654451661cb2e9633b0feed7a7dc25c0c984e4810d6d3d3b1214e1055252ed1191090a2304d44438ee140fcceefd51d6bd8e5c0ae36b10cf3b437a14d8f41309864be18d51472c4e3e877b64274c9ac9c140e29ba61b9c7bfa1aa020ef3cbde707fd4ddb48a7c60e3ebd1c0d639919a506990cdfbf4f43856ea4f9984bf8d3c678a4fb1e6925241ec5a5641e96d07322a29b953b3fe111a1ddd9c61f55d050fa6d127f400eabbfabc6e2364a14a145111f55db6ec2e9f436e51b5ecb0a3bd14cdda041fffdf9243a292e92b307b37afe3228e6d090558e3dce52d960fa635bfd1d1d1ecda1f2964fd1e0a713e4d1ffbc9080c3f07c58baeae7158c0783367074793b2c37177baf34e0aaa94aa9f81c4c0356a350dff9a550b075b66cccf5d1dbf571c5783bef5ff9c79252bd52af24e4b5d4ae321be0894e9c4e4b1aec8c24c8531c7c6924946db9695be6094f09f67845ca003ff676ab5db67978b092ff2df4960fae592251c8fb8ea7691292dfb428a4a629c21b1df3345585a4335cf4e835de5826e907852feee2fa6fb738b8554a3fb9fc0d31361ee2d689596575446f8e77852dc77732d73c64c45cbe6fa3691571c66d5e91a2008bb749a64ca12d5628d9d62e2c420dd7a281d2f996a549bf3fbe5642462b633bb0b2e5b04291acada9aa5cfd0c222496ec0e63f79d7530952da889589ef74956e91f00787bd641de0a6ce52d85aa18266043e3e92de1fe9fe57c9157c709560da58b23ebd312f2072ed139710cb7c1062932f96dbe862b653aef6db49420b42a5bd9c83cf1314f5d41532b543b039a840e536e5f4e90760571d23f769726f3ce93dfb9081bb7be8a4b166740c5748bc0be135aaaa0fc048733705608468764e3a26ebae155d7549f57620e70cb43b9548c3ab13ac51ec0d1d5c675c04c0dcfbcdd339b3e18f70a8e1bfc79cae96ec819e5b51e15bbdac269d0b59f6ecff754211994f0140ba853db5e124efa58446aad24a2b250bf50fd1174b6dd80e430e2e50b0a156deca16b6921a38cea4beacf15e5e0b7fefebf4e74bb265f3fc1fc8abc7e65b96cabba895c4363baaee2594e0f175279b7743444b35a8e2092e062d6c3ba38967e80d98a74c1771676b60685c9f17a430cda14228460c18a941f7a885f51403a43052a9f02394cc732eff68416943d9bd41f8ab6535624c09ed7bf9fd80746f2c60ed349231d550ca7909526493673fc920789cb21edc4386ddf84edfc14a7b03e43e81a06ad30b7eddd98989a350880c710fd3cc1f8919535a86f970827d5ac1112b6f5121eb9059acceed98b99e497a529e11efc7c7406b399473c8e0d73069fec13cab89497baa1e3d21aa9ea7ea4ad3075fd380fbb799887e54870c9b17be12efe59a94b29dead1fb31bd763502ac0a3bca2add23545d934b83a2c562ce5b7371bb8bcf72f9994cc19795293cdedb757bb4217062c14aca774b3296170dadd803e34ba176f398a851d83301811f57d3b8e4b3c6a258f5b23e0bcc7ba705c1ff080dab386fd66cde34a4897588f86f53480ccb1a22b26f9cf6c26c95cd8cd3756efc331b033642f87bf1f381f1b6f086eaa4ec6948fece6b20961ca79c986eb613afebf2a2bf089e8ae067b30d2a0208b4aae3b3e5866f83a3ba5bc18a417ac47e58e209458fedd3b7fed2866b2f7c96348a6952a64a9abb89a03987b395dd37128b31a6ca865d131e10c0100799992e0638dc000565596e787a56796b162dd22c9935abc7a5e0bc05e7aebbe0de0d40f193b7911acebcbe98266967492bdf74f08a07806319957bb5eeef5dbe450f95900677b1b06933ac7cdf5d59ae9d12759a8f5e9334da38d7ffb3580b13cf590862b099ffe98fed89b09e0c0b9c36b8fa9d9c3f4d968d192a3132d08d40c9d767ebc02d91fc6293c4d778edb47776b0bb6cd9447b6adbb8cf5019e0b3344c17d42d859792e6cf306fad34fff4e1951fe3ae3c3d4a6f0035e0ba2bf4a09820ab9240b57480341b35abbafaa6bd5c8c31ef72be2a784b13f66d355d788c201d2142f5dccfc960e0248a58b059b8befc59537f272cbf014fb2bffc82c73ca8b1d0f77910e55b08604dfa6a4d16e033c39ac5cf449d4dc42708ac00e77bb330f45c2f7e541228072c4602f99492791c2405159fa6c63cdb620488ddc842354c6d4b580c2c60ae53b170da45a06bf3b2f23da78d746617cfdb7bb36c66b0deec215005737bbce34a1935874c485d11c71c3a785afdfd18baf152b166677cc09a32389b024bdd0c4914ba62169e5f4fec72a789e580dd2b0c827d4191d73fa2b5c059a801741b2b331eb4e5128e1ec8f18fd9875a317bf6b3d86ef9326d44e86ba60a3daac34009bd5bdcaa3ab5673c8812b844bf8674afaf39662c38caa112687e4d9b260508b8b294564e11a3e4dadb60ad87607762a4b3a0d2a3f4760396a6132052dab7ab55c23a048c31da90abbfa3cf79a1380890670bce541fa47216c6164e7f4c94a4e312b8066838dcf2f16cce9ac18c1ae0539eefb8f65e90b7dc210f1318d542e0e6ad274f33b14f3f9618defbd145f23978c26d9edcb68da515d7a7e4c18074b137deddc650ef2739148f935db98fd4ff3e2dd481524dca87b99b010bbfae978e1d1933ec91b23d08bc4f5c78500f05e61d7ead8a5a09a5b2f01a4eafce1d84bf6a2e71073fe57e63c123ec6cecf6991fa69c34d8a4e1aa1c7876a5fc10b8707355e971ab6dca64f984db9433951def04f1f3bee8a6a843bee762dec43a272096cd1c53e91079296e77364c87adbe6ec9a163ace4b22389fd311fabad7a1d40f2362a50f271926c7f3e37a85a92c812fb147031466b3a73fe6a40902fddbb628213ae00d2deb479bb23c6e3ee8f6877c2cbe580ef51dd540bbb7125d97fad28228031fdb33cab0e988bf3248d059c4ba7d6eaa1a4f2839ba6f8c14770e5241f7101d3f65c31ea23fd6b4ba701eab872eda3dbd456c171c71686399b5985354746d93c2301d743d5b2d51f1eb0016a9ec8a4a3e75abb9dd3b7fc6693f8c3653b21a88594add462f4ca1c8ab5fcfc1bc7daa8825801a810c36e00858aa109d66516fd8edd025335eb995e249f0d0bb364966356b6d3b86b847b9a337e472ac161090bb95321fd1ee67134efd694acb8a923ea92e034b5f3ec1825fcfacc5f0a76a4355e5f958cbde2e3967655401b50089eb44a16f8818a0bca5bf982682572b9ca203010856b1dcdcdcf9c9e997cf7bd80cfa541e061bd80bc56b1372a4c4c8906717920a771cda6b650edb42525e0e5efe397f38281c453192a15d33d410801c01150272784a9d89589a5dbb3c52c66521a16705eaa2fbe49d410b9a35cab5b80f01e6fa0b7f3e1b096be345e4df1c800757ca29f0c09b5ab220cb1113cba3827ffb7a69d9dcba41122b4d5ffb2aafb695c62e4fe7c26088155cd57fe226479dcd952d3664b935718d03c383484ab4ad6def8840a75d6448508bf26d3d1f5b9812d4aa079c869e940382c987700198ca7dc2a1a084e4897add6e19de69bf27e9e8702767f4f5ac74af4a96c1e9b76191cd9c3b884199b104baaa9c94925d193902219d51722a358ea63e6a14bdfa6685d5738b00f8ab6619eb1c69bb36456011cecf7ce48da1d9e68756384829b4c0c967e6936ef41b17e13cb98b61cd133e3b5174a506d63f1c322707fa217cd1fe57238e319eb6bf4b120c9952a64332e78ca108fc23a187e0045bfe2ec2c21775408a114fb0322687baf909889e72de838f8c0c4bcd64c97df808c3371a7fa4d1cc61c2a5463d38f759b5c46b5b40294fdc88f3d0a95352bd5517d8c29048ddf30365831d53fcbb7a9cc31845da23754f98c7e5acb256941a748cd74a592098852d30a4a697c6849f9f9efdf3d15952766e899f577d698bb1780cf13c65d5bd3b8f7f7356baec2767aa69020bad55b8c678310ce2ae6c0683d1f650a37a72526d72e16cea0e3cf6218d3e58ea0bd1526b60c5a8421975ab6dc5a0da43c06516db69763c05519a017e0660adfbb257d8bab9a503b08c700cf29e1cc6697a97ebd222b62d49f4edf6b2df91178b9e6e1762f2728fc3d896f7e39596bd490898c42f0e5c805bc84d04b293f03f8f94d3306e36eccf8b8f6fb41f5f7a8416eb291d187150d1d433a4cd40b31bf1bf6aac76b329147c7cf6ea93e4cc18b8b8b125afbdf2c6d530bbacc9056515ae4c4bb2b9928a056835730108b0314e30d3dc15efd38a161943f2676e7a2e7e9fb11913fd7a6f70c3c045c58026b32da22f567be85d906ce6e1dd54de365720dcacd46d2bedffef823f4fbd06a938645aa41e07d4cf9fe7a14cdd12f376bccaae6f1a651d9194b6d79951ffffebca93eb0f525fb6bb7524f07e7770b187d5a9ec6df7b72f8285be237f1bc6d2168d4df9fe119e11b274fd6af8404752b873afde1c535e7143565f25a914f2fcf4ed986f73175cc7e87a093c36051f1f194f5ca86451c0e263b55559613fbc6e941539bee4065d075a325383817769af38b97ec4453f2dd8c25b30b14f39caa9e2c603ae4ef3c06b50967a82e59952dbdc8f21f62fb10200ac0afb1944f9c7479c92d420aab4a963eff355b23c7eced98e0de6f6547050cf1040fa337b0d382925bd8bf38629279c131326af666d300110af9e972bebf611daf647e2f9d04af7e280dbd8096219474d2644a1ba70d2a123c4845c40f8a723809919e579661a4ccac0ae84a079b025d9dcdaef20f4ca0c563e2aa60a7f796e8dfa4b00bb951c2264271eb906cbef00372759ce13cd499bc5f6bfe07eefd07ad162c91186b95e212a804333bdc4db3b9cc143702e92d154afeb53d4b04650e03abab4ea746802ae12d1e9e396d9b5c53d657cfd2d2841c1e87eecd252a5054d0dafa8e0904406d358777a2b86e31b024cad580e28b4c816bfc3f794045dabdbb6387aeabbf6d30dc4ee720ca439eaf815734b8fdab8116c75d92ce46d20b8ac2fb24fd758c2a31840fcc62e9da1cb9f5dfd74eb566bba7d8492973734dcce29fbe8764a3ad2f428cc078fa403ee7530b65039fce61f96f391645225ff02dec4cf2ea727081f6cb796e1ed5629af3bcc36ac8c5ab4b350c775b9e5daa7ca517e07de491ba6b61c81fb421125b6e428e591f72e2b6b417821d1a72429f1bbddd49fe9b4db5db</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">why author alive？</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Records </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>紫罗兰永恒花园</title>
      <link href="/2025/01/30/%E7%B4%AB%E7%BD%97%E5%85%B0%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%AD/"/>
      <url>/2025/01/30/%E7%B4%AB%E7%BD%97%E5%85%B0%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%AD/</url>
      
        <content type="html"><![CDATA[<p>花无凋零之时，意无传达之期。爱情亘古不变，紫罗兰永世长存。</p><span id="more"></span><hr /><p>纯洁，纯粹的爱。</p><p>美好到任何人都不愿意亵渎的情感。</p><p>很高兴最后是happy ending，即便仍有遗憾，但已足够美好。</p><p>如若有一天忘记了剧情而再次看到这寥寥几句话，希望你重温这段故事。</p><p><img src="keyvisual02.jpg" /></p><p><img src="keyvisual01.jpg" /></p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> film </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>for freedom and life!</title>
      <link href="/2025/01/06/for-freedom-and-life/"/>
      <url>/2025/01/06/for-freedom-and-life/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不妨猜猜是谁的名字" data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="43705407c0b13b39106140dea053722fde129d42f5e7bc915ce38db9c9bc554a">590d7d6d62dfa40f41f712256fa79b9cb25c0d39399d65adc5632fafb7adbd4db3891064e07fe0ad1bfb6432e29539b25e3c280b205c6b2c57cacade578458237aeaca0062021d6daf5d3288289768b637b8ca0fbc915cd6d3b445fe2ed2e17bf0ac45ab98d86803d59b1360c2ecc848ac7002cb6313f7f62c66c63cc04e2272b6f8c0338bd5ace5d48cac2ec1a861d543d1b7cb3b6e2c8c7e90dc0113ccbba71d3fc854c32d924a91d07c9c882d2c196ba53cc7284c10d5def1dfd935b48dd16c250870c78efb93b7c9032eb5c039fd9d44b23759d9b48cdb88f02f886e167aa66630f965fd628d40160c89954f426ede748432a041cb9402f7c4bb9e02d4705f6403b3f46798db588fa03594d8f340ff00716ed7137f1b32431d2f329c078230b42d2058efce100ecc0f74fec3c545484dbd8f258463ebcce6fd96e4efa58565193b43df397dd9b562aaaec8e613da9e0214be937ddb6ed37aa13797326e27bfa139072ee512b337c792c3539da12e9da588ce6a803678589c00979884cfbb83de63254cb73b779fccf5599915b17e471dc9ad55732f38ca899e98ee9f2b523b3b7ed48d5055297f9a407a3d315467156eb2b5379d113465f5b3da0daa62765582060e67007558b7f56a6c93327a92b9049053e2fade23394948deb0784985dcfe78b4ae81371fdd15d74c79276fcbc026982ccd9d4f4e7601a6ada8eff1a2408ea9c535dbdb8969699ad753871015dfa3a22647fd948feff97b73bdba6e7546d676b9cb9f1c39127a97bc08b8a977e23018db7bfd2285f28043cbf868c4e3468cb88e0fc90f89a48ab93a691eba36f0d270e635d4311580fab7e32098096bf0d22696f119288e5e7f2969af7f64514e389e873f5ffb09b419273728b8f0a14c11f1482cbf3ad3a1b8692941714bddc83238f7e91363e102bbe01ee1419d068aa27cfa89c6e50a9d7d7a05054753b380a86a295f858dbd15362e0ef8779928f45c4b317004e7a6a7b85b50452f96ea3994271dd77ba46955f78f4f0bb739e55c2c4662f816cec92e16a8c23057d50bb5016a8d06ccac663ec67136f0b33bdcf8bb9286ca0cac08a05e6c0d5a0fd0a09e57e0ee6eccd33284be9c6ceb94f15236e952660ccfaade5fe93c80046bb7be83190fa29af687eee348ba60728f265ef12a4ea9aed6a663128c4177b60d6fbaa3aac63ddcc0d8af7afdaba8e06894d0a448e8bb5ead5e927a2c6c4cdbabec78c3f05c49d931da58692d6436725f3b9cc07afa16d2268f82142d3bfd0fada4bff8411f4c18434610c5a9379726199701bbdf60d572c39fcb339622f09358ab90277fdf506aa84df7a04a93d8c61aea133e6f506c1eacb86b579875f00b08a48b1119003a7a26b9892b6db84077cb793917402a053cb43e5df7640e7ce8e25826af85acf687573ddd5c6a797e18d0978ceb72dce79b2dba26a8642b2e14635b003b0637cb3ab373eee9c897d284c5ae04b2b50d96020d869aa625e47dfd21eb14c7084dfde5ebf62a78ab10a7561a7a2c5158b7e0e339a5e614d9cdaec70349c02942e5a1df77a35e7a9262ba29b8d1ec127abac5eb585c36ddf00dd2e6ab897773f436662b6fafbcd704730a444ae0ff9cd2f20d50861c731c429b0482d98c0d9e4ad574f57b39aba9cc5661ba40f3dee4e195ad2f0b3c1ccb6013c73aa3c42c11143329ffa4272c8f01b9a9b893683f0ace2ab69474974bd8f5f90e6a78575f4b1db37f74ebfd7141045b6aab01cecf7addf8bc281d7cad305c6a5649cc09e5708d21aaa339e331be78b3fb51fe4837b7dbf98077efd6c50a833bc771aff984f5279961d270108e5e4d7a32a0fcd43733f5d49fcda60ac22672625f3eaaf60f657c268da30f22685cb363280a570fee4c497183b85655b60d44d59fa7ca7c8060f980f2c8e1e2d9fbd3638bdad33b67ce63145031fd7bfb3b1de66d4fd6a438440f0ec0d8dcd4e458cfa1777f9dd03b8294119cd1f40c51e79ee9f727f34ab29bea28fbbd92a8ece795a792f28a0d2ee24441b5ab593898b83097a9d6af2e0258f4d3bd2b60c1084ae21a545f67b68d42909b4b02d4eaba9f13eaa194a578554dc1a538251cc6bfcc6bb18df56017494669b75903b58123ca65d8dc3edb0a2729fe2dc630d3697d05573d1780e79aa4fdb349511dc6a0bac95e452efdf4e79b459a2042b506c2286ad84f0383a33217fcf5a9d97cff2daf7278ac20060ef73e1a0840ced0302d9568289899a342ea2649b3efa5b02ac04e76d12e13ef580d21c2706545b2195b4eb7a11c407dc976ca771d103dcd46bba20fd75d1a84728ab192fc2fd0380ac3ee596b3ca3970c24b431f98dc1d95f4e4708f86e9fa447323d6ce3fd470b2b4bf3650e1661814e25486d70d3dcdf35739387bccad51037a29451feadeffc8c2694d3f1116e873f1b0e5567426b1e32836fc62e38de8b484d086571718c65c7d1f317f46cdbe38d0d31768b306509149feb11e2ea11d3a2ff1f563528ad5ebda79a6e825c42d2a9825bc4f7da50aaa6d5991ffe0da190791545ac5bfa479d840fdd657a8bb03de6961250a04aaf2e91fcc39d1c2ac1f9c369dcfc8642b33557b3ad3d9ef768d9453f2cc949e79d84756fb30e3afd9d53cb6b3b720070c0738ab64061fbee2753fc56a1de727d5139cf2c823957e39459fa417d2217f82d52585028b8fd798f19ea92f7ca8a37eb8fb83053566effe518cbce9ad3c614168374caabbac74f76c9dd8f222e7763878d509ccb0bb997c20ccfc368331326b9635bb9daa9cd9d93fc85dfea27f8488cda53e5a74fde2a841cd923b23826c34c7b21a707eae78246e061b118eae1acf512389b1614554298bc7a97bf84b33158d26f0d3593e7509c81dad1ab43a03af1dd5340126b2c1132cf0b77ee9baa79f905f639c55f18722fb8dc2dd56d4002444529a8d89e7a92c79083f26739d0b946d8119ef70ff50ee337d04018e2da7a66824bf0a8e44f317bd5b705afb641a1db1708fff93db8158c2c9d31bb17ad4b1a37c549f01a7220e3d3c7841ec17fb493b039890ef6208ee0a3368403836e35d3c2150942e5e1f65f9876511c870551cbce87f28d23dedbfdff043c93f4c6153d6818bcb640ee1a286b61a9747ae403d47b12f7ea89c7b1af9506af917cf787b9a9693c027be932b356502d0e683d04d844b763150a1c0bc14deca67384d80f4de81c4e515a86110fb0a8fd51ff8294ac218460fa73bf342c71e0a094efb52a24a4e09cfa145a027b8f49603ace5764e64a5f786eb039b3f71468ec5ab3a4e867f64ab581db8ff98c3482704024feaf6b25ef81096c4ede7ecebe55410027a0159d1654a773135460232aed74cabf362c91d373467f60f19088ed131984d03f26b0ef621c2c43753d1af4a13b283107129a6f2682095bcbb0df90cfe7a496451b21f8b837286a35e0f75d5609375dc8d8832fe344ba83a689e226ae04eb202bcfa19a4c48b4a5e86e27ee887a5943a8c503cac02861e8b486ae59cdfc98bcf8f18acf4a6cd0eb8599e307e2fd44a4554ba2016a9d0f5e0143ce87640fd11c694f914efa5dd72ce3accf58d36ebbcfd223416c20666ef75645cb216ade79049681c04ef0e0b357904b874a1ce87f961181c0511272acb063d1c3d5f3fc482d1c2d52634f86789a52ccec46009a9d3885c90889c625ddc4f6378a9f6e4d1050a38df9bbb0c13b1b3ded0bf4b0c3ea9363722b1af843403651d56f3070a97e789bc231dbf9783ca5c4d2503b1bbe6095b39f3a63e7ea427b5a12caf3f2ea5caf25a92dc04992322d83cee8fdd47063118666af0419051fa92e35949505d74332760d7770dfa7a7e314064d42e65ee8262e67effff08c444e2865203f6c4a6d7c31aa3d2105fbbc7f219f0e71e9b73e13e90ccc87dbf6575328e8422ef2f2a907f5b608ab0220d188b7f9631b3ec2b0fb142bf5c140794b41bbbc200e439da18a7169c0b10cad1cda5fae3f1fa8845a4dd189440c3dee0c5207a2dfe6b969f9b5190d733eda064dcc902c17e063f81d439c20cf617f408f52e0bb82a962e57e11b1b4d3149bcd87bd1160300972811554b8acad8d314875d706a75e13f23e8ad68deeb2afe92f48d345150e09593ac7daf307ba639ea9c311b328145786faf54226c8beb5568def0c162fa50e03475c31e475b42f3d0c2b682f2362782c794c4c86c8bb2ede1005d3aaab5d06f0f0cfdd0a1ea0e94d50668ecb5190cb4e9d7683ab086dbb9bcbb333f798c7badda66e96f747611e9efe505fc009388737a6f6a11108e34da6c940fb09b9ba08fd063064a81a9a186e356a64396a7f2ca3e414312218d48c6062cfa4eea25ec7ee377361968a5306124b4fa5032f1135e2bde00a6de788c0be9b9ba07a1cedabe6f89980d341eb5dbc5bb62ffa8bfacd2ffd5984ee17b221a64f2cad5c1619b9a091ecae9ae5edb2becb08782ba7b6d4536f50d674c40871128db8545ef1b9ca87c489254cecb2886cda7f9f6365b4882c1daa0662e2b72e5cb62560c0520834a7ad7790b936c03079e6b6f7c514050fe80186c26e5b8d43bfc11eea9dc005a663d9b7fd3301ecf1c01196e10c28d213bb026c918496445a513dcb55ca7ee9e9f4f2991a0541ce9ee72f131e068175faa2e3c1fd9e572aa1b202bc4dc0d8a0bd10a951cb77a58ac51df222490c7ff9eb7a8606d56170afd838a82a44779793f97cf242675f91710b1e5d8342e7f454e0c30d28bd7ed17ee06784962354472f3e33878c4806bdf15ede77ea7e4ca0feb362d8e1edb910314c99a7857bd51e125d57a1386a56cc482e64ffbff2926d615e716b717fa764cabe7b9c9e3723b6719ceac080a4479acb2dced10d3fdf7f1b5d775342b57fa5a2387e8672963bf422db2bd3c13569f1c041f73c175780de518b2e5c2d35f0d6ffe792ca01618d28e879d526d40e8ba3c36eaf3d1d391c9ebc0725ae284b3d4055f2ff950b303e58a339596f895d23435997771eda105b6e686c4690ded42d8d8a3fdbee4c287234ef7a8ae75aff27acc61a1902e72724d2ae1334864a751dd7de34bed466f513be76c79258c92609b8f817aed9905bd4a2a94e585969bb0e585acfaf4017cdcf14f11ce74327977d2e78701ac8699f56980cb6f7a30b68066c8b1d728f820c7feca17cd29e45d13b5940577ca0b5c278897bae9d0a4fef72ed7152162bbac5a5b89ed94a1de9374384872a1e18a149cd329820becc3c7b2993aa97929c56fb59d16bc281088a1c3482ad9ccb249eae1419724b793ba764615e93ec3f1d4075f40979c98a6e43699db439044f1a769df62a68f6bcf204d9e93eb45f779563d60d0b36872d9a228937f8e76c863863b3fe54bf23f20574de83163322370ec05481a7c35a9be5da12c209bc8dc394a2db8f32bf6043ca8b3452b8f2d0b2e6c9870d3c21bd26a67f7569ff2a983a90cb64be9310994da93b5ae796254f37467c27ab89c867901ebc30a78b90d95b3d1992a4228dfe78152d22cf2a44074a14388721f1c02d0e8b47ee5f6b291632cc5335aef499cfb4e40a51e84127a9d3a473508874859f618c68c94849073916fca5b6c4cc42e82637a875ac83f5bc5e861420935589b755a2b2c185a0bca242350911e627163e08effbd768e3cf60e401f34593e114927ee4db1a9bf8c81986e2168deb8fc81033ca0ec74a030cb16319d8603c1f449a24bba03f30207721b0dd3867b93f20099ac8a0074211baeabd34afd10493ae998beaca75f0a2e6991049e03b7bb7da369a5ed8aae6c7d9f03147497916baff1e0be39cd6abc899a97ac2dca572b28291aef8b51275173cc651316baf8fee2acd16ee365bfe50f0c559e6b55e8fa7085917f0885fdf2527ecbb9b7d27b14f0b0949b4c38e5c0565129fa6ca676cd624c3f97f87be738684f2168b24dfeab05db42cef818696001aea43b9857e92a674de3822521267ad3443fdccd400ba51a24e284fae148f32aa102a78de34b0d40baa580c657306c48278d3b9326a880b742d122ee83c8166076c8b36ec4db98da882423835c0eaca4898a9beccaa0defd5b3c355b98258d0718d7e57d1a693697eae7cc93f19f892ec0e4e0b6c9dd080275c5be4f2a277ff999c01ab68e3f60ead9593741e92c4965a8805e1ee8ef983ef13d2104c5e10eda5ad51e8832d7ba3ef236e717ff63065056ae0a3b3488a76deeb426a450c8bc420e024acf54101e9e8d3fc197600112fe6c75020c747a4eedf1caeaaf9ca6a80cd43386697b13161e8b8189e59c09d87e0344ce7c161678e0c6941c951a61d0c4664114325d965aeaa0589e3f0ba410bcecdd5fcee3c05ea946a9576b7c9aa295a95f712b49764d1e19989cf5403fbb1a77ed8b963a6687f566e3e3f7356fe6f13614b9d5db98c7f5567b0f9215e7b2705ae063ed8698bd6b8b618cd93deaa5b297763b3f6da5882ddb65d8d0d193de14fdda3845436b98dc678860bc9cc2d05c1052be25b511e314c15b9bc87ed9da2e6e903d38ed677a651ef05c186578057f259b11d823f611d8d06940cc46f160125a037b8e19355b796f8925d6c76779a08a55743044ba2f8849c525fb25c375b58a35b1fbfeda49cc7e7f89103efe219ce0d96586596375347d96d343d63316cdbb3a2d7fdf01618227d0c19cd86f076c7ce2fb4752ac5a646702e1c4c648f842ff555f6477ee04558933ed4c9caa016ad41b19b47735c6adb3a5faa0f0547d85131dc4fac929d497c7b4ca40de1ed0ca832c52e5f426adf0d4d52ff793658b2d568ca14471509b1595809d32096cb8b9ed82314ce14a0fd140d6f8f0798fc91d3f071bb783cff183c8e5fb1a8155f5dec7b640ed6cd2ec0ecdb2c64ed46199ac153f7883f3e5c891d736f146b223ce583179a426d3578fff90c17035461069970d4573bc9f8800033196bd574b7c6d7b24c6925b4a0fec5fa46f015e29a3960dee6d32040280c3c80f6d80beac4f926dfa72e83d96a40a3722f298a003b35c770244a28cec3a8cf8fde9fd64412f283eb036a070a7f94cfd76e868f6146a20934009627606296fe86f45ee8dafbaae43272815153cb73cdfb6d9ac2ba80aea3ff881432412c60afcf3e51191cc373f83ecede0ab3433ac6c41dae3394fb40088b90d5868dd41c9789735dab9e541b5c93c142f035443ca43820222c19888739397246bb575c4ff2b6529e1e07e10751d1ca9817573c81b28b50490510a2fdbb7750da9818017242c5408282b3ebbdb1e6b1c0af62cca2f7679fbb0f054a8a65e3ed76107ef75cd77a519eb87fb47259505af34e13e82a6d69397ed86172730b3ed1b3f0a06f9d4bc396ad74ef0d2af58aa72be435731ae5f8c3ebbf18db144c8642e43da776cb47ee86c70bb87ca8b623c8bbdb33e4ba1dffb7657c52f71af5a57d971d3ddf9ed2209a50f2a9e11c8d3ac8463d41f7f8f03af70824b3c8ae18e4f9459b40029d725faa4f93100cf88a9dc9cea5a6ecade4a06d3b5e5f6e71cdab081f0e0ce22487a861e82c5294fb8c60702f99f4ee5bee4cedcd1a0307a3d5d6e1c90177bc8848198695f4fa7e6b94806923897ae2bbcd7606dca8c4875396044ace3d8439d3341c04bb401f961ce65e570da15551ab93914e5a7f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">如你所见，我将确保全文出现了每一个人的名字</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Records </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>loner</title>
      <link href="/2024/12/02/loner/"/>
      <url>/2024/12/02/loner/</url>
      
        <content type="html"><![CDATA[<p>游戏名：loner/远方</p><p>很简单的一个游戏，甚至可以说是有些无聊，如若放到现在来让我玩，那我恐怕是玩不下去的。但放在高中竞赛那段时间，却可以说是刚刚好。</p><span id="more"></span><p>游戏的玩法很简单，操纵飞机穿过一个个障碍物，在达到一定的公里数时即可解锁一小段故事。3+1章全部解锁后，就没有新内容了，不过可以解锁“禅模式”，也就是没有障碍物，没有尽头的无尽旅途。想来，“禅模式”才是更符合游戏名的玩法。</p><p>76段故事可能反而更像是游戏中最重要的部分（当然不同人，甚至是不同时间都会有不同的理解），现在我有时打开这个游戏仅仅只是为了看一看这个故事。剧情并非多么的惊艳，但是it's touching 。避免剧透这里就不仔细说剧情了（可看这里<ahref="https://xiex2024.github.io/2024/12/02/loner-story/">loner-story</a>），只能透露是反战题材的（笑</p><p>这并非是一个多么完美的游戏，但无论是玩法，画面乃至于音乐，都很适合一个人郁闷无助却找不到人倾诉时阴暗地在角落里消磨时光，短暂地脱离现实，孤独地前往远方。</p><p>《loner》</p><p>可玩性：3/5</p><p>音乐：4/5</p><p>画面：4/5</p><p>剧情：4/5</p><p>总评：3.5/5</p><p><img src="微信图片_20241202135004.jpg" /></p><p>tip:据说taptap上的版本收费且有很恶心的广告，建议在googleplay上下载。</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七年</title>
      <link href="/2024/12/01/%E4%B8%83%E5%B9%B4/"/>
      <url>/2024/12/01/%E4%B8%83%E5%B9%B4/</url>
      
        <content type="html"><![CDATA[<p>我选择将对七年的测评作为第一篇博客，或许该站会变成个人的游戏评价收集处。(笑)</p><span id="more"></span><p>以下为正文：</p><hr /><p>心绪难平。我很难评价这部游戏，公正地说，它的游戏性极差，比同类型的《to themoon》还差；我无意将它的剧情封神，但至少在我这里，它的剧情水平接近甚至于超越了去月球。剧情的逻辑毫无漏洞，我原本以为它忽视的东西在最后的最后忽然提起，并成为了扭转局面的关键。</p><p>前十五章可能略有些无聊，但中期到后期的处理十分紧凑，每一章结尾都会是刀子或者反转。当在主要故事末尾出现两人相逢时我终于嘴角出现了笑容，但此后超过十个的ep又一点点温柔地展现了残酷的真实……剧情中的伏笔数量超出我想象，许多我以为只是闲步的对话在数十章后突然得到了解释或者利用，即使是原本并不令人在意的配角也隐晦刻画了背后的故事。游戏中交织的友情，爱情，亲情……感人至深。春人与葵，17711个七年，当葵在漫天的纸屑配合着戛然而止的bgm下说出那句台词时我的心脏仿佛也骤停了一下。（试图对感情线评判但是失败）两人之间的这种信任简直是一个奇迹。即便最后两人不再有交集，但春人仍然没有失约。这种程度的感情或许并不现实，但我仍然羡慕并渴望着。最后，是好结局哦～</p><p>这部游戏无愧于其taptap9.9的评分，也值得我连续两天熬至四点的期待。</p><p>《我在七年后等着你》</p><p>可玩性：1/5</p><p>音乐：4.5/5</p><p>画面：3/5</p><p>剧情：5/5（5是评分的上限不是这部游戏的上限）</p><p>总评：5/5</p><p><img src="微信图片_20241201223907.jpg" /></p><p><img src="微信图片_20241201223917.jpg" /></p><p><img src="微信图片_20241201223921.jpg" /></p><p><img src="微信图片_20241201223923.jpg" /></p><p><img src="微信图片_20241201223927.jpg" /></p><p><img src="微信图片_20241201223930.jpg" /></p><hr /><p>喜报：截至2025.1.2023:26，该篇评测在taptap上获得了155赞13回复1转发，并被选为嘴替发言。</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
