<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>loner</title>
    <url>/2024/12/02/loner/</url>
    <content><![CDATA[<p>游戏名：loner/远方</p>
<p>很简单的一个游戏，甚至可以说是有些无聊，如若放到现在来让我玩，那我恐怕是玩不下去的。但放在高中竞赛那段时间，却可以说是刚刚好。</p>
<span id="more"></span>
<p>游戏的玩法很简单，操纵飞机穿过一个个障碍物，在达到一定的公里数时即可解锁一小段故事。3+1章全部解锁后，就没有新内容了，不过可以解锁“禅模式”，也就是没有障碍物，没有尽头的无尽旅途。想来，“禅模式”才是更符合游戏名的玩法。</p>
<p>76段故事可能反而更像是游戏中最重要的部分（当然不同人，甚至是不同时间都会有不同的理解），现在我有时打开这个游戏仅仅只是为了看一看这个故事。剧情并非多么的惊艳，但是
it's touching 。避免剧透这里就不仔细说剧情了（可看这里<a
href="https://xiex2024.github.io/2024/12/02/loner-story/">loner-story</a>），只能透露是反战题材的（笑</p>
<p>这并非是一个多么完美的游戏，但无论是玩法，画面乃至于音乐，都很适合一个人郁闷无助却找不到人倾诉时阴暗地在角落里消磨时光，短暂地脱离现实，孤独地前往远方。</p>
<p>《loner》</p>
<p>可玩性：3/5</p>
<p>音乐：4/5</p>
<p>画面：4/5</p>
<p>剧情：4/5</p>
<p>总评：3.5/5</p>
<p><img src="微信图片_20241202135004.jpg" /></p>
<p>tip:据说taptap上的版本收费且有很恶心的广告，建议在google
play上下载。</p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title>for freedom and life!</title>
    <url>/2025/01/06/for-freedom-and-life/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不妨猜猜是谁的名字" data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c8d6b4215600c1e49e69c1bbf54be33042bf1b55ce1ced9f2c0e550a78d4521b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">如你所见，我将确保全文出现了每一个人的名字</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Records</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>py_notes</title>
    <url>/2025/03/17/py-notes/</url>
    <content><![CDATA[<p>自用</p>
<span id="more"></span>
<h1 id="字符串处理">字符串处理</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s = &#x27;xiex&#x27;</span><br><span class="line">s1 = s.center(2)</span><br><span class="line">print(s1)#数字小于字符串长度则不做处理</span><br><span class="line">s2 = s.center(7)</span><br><span class="line">print(s2.index(&#x27;x&#x27;))#若填充数为奇数则左侧多一个</span><br><span class="line">print(s.center(20))#居中并填充使总长度为20</span><br><span class="line">print(s.ljust(20))#左对齐并填充</span><br><span class="line">print(s.rjust(20))#右对齐并填充</span><br></pre></td></tr></table></figure>
<h1 id="集合运算和处理">集合运算和处理</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setA = &#123;2,1,3&#125;;setB = &#123;3,4,5&#125;</span><br><span class="line">print(setA|setB)#并集，运算。而A.union(B)作为方法有同样的功能</span><br><span class="line">print(setA&amp;setB)#交集，A.intersectiom(B)</span><br><span class="line">print(setA-setB)#仅出现于setA的元素</span><br><span class="line">print(setA&lt;=setB)#setA是否包含于setB</span><br><span class="line">print(&#123;1,2,3,4,5&#125;.pop())#“随机”移除，但实际删除集合中的“第一个”元素，由于集合的无序性而称为随机，例如纯数字是会输出最小的</span><br><span class="line">print(&#123;&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;,&#x27;g&#x27;&#125;.pop())#此处即为随机</span><br></pre></td></tr></table></figure>
<h1 id="字典处理">字典处理</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict = &#123;1:4,&#x27;a&#x27;:&#x27;c&#x27;&#125;</span><br><span class="line">print(&#x27;c&#x27; in dict ,1 in dict)#直接用in所查找的是是否在索引中</span><br><span class="line">itemdict = &#123;&quot;item&quot;:&quot;banana&quot;,&quot;cost&quot;:24&#125;</span><br><span class="line">print(&quot;The %(item)s costs %(cost)7.1f cents&quot; % itemdict)# %(name)d可以获取字典中name所代表的值</span><br></pre></td></tr></table></figure>
<h1 id="人为抛出一条异常信息">人为抛出一条异常信息</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">anumber = int(input())</span><br><span class="line">if anumber &lt; 0:</span><br><span class="line">    raise RuntimeError(&quot;You can&#x27;t use a negative number&quot;)</span><br><span class="line"></span><br><span class="line">from math import sqrt</span><br><span class="line">def squareroot(n):#牛顿法求平方根</span><br><span class="line">    root = n/2 #initial guess will be 1/2 of n</span><br><span class="line">    for k in range(20):</span><br><span class="line">        root = (1/2)*(root + (n / root))</span><br><span class="line">    return root</span><br><span class="line">print((squareroot(5)-sqrt(5))*(10**10))</span><br></pre></td></tr></table></figure>
<h1 id="面向对象">面向对象</h1>
<p>python为所有的类提供了一套标准的工作方法，但可能在一些情况下没有正常工作，如下：
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class fraction:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">print(fraction(2,5))#返回指向的地址字符串</span><br></pre></td></tr></table></figure>
此处__str__方法即为内置的方法，指示了如何将对象转化为字符串
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class fraction1:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">    def __str__(self):</span><br><span class="line">        return str(self.top)+&quot;/&quot;+str(self.bottom)</span><br><span class="line">    def __add__(self,other):#加法运算</span><br><span class="line">        top1 = self.top*other.bottom + \</span><br><span class="line">               other.top*self.bottom#\可以作为续行符</span><br><span class="line">        bottom1 = self.bottom*other.bottom</span><br><span class="line">        return fraction1(top1,bottom1)#可以加入用找最小公倍数的方法化简来优化,但这部分的重点不在此处</span><br><span class="line">print(fraction1(2,5))</span><br><span class="line">print(fraction1(2,5).__str__())</span><br><span class="line">print(str(fraction1(2,5)))</span><br><span class="line">print(fraction1(1,2)+fraction1(1,5))</span><br></pre></td></tr></table></figure> ## 浅相等与深相等
对于两个对象来说，直接==比较是比较两者是否引用了同一个对象，而非对值的比较
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = fraction1(3,5)</span><br><span class="line">b = fraction1(3,5)</span><br><span class="line">print(a==b)</span><br><span class="line">#建立__eq__方法，进行值的比较</span><br><span class="line">class frac:</span><br><span class="line">    def __init__(self, top,bottom):</span><br><span class="line">        self.top = top</span><br><span class="line">        self.bottom = bottom</span><br><span class="line">    def __eq__(self, other):</span><br><span class="line">        return self.top == other.top and self.bottom == other.bottom#仍不完善，可能输入的并非最简分数</span><br><span class="line">a = frac(3,5)</span><br><span class="line">b = frac(3,5)</span><br><span class="line">print(a==b)</span><br></pre></td></tr></table></figure> fraction的完整实现 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def gcd(m,n):</span><br><span class="line">    while m%n != 0:</span><br><span class="line">        oldm = m</span><br><span class="line">        oldn = n</span><br><span class="line"></span><br><span class="line">        m = oldn</span><br><span class="line">        n = oldm%oldn</span><br><span class="line">    return n</span><br><span class="line">class Fraction:</span><br><span class="line">    def __init__(self, top, bottom):</span><br><span class="line">        self.num = top</span><br><span class="line">        self.den = bottom</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return str(self.num) + &quot;/&quot; + str(self.den)</span><br><span class="line"></span><br><span class="line">    def show(self):</span><br><span class="line">        print(self.num, &quot;/&quot;, self.den)</span><br><span class="line"></span><br><span class="line">    def __add__(self, otherfraction):</span><br><span class="line">        newnum = self.num * otherfraction.den + \</span><br><span class="line">        self.den * otherfraction.num</span><br><span class="line">        newden = self.den * otherfraction.den</span><br><span class="line">        common = gcd(newnum, newden)</span><br><span class="line">        return Fraction(newnum//common, newden//common)</span><br><span class="line"></span><br><span class="line">    def __eq__(self, other):</span><br><span class="line">        firstnum = self.num * other.den</span><br><span class="line">        secondnum = other.num * self.den</span><br><span class="line">        return firstnum == secondnum</span><br></pre></td></tr></table></figure> ## 继承：以逻辑门为例
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class LogicGate:#超类LogicGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        self.label = n</span><br><span class="line">        self.output = None</span><br><span class="line">    def getLabel(self):</span><br><span class="line">        return self.label</span><br><span class="line">    def getOutput(self):</span><br><span class="line">        self.output = self.performGateLogic()</span><br><span class="line">        return self.output</span><br><span class="line"></span><br><span class="line">class BinaryGate(LogicGate):#有两个输入的门（与&amp;或门），继承LogicGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)#先调用父类的构造方法</span><br><span class="line"></span><br><span class="line">        self.pinA = None</span><br><span class="line">        self.pinB = None</span><br><span class="line"></span><br><span class="line">    def getPinA(self):</span><br><span class="line">        if self.pinA is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin A: input for gate&#x27; + \</span><br><span class="line">                            self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pinA.getFrom().getOutput()</span><br><span class="line">    def getPinB(self):</span><br><span class="line">        if self.pinB is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin B: input for gate&#x27; + \</span><br><span class="line">                         self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pinB.getFrom().getOutput()</span><br><span class="line"></span><br><span class="line">class UnaryGate(LogicGate):#非门</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">        self.pin = None</span><br><span class="line">    def getPin(self):</span><br><span class="line">        if self.pin is None:</span><br><span class="line">            return int(input(&#x27;Enter Pin: input for gate &#x27; + self.getLabel() + &#x27;--&gt;&#x27;))</span><br><span class="line">        else:</span><br><span class="line">            return self.pin.getFrom().getOutput()#即返回连接器所连接的上一个类的输出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class AndGate(BinaryGate):#与门，继承BinaryGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        if a==1 and b==1:</span><br><span class="line">            return 1</span><br><span class="line">        else:</span><br><span class="line">            return 0</span><br><span class="line"></span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">    # 在BinaryGate 类中，逻辑门有两个输入，但连接器必须只连接其中一个。如果两个都能连接，那么默认选择pinA。如果pinA 已经有了连接，就选择pinB。如果两个输入都已有连接，则无法连接逻辑门。</span><br><span class="line">        if self.pinA == None:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        else:</span><br><span class="line">            if self.pinB == None:</span><br><span class="line">                self.pinB = source</span><br><span class="line">            else:</span><br><span class="line">                raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line"># g1 = AndGate(&#x27;G1&#x27;)</span><br><span class="line"># print(g1.getOutput())</span><br><span class="line"></span><br><span class="line">class OrGate(BinaryGate):#与门，继承BinaryGate</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        a = self.getPinA()</span><br><span class="line">        b = self.getPinB()</span><br><span class="line">        if a==0 and b==0:</span><br><span class="line">            return 0</span><br><span class="line">        else:</span><br><span class="line">            return 1</span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">        if self.pinA == None:</span><br><span class="line">            self.pinA = source</span><br><span class="line">        else:</span><br><span class="line">            if self.pinB == None:</span><br><span class="line">                self.pinB = source</span><br><span class="line">            else:</span><br><span class="line">                raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class NotGate(UnaryGate):</span><br><span class="line">    def __init__(self,n):</span><br><span class="line">        super().__init__(n)</span><br><span class="line">    def performGateLogic(self):</span><br><span class="line">        pin = self.getPin()</span><br><span class="line">        if pin == 1:</span><br><span class="line">            return 0</span><br><span class="line">        else:</span><br><span class="line">            return 1</span><br><span class="line">    def setNextPin(self, source):</span><br><span class="line">        if self.pin == None:</span><br><span class="line">            self.pin = source</span><br><span class="line">        else:</span><br><span class="line">            raise RuntimeError(&quot;Error: NO EMPTY PINS&quot;)</span><br><span class="line"></span><br><span class="line">class Connector:#连接两个逻辑门，内部包含LogicGate的实例但不在继承关系中</span><br><span class="line">    def __init__(self,fgate,tgate):</span><br><span class="line">        self.fromgate = fgate</span><br><span class="line">        self.togate = tgate</span><br><span class="line">        tgate.setNextPin(self)#此处传递参数self,即让tgate的值设定为连接器这个类的实例</span><br><span class="line"></span><br><span class="line">    def getFrom(self):</span><br><span class="line">        return self.fromgate</span><br><span class="line"></span><br><span class="line">    def getTO(self):</span><br><span class="line">        return self.togate</span><br><span class="line"></span><br><span class="line">g1 = AndGate(&quot;G1&quot;)</span><br><span class="line">g2 = AndGate(&quot;G2&quot;)</span><br><span class="line">g3 = OrGate(&quot;G3&quot;)</span><br><span class="line">g4 = NotGate(&quot;G4&quot;)</span><br><span class="line">c1 = Connector(g1,g3)</span><br><span class="line">c2 = Connector(g2,g3)</span><br><span class="line">c3 = Connector(g3,g4)</span><br><span class="line">print(g4.getOutput())</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h1 id="算法">算法</h1>
<h2 id="递归">递归</h2>
<p>递归的三个原则为：</p>
<p>①基本情况，即无需处理就可以直接return的情况</p>
<p>②算法会改变待处理数据的状态，使其更接近于基本状态</p>
<p>③调用自己</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def toStr(n,base):#递归示例，转换进制。</span><br><span class="line">    convertstring = &#x27;0123456789ABCDEF&#x27;</span><br><span class="line">    if n&lt;base:</span><br><span class="line">        return convertstring[n]</span><br><span class="line">    else:</span><br><span class="line">        return toStr(n//base,base)+convertstring[n%base]</span><br></pre></td></tr></table></figure>
<p><img src="image-20250316214546049.png" /></p>
<p>基本状态为一位数，于是不断将原整数整除10</p>
<p>用栈来储存结果，那么python会将函数的返回值储存在栈的顶端</p>
<p><img src="image-20250316220244264.png" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rStack = Stack()#将储存的结果压入栈中</span><br><span class="line">def toStr(n, base):</span><br><span class="line">    convertString = &quot;0123456789ABCDEF&quot;</span><br><span class="line">    if n &lt; base:</span><br><span class="line">        rStack.push(convertString[n])</span><br><span class="line">    else:</span><br><span class="line">        rStack.push(convertString[n % base])</span><br><span class="line">        toStr(n // base, base)</span><br></pre></td></tr></table></figure>
<p>示例：汉诺塔</p>
<p>其基本思路是，若有n层，从a挪到c，那问题可以分解为：</p>
<p>n-1层从a到b <span class="math inline">\(-&gt;\)</span> 1层从a到c
<span class="math inline">\(-&gt;\)</span> n-1层从b到c</p>
<p>代码如下（五层为例）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#汉诺塔</span><br><span class="line">def moveTower(height, fromPole, toPole, withPole):</span><br><span class="line">    if height &gt;= 1:</span><br><span class="line">        moveTower(height-1, fromPole, withPole, toPole)</span><br><span class="line">        moveDisk(fromPole, toPole)</span><br><span class="line">        moveTower(height-1, withPole, toPole, fromPole)</span><br><span class="line">def moveDisk(fromPole, toPole):</span><br><span class="line">    print(fromPole+&#x27;-&gt;&#x27;+toPole)</span><br><span class="line">moveTower(5,&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;)</span><br></pre></td></tr></table></figure>
<h2 id="动态规划">动态规划</h2>
<p>以找零钱为例，采用递归算法结果如下： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def recMC(coinValueList, change):</span><br><span class="line">	minCoins = change</span><br><span class="line">	if change in coinValueList:</span><br><span class="line">		return 1</span><br><span class="line">	else:</span><br><span class="line">		for i in [c for c in coinValueList if c &lt;= change]:</span><br><span class="line">			numCoins = 1 + recMC(coinValueList, change-i)</span><br><span class="line">			if numCoins &lt; minCoins:</span><br><span class="line">				minCoins = numCoins</span><br><span class="line">	return minCoins</span><br><span class="line"></span><br><span class="line">recMC([1, 5, 10, 25], 63)</span><br></pre></td></tr></table></figure></p>
<p>问题分解为：（change-i）的最小硬币数+1，其中i为一枚硬币的面值，故而循环多次直到遍历每一种可能。</p>
<p>该方法的问题在于有太多次对相同方案的遍历，如下图</p>
<p>![]image-20250317153318112.png)</p>
<p>相同的节点出现了多次，而每次出现都会进行完全一致而冗余的计算，这大大降低了算法的效率。</p>
<p>对此我们进行“针对性”的优化，即用<code>knownResults</code>储存每个节点所对应的数值，在计算时先查找这个节点是否已被计算过，以减少冗余的计算。
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def recMC(coinValueList, change, knownResults):</span><br><span class="line">    minCoins = change</span><br><span class="line">    if change in coinValueList:</span><br><span class="line">        return 1</span><br><span class="line">    elif knownResults[change] &gt; 0:</span><br><span class="line">        return knownResults[change]</span><br><span class="line">    else:</span><br><span class="line">        for i in [c for c in coinValueList if c &lt;= change]:</span><br><span class="line">            numCoins = 1 + recMC(coinValueList, change-i, knownResults)</span><br><span class="line">            if numCoins &lt; minCoins:</span><br><span class="line">                minCoins = numCoins</span><br><span class="line">                knownResults[change] = numCoins</span><br><span class="line">    return minCoins</span><br><span class="line"></span><br><span class="line">recMC([1, 5, 10, 25], 63, [0]*64)</span><br></pre></td></tr></table></figure></p>
<p>在这里介绍动态规划（dp），与上述算法不同，在这个问题上，递归采用了更为系统的储存方式，其会储存从1开始一直到change的每一个值对应的最少硬币数。</p>
<p>对于每一个值，其需要硬币的最小值，来自于这个值减去一个硬币的面值后所有情况的最小值+1。如对于（11）来说，为（1）+1，（6）+1，（10）+1，分别对应减去的硬币为10，5，1的情况，因此代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def dpMakeChange(coinValueList, change, minCoins):</span><br><span class="line">    for cents in range(change+1):</span><br><span class="line">        coinCount = cents</span><br><span class="line">        for j in [c for c in coinValueList if c &lt;= cents]:</span><br><span class="line">            if minCoins[cents-j] + 1 &lt; coinCount:</span><br><span class="line">                coinCount = minCoins[cents - j]+1</span><br><span class="line">            minCoins[cents] = coinCount</span><br><span class="line">    return minCoins[change]</span><br></pre></td></tr></table></figure>
<p>如果我们需要得到对于每一个值，在硬币数量最少的情况下所有硬币的面值，我们实际上只需要储存新增的硬币的面值即可递推得到所有的面值，修改代码如下；
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def dpMakeChange(coinValueList, change, minCoins, coinsUsed):</span><br><span class="line">    for cents in range(change + 1):</span><br><span class="line">        coinCount = cents</span><br><span class="line">        newcoin = 1</span><br><span class="line">        for j in [c for c in coinValueList if c &lt;= cents]:</span><br><span class="line">            if minCoins[cents - j] + 1 &lt; coinCount:</span><br><span class="line">                coinCount = minCoins[cents - j] + 1</span><br><span class="line">                newcoin = j</span><br><span class="line">            minCoins[cents] = coinCount</span><br><span class="line">            coinsUsed[cents] = newcoin</span><br><span class="line">    return minCoins[change]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def printcoins(change, coinsUsed):</span><br><span class="line">    while change &gt; 0:</span><br><span class="line">        print(coinsUsed[change],end = &#x27; &#x27;)</span><br><span class="line">        change -= coinsUsed[change]</span><br><span class="line"></span><br><span class="line">coinsUsed = [0]*64</span><br><span class="line">minCoins = [0]*64</span><br><span class="line">dpMakeChange([1, 5, 10, 21, 25], 63, minCoins, coinsUsed)</span><br><span class="line">printcoins(63,coinsUsed)</span><br></pre></td></tr></table></figure></p>
<h2 id="搜索">搜索</h2>
<h3 id="二分搜索">二分搜索</h3>
<p>正常的搜索方法时间复杂度为O(n)，若列表为有序列表，那在不存在于列表中时时间消耗会减少。而使用二分搜索，时间复杂度可以降到O(logn)。（注意如果使用切片方法（如下）可能不严格遵守该事件复杂度，因为python的切片操作的时间复杂度为O(k)，可以用计算下标的方法减少这一操作的事件复杂度）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def binarySearch(alist, item):</span><br><span class="line">    if len(alist) == 0:</span><br><span class="line">        return False</span><br><span class="line">    else:</span><br><span class="line">        midpoint = len(alist) // 2</span><br><span class="line">        if alist[midpoint] == item:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            if item &lt; alist[midpoint]:</span><br><span class="line">                return binarySearch(alist[:midpoint], item)</span><br><span class="line">            else:</span><br><span class="line">                return binarySearch(alist[midpoint+1:], item)</span><br></pre></td></tr></table></figure>
<p>但问题是，排序可能造成更大的负担。</p>
<h2 id="排序">排序</h2>
<h3 id="冒泡排序">冒泡排序</h3>
<p>冒泡排序多次遍历列表。它比较相邻的元素，将不合顺序的交换。每一轮遍历都将下一个最大值放到正确的位置上。</p>
<p><img src="image-20250327173026645.png" /></p>
<p>其代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def bubbleSort(alist):</span><br><span class="line">    for passnum in range(len(alist)-1, 0, -1):</span><br><span class="line">        for i in range(passnum):</span><br><span class="line">            if alist[i] &gt; alist[i+1]:</span><br><span class="line">                alist[i], alist[i+1] = alist[i+1], alist[i]</span><br></pre></td></tr></table></figure>
<p>其优势在于可以提前判断出是否已经有序（若一轮都没有发生交换），对于只需要交换少数次数的列表有优势，称<strong>短冒泡</strong>，但大部分时候是效率最低的排序方法。</p>
<h3 id="选择排序">选择排序</h3>
<p>其与冒泡的区别是不再以交换将每一个值放到正确的位置，而是对于每一个位置，找到未排序的最大值放入。</p>
<p>代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def selectionSort(alist):</span><br><span class="line">    for fillslot in range(len(alist)-1, 0, -1):</span><br><span class="line">        positionOfMax = 0</span><br><span class="line">        for location in range(1, fillslot+1):</span><br><span class="line">            if alist[location] &gt; alist[positionOfMax]:</span><br><span class="line">                positionOfMax = location</span><br><span class="line"></span><br><span class="line">        temp = alist[fillslot]</span><br><span class="line">        alist[fillslot] = alist[positionOfMax]</span><br><span class="line">        alist[positionOfMax] = temp</span><br></pre></td></tr></table></figure>
<p>由于减少了交换次数因此速度快于冒泡。</p>
<h3 id="插入排序">插入排序</h3>
<p>最坏情况下的时间复杂度仍然为<span
class="math inline">\(O(n^2)\)</span>，最好情况下为<span
class="math inline">\(O(n)\)</span>，但采用了和冒泡以及选择不同的思路。通过不断地将新元素插入已排序列表实现排序。</p>
<p><img src="image-20250328161147281.png" /></p>
<p>代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def insertionSort(alist):</span><br><span class="line">    for index in range(1, len(alist)):</span><br><span class="line">        currentvalue = alist[index]</span><br><span class="line">        position = index</span><br><span class="line"></span><br><span class="line">        while position &gt; 0 and alist[position-1] &gt; currentvalue:</span><br><span class="line">            alist[position] = alist[position-1]#如果比该位置的数小就继续往前挪</span><br><span class="line">            position = position-1</span><br><span class="line"></span><br><span class="line">        alist[position] = currentvalue</span><br></pre></td></tr></table></figure>
<p>可以看到，尽管时间复杂度一样，但该方法快于冒泡排序，因为移动所需要的时间短于交换（只需要进行一次赋值）。</p>
<h3 id="希尔排序">希尔排序</h3>
<p>类似于插入排序，但通过一定的步长将原列表划分为几个子列表，将子列表通过插入排序后再合并。不同的增量下时间复杂度不一样，但介于<span
class="math inline">\(O(n)\)</span>与<span
class="math inline">\(O(n^2)\)</span>之间。其关键在于找到合适的切分列表的方式。看似要多次排序增加了复杂度，但实际上，再后期的排序中，各个元素已经相当“接近“正确位置，需要的时间也大大降低。换言之，只有最后一步才是”真正“的排序，而前面的步骤只是预处理以减少最后排序的复杂度。</p>
<p>如对于增量为<span
class="math inline">\(1,3,7,15,\dots,2^k-1\)</span>的希尔排序来说，时间复杂度为<span
class="math inline">\(O(n^\frac{3}{2})\)</span>；而增量为<span
class="math inline">\(1,2,3,4,6,8,9,\dots,2^p3^q\)</span>（序列满足递增且<span
class="math inline">\(p，q\)</span>每次最多<span
class="math inline">\(+1\)</span>）来说，其时间复杂度为<span
class="math inline">\(O(n\cdot\log n^2)\)</span>，证明从略，参见<a
href="https://blog.csdn.net/qq_36667170/article/details/103899517">希尔排序复杂度详细分析（翻译来源：Hans
Werner
Lang教授）_希尔排序时间复杂度-CSDN博客</a>。对增量序列的取法来进行优化相当有趣，但现在没有能够在最坏情况下也能达到<span
class="math inline">\(O(n\cdot\log
n)\)</span>的增量序列，甚至是否存在也不好说？</p>
<p>可以用另一种思想来理解：将数据存放在二维数组里，然后对每一列进行排序→直接合并在划分为列数更少的二维数组，并重复以上过程，当然，在实际实现中，仍然是一维数组。</p>
<p>通过代码来实现，举例：先划分为<span
class="math inline">\(\frac{n}{2}\)</span>个子列表，再划分为<span
class="math inline">\(\frac{n}{4}\)</span>个子列表……直到整个列表完成排序。代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def shellSort(alist):</span><br><span class="line">    sublistcount = len(alist)//2</span><br><span class="line">    while sublistcount &gt; 0:</span><br><span class="line"></span><br><span class="line">      for startposition in range(sublistcount):</span><br><span class="line">        gapInsertionSort(alist,startposition,sublistcount)</span><br><span class="line"></span><br><span class="line">      print(&quot;After increments of size&quot;,sublistcount,&quot;The list is&quot;,alist)</span><br><span class="line">      sublistcount = sublistcount // 2</span><br><span class="line"></span><br><span class="line">def gapInsertionSort(alist,start,gap):</span><br><span class="line">    for i in range(start+gap,len(alist),gap):</span><br><span class="line">        currentvalue = alist[i]</span><br><span class="line">        position = i</span><br><span class="line"></span><br><span class="line">        while position&gt;=gap and alist[position-gap]&gt;currentvalue:</span><br><span class="line">            alist[position]=alist[position-gap] </span><br><span class="line">            position = position-gap</span><br><span class="line"></span><br><span class="line">        alist[position]=currentvalue</span><br></pre></td></tr></table></figure>
<p>希尔排序是通过对插入的改良实现的，因此shellSort方法中调用了插入排序的内容。</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>why not die?</title>
    <url>/2025/02/06/why_not_die/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="A phrase and a title." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="cbdc76b726c92a355051f1b432b4695ef0ab322500a191f572c0e1b5c36035e3">65656f3c3e4487cb80a6cc94c13c3fa9964f38cb4069ad37fbab766a4a4a071d1c22f3726806211334047847b7bcc66f717a732ec66513aa820327f601c24e5339b0cfb9d339ec1a1bf7a993b8f9c04e5814d42a8404f594182ac4e4d39d23ab6bc047facbca28b45658e773f6a1606237d7d6837a8390a3a41b7cab9f7cd9859141a89cb97f1a5b2e8188aa281827dcd1d2f5b09ec01c25a9579732267eb752b61f73e4cbec7856b3e5f28f41a5fcc9838f7f343c46bd04f5d8c92fe48b80c15ab7a36d58966f95ff8264dd3c8d9d056cd2f04b403a00bfc4dcd8b4991a031fe73faa9ea3a5720789b5dd7c6d50e7e3515b1ebfa77bef1bf4d57daa53b18edd5d7badfac8187d922e9340fcb6ae5dde9ed36a28f2f8608092c404eb4531dfec76e4d7c44b45cd7ea703a42b7476b4ee6a7a090e900742ef81f983b5e35c1778f5734564f0257fef97b616bf5fc25c1f452e7f270a1685a3c2215b5fc44c98de9555dc342b709f38876b983169db91410f77a8843ad3a74a3ba985803e9c43965cd8d53e9d9d4246e25b1898522774f9dbd454004713c49b021f99e4f128f725577cab4d9f2b80df000ea7222392fc511f26838a574c050ea97a72340023503ee6b9554345295e9346a5b10ddd538d1f9a328056e5ebdacaf2faf0dad215e07439f4e5ef5e724c46b3da53460e77e42c1423b2325f450735bb16b6280fcf1a612a0a8e208e7916cd6fc758dde84387572e5eaf47ad11f7a82c43572a98746d00a5bde98c6a92ec5e56232326fa1b5d32df838db5812272c8391d6745f88e21ff58eb4b7ee8d3982016153d0502f4a37228468b4e190b0578a6bb0750ba60974f3858d247b9f889b7a1442e96cd9ec594f6b45b0defa369cfd42a3247f001b2e2bda7761b3b52a2bf918f08e76d9482e57866f28751a3cdd6ec7a8ecd590b81714570d2d44d7e229233d913a315c29030d6d11c4d398acb3117f4e93d9bfe17dbfa73963f74bdb2046b88fe4c2aaf276c3178d6bec4525b7a45fa2478e299b7176a60ccfbf2cee6080d37d545886e269233b147a8dd33abe67229563f28062fb4e782a03bf15228c5c2c3b3cbf33c85491235a9fc0c13345c736efcf2ec922f67f143d338f79b00b4fe5008785cddb5079075b1b709a05d03c1b2ae58eb6c14fe9acb832b26ff0fc511611678b0094c0117223429e840762091332eeba2f0aabb87af9c93eb37e0f585ef0f93a88e8dfb8d3668f1b1d1e6860428d7853685857eadb48a24c826632304ddc9e47857afdfca2497daa5dbe7ffe6a4a5468673eccfe5f801840214cef2c80744331a8d7fb3dcd9527860088d12c46f61d13b51c6ecd6393b387bcd82b95e046fe382c1b76956b86124961fdcd83c2a2c4cd9cc4ab8207666ac787fcc90078053081f8f39df586a7d74e1fc301c403c9df5692a19e0a047495aca67bee5d087f330df5d039933372ffc355d6665383faff015a45a3c906791c51abd9b5b342aae5ce0007081eef6bea3d58a3f580b04454cb3bb9ac3fc35cd4c3febf094393e7c2ae8453201aa45faeead337e6adf77a770a5e8494bbeb0cea6ca4d013b6131ae393dbf81fc1a18c0b2d4ac22373b046840209f9f2f5982c0f2489e06a94eb4b5919a98240ed9873f3a6015ee4c447626e70ccfd8f6fc81f5a5a926a6e80fa90bb1cdb1c0568a41d1fb87cef88e20b80e3b3ce19ce9fe8a642deb4dcc8750d126617e9f70b89897d1cb08de9c02d69a966c7e69088fc56b394c493ed376f6f4d0b1b7e761cf61515e314825dd3f01a67a5f117c2f3525d274e1ed95755179e2b757b124a4245493417bec0f8242d1c69134de46a19910351f6c1c12d58e2d59f8a4eab505c6b20d5604724df335b7e972b0281efdf0347c7babe28ecc19df13403515220d9254bb64ee8ab2f91bbc09186f2afb189f8f29ef034c2750e5eb84e2101d996ce154563b3e0bda48e526b97113855b63c89e4cf9febefda049291d8e6ad193f9789ff2592cc9b309fadbababb87c4d4449f0c46e84e80f70e50995fbfda24d88b775d3608883b352f6a8e3aff9277bbc36e00131024076f600edc1329e0f8ea5a5d66788833ba30babebb3c616753d7bdccce3785036c69bfca3158e5aaf52ed1a5cc88f5c1865de53c370a4ade3fa466cf36797157590f41914c615674f2e5ab4479ca97d8bb37c929216a12c22a2490269b8ba65b6f65730db60dec782657d04f857d5c4f60a7ab324eb77413152c8bfef35ab37a0b04fb240ac69ed04fdcda4798a83a99ed322bb72e8b70599862b6e5902e450968683b8fa9d428f70876b14041ce387d86ee810b591afc8679383757fd53729181906d45f68bc5fdb993e4aa7c694894020d7fdc6ec02e9e10add70d008a7f726b78088d5addd4053bebc2ac3a6ce96bb19a54ea496a7610d8841057bb4ab36fd8e56487b476cbc0d641d0442ef0dd996d2e6c318f6d1e379e63efd3a010d3c706bf50d7abbc049d6e43b9556f4bca123c75f4a7352f6d4349445ec8d7a50efa03312533220f194e58151bb67b185b7cf554bd5a6e84abb9123279f75f9a76a80ca48c867b838a19fcdc9f721a4ce351055321c551fa490b90bd237d61b2b65ec05875e90ffab4c257a91ed8b19f8ff6d63a4e070288e8d6979c1bbc121639967f8dd315812993913b1d1423ddda78fa54cf5e568be3d1905dfc63d4ec4fc3ce4f33f7f2e640a5974489df684fc0d3fc134fe6eea3b40446cca2c22d809e74e6fddfde382d900d3f5e1e4357887a1881736e8dca5b7ef6d7a07809e6471cb7a6fb9979d1d49bd273d8a4587c2d4433efe3862b6372f3b9054122a2ce27ee9b4746cd19e0a5ec6726d2c464500f8bbc9f191754ddd0e6db9aa87282c5e9b467e8a32568ec5bd2d94ccab38fb21a64d5c8da35b6ed08a11e3f35eadd17cb26eabff65e5a4f3264ada9e2d56640d73209c84641208be41d161af784aa95184107d3b7afc37196b1770308ef2228d01f7d5f12fef4a391c4d6f30b1f485349b525fe0d67a34e3551549f6a70f6d4962488099809cb3fcc818da736ccbe32f3f08c313e6d28cb878aaf5ad04d9fe2243162c502fc7c1be2df2f5c253eaa0fcee8498726128a2c59585bb7b34d1a0b3b9e177015f5e2a5822a4513a16906c218b154fa44fe470ef9519f0d4d35876a77e2232c1479cb24cadd3325822a791de5d57e5fd79472fd0b5f76c366bf4c3cd007471bde206b6320335db519f5d04d9a2a7cee07725bc978e65f9d3a6cb5f694a9918f206cd7bc1ccbffb0a50024aa53d4d32cd60ca4db37d7d7efcdacf3ed5b16f9c8c9de71ada00d9d048e55254655b02977c15cdf43eb541656ef81af31cbaa5f8e15dc468f2e2098c0a433cd5b72b83fc548706892d15ffab6abada5e0e85a52c2b26135c9685df7993c62327582502520a8dcbaeeb5e8cad7f9b6cb9ccae5e43477cb42abd0f2554618d09dbd3ad18978d64b1b209e6b3269f7e011da07e6e44d227b380827c45039b97f79c7f357ab72fc82761399754a6edd9daba8b47ecea18921db5d71a1f85a3060c09b906810a894d278a04e2d5bffdaf275987c7b8261ba65821ac5b228ff066ca5c68b934ffd117dffb30eb47f24c2eb1e0e01f103b0aaace1cb0a77d5c37f40a95076d59d140bdf4f7fbc2e64fa500ddc9ac50a2c9340cf00166a3b2c988c31c87cb245cfb4014f9975c719d69a9b1a88b1271b4ba225e7deb901d094fa3b2cb4baaf7f346eb7dc202781c60e8e2960e008f7613e16f4bc5c0570f53f06d7093cfdf11ee81d24bef2083d1c5d413d87f61ae4d6b97b298b8604b9b67fcec3700e251d0d693b34d643f5a3d8f92ce9e533df5217f4e5345f45441387a7efc216dcc9fa2585f008494e1e7f57681bf972290388b6353757c5dd8b0c014ed3d99475da82f1bebf56377328e20ab95ae3ba7c69edb34db5f257c1e33fe9763508cae3a4de370d5f7298c3ded9e976a10c9dbf02ad3aff17e70e09ede8757f01f1d26abb5beb35bf83fb6f27426f2e7f6e143b9ae53affe544372a47f2688de4dd75efbf2cd0e7e49a04fc693612eea4309aa89767250fea85200432bd9ccb0a6321ffa286773b297e7600d7e2b2e1145f21be698ccfa0a9366d51700d1053d966717f322931654c6cf2c534c3c34c34b35e7b7ad8c7c8ee00534179978960233a49543f8e7c8de15bf53289da6d839d4dcd3120174fa3f2f5a2c445976ddd53ca9d8497b32eb6af091bd096d0bcb639bd8ed3ba27ef88782299ee2940ce0c07c621f6dd3df08f5560d1d384c9958b086eba8b8507aa3218fce243be20bf66813584102f966205a0e3fd851f517b80a3bd8444b2daa265c77b4b3b3c4ae30f7e216f508037f9ef525a24c682b36459bf58fd7b7a35e0435417c6050f63ccb4c3c64631e7acba65d595c89c9c01a17218b5ca72dee20f05b25e6a2b2ae792c1e6dd91cf57ad5c27655311fe9753fb3ec69d0f23ee25eaa4d795c80b3697d5da27dd25eaffe5792fe0674239778d14455eb483c2adaa7fda143a86a6556f264a32f7e478bcc57a540097f2a6790d33335ccf6bf9cc5ec6a09a83747ae2d961b49884f70841799eeee456e5d5d2a27a775cf679c4fddf8a5af6ad1c89f14a0c6528a53d3ecc991033b637ce58cefac5822cf519a081b9bd656ba057d13d918574a9445195168d750763b3efc902678fbaa4b9de9ca515ff1d3acf374fc328f306777d3ab03cff4cb75867328a237612156bf82ce1228ce6d6d8b58dd2d106e3f0423113c20d85fbf4a626c98cac1dfbed639d9325944ab6566f1862b00fb087b8aa68bf1fc7b17efea052379eb9e72449a6ad221120339544bd00d090dcbfc9739f1476da6d96df1e2ba8bf4f24c83aef7bd1873cf4abc48966a1d2287a135925a6f62f824b0a9d32ab0edc7c507ef2d578935362314ddcc78130f835900ffb0e1c4d39e788a9e77bccf12dcbced72d53da25de13411fcab01543b81dea623e33f1a47d8fd412f33df4912a0559de8cdd51535b90d71676f76f0983eee8cc1115f4426951757b99c277a0bf8bff8cf12fc50f214b1e2a2d1d53d71dd827bfe6d9716921ce813959fc40f0e5a3e599cc1c318aaa4c910a2fee6c5b130e28ba8f5afad1ae9a492d93597b16988dac0e92233d9882335261cd7f9ce6685fe5a61f23a294edf3b6bef43f0a9595b05cedacab598a5c97cf0b618c5e29ec36d6b8a0073d7f2d818e6c4a1855bcf8ea6f683fa9b40ea2b53ff9b39ff2bb24fd6cf8e85a128e9e779acf3ff5c390c0f35331f648785c780fd0ce081f8508c38545f33128bae0775c5f6b4a2e551869ee2deec2dc6ecf2501415350e332b0a58b6ad0457b5bee58b216613b43a9d940bf065b73c58882e0960805c42a7a665a37475f4eeb0ffc2f9931fcaa860cbe304cc3e4b86b3af95c0c0b4682f452dd0571d55286087c5c957aa5e43d86e1eb27a93cd3de0fefbcb6f7a9a6a03e75b53bf825bf0c6f6b72928dc921cc9a96f2cd10ee83c3aa64a12e752c4bf14499fd4cc2e537701001b5e3313d6f3392d77ea32988e3cc6dbd83a60c1c6a8e663336723cbff8dfb53b3abe68f1bcf63c283bdc2d71bf3819188c0979eb74f495e5770b5b37528b90878b458b392e59d4fe11a2a8de6d03b336807ccb700646f6dc7e128f61bf97ee0558d2f1e87ff9824fc746caf0a1f1e3c7be126df3bf694258ecd6afa0c506377709a2586304aa2d522cfe02f5acce89b216315b28a550784474d16c47b891007e04bd48273d2f10c86a77a9460de7f30462d396a78e4ac8b6217a83968f7551565ea9812f193f0cd7eb32517cb5903787eed402ed543173eee13bb33f12a835e3550642c708f4eff8c200a78a331c77d884f71b76c7b6ecfe165df5eb898d98611bdecfacb251d94a08a0c0bda6d3ef7800e1d99e32792a194b26ce5d4ae4720da85e97a47221762a9d054234bed3e00123fd0125b4887af15386b155cb3aded5dc3ee232ec7901c0b719df272f8b9f4f017a177205575d4e31b236e00d560f4b3cf7b53c23a8ee37ed52a998889cc06fedd857953ce787655ee5077ccc79f273dd78857725a86a678239fb0992a33560ea5c42c8ad995e72f02516206a17d92df56578fde06487f1279749551d6f8b929375e407a7e126c077a64c7783b1350fccf91a86911ca3007eb157475696478b7ffe9f0de5cb80d5e2018eb5c012528f1df84305339cfd28fea6eeca765463f21b74aa56755809de343a84199dec4a97900d8ea173fd5c6222f30a5d844733ffbdd80a402528762886c20498c8f5b6851495542a4439e1dc54bddb64b3f6e2efd0dc795c53fb428a2a902929b0c2762e772a9c903006f30f554e2ed850e677d349d7239699a325ee410c86f63530ec2dfe70c867c4bb0dbdbb413415b25638cddbf72e8898066748d88d3e37aacc8353566dc66517bd2b30beeb74d189a6a0df5f8397bbec3a344dc041b9c4774d90f23677dbb261116d65e7759bf7690c37466a724a0181d1cd8a78073933f81b759917b98a4ec973cd5817a659296999bd04e5f094e151e454aa8bb9816be0780bde04e910b73a57aa44e7c481700d62593eb0ce84c0aa224f5baf0f0b35d26fc4aedfeb4e76715d44a1ae702ca431fc8b20660a87b99cc44076279eb7f20d7033c48735c17f5b1a9e4cf1df87258a0e1f8201e95505f932d443a7cd23fc1a44771e7efb115cfb3ff3cbf5b3b5cca6b9d44f96c9a9c8175aefc9c0509d25c0b80071722a8ec88bae06f71565c49d4a97cda2868154cd539b6e5f8be440cbe4e09e4f1fe5aacb17c3928599a702958060555cfe109d692f1d8dea4abe6cbfe3433723d4bd0276318049e46e504dffe986e63626df63183986237cdd107251af6c659e29d00a006a03d0d7946c29eb635218a68d42ac25a0ba6f00b47952fccb6ba6704b3cb7757e336031e27b16f3b404847b51ca91e186381ec1cb31fa4f5ad3e23da28933284f75816170ae01e1124d1a470e96cb7b87841201b082af4c17f1f87423712cc49d4816868a43f750fde287ff2da53f12eb3f4bc5f2797c5230bb621adf2dcec7fe0c4dd3f1984a375a4382d93f852b9d48ce0c48be8593aa46453cb065b846bac9e73edd2f6e18766f42af8062d1a6db10fed1250802ed5cf1657f8af8bbc3d2c2b92cd7493380e6c12c131af724d5008545c59c8327801df96f39e99a3826756094b8dda161c9dc9971db2abb7067628abbede0448de1c5b99444e6080b6ecc171df5f645072e6f27675cc8201acb1b0d6dcad607a0de3a2c83e47cd5416aaa7cf91f9c49caef3ad26bf1c5c53bd140251de6de23f4ac07f2c0b36030c0f99133d23348eb821eb1d3f9a0e7faaae681e2bebe6a68d7cbcb944e5a4efba4d28cc0540c5516019d4aa31ea0c51c91b578d905dd347b52543e0567d9f78525419047534ff88882ded49b4779e5a8ac3b5b21c5d3bf32121b731473370c17453b62a6b1c12abc0de2e15034d90f0b65c7d62bdf557af053b23eb4b2694faf91ad4667561c2c4d8944bcb5dff2f736270ade1c7577cce88e7722577216ac1f5601db82bf6aff6997111b05bb284988c96b567c8a745fd3c3f1ec253e8bdcddaf109acd561bbd6c7e822f11794ca0bbee70597a306a4482ba11be32ef533499eb4f7cf903f4e0a546e9776acf2fe73a53846ad12db767afdbefcad4c1e4ef9e492668e215472b633332dee1ac49173e69d5010d7204ba32277519c71921ec6302f8bb849d38e262bfc26384246294d39974a1e79605d489e55bc661652c629ca4b2acf620b40a1803401028887ad326a7871ef85a7ccee955b3a5f898074c351df2f7e1e5cffc3d5336dcc21985b329790f8f43c0557545f270fc3f51b1a31ce881dd301e355d08d53cca163562a8af672f84a58c011db2779f1d8f11fc69498695e07740e715adfe540f71a46e3a7b41d6eec5c441dfb532ec1510dfdd947ece2b77ca60577ef8d6c278c2b07c599318b928c09420f180e64cb3f0b29a2372fc8fe2a8ec12647be02ed595d7e0e8848d33aa871bdccc52114a2fdedca88c051706a44de129f1f90a75aab4b23b185e149b4e6c9c14c6158f51c8d76a574e066a9618768ed4e0161e77ca23b25d885f34dcdde210a22d1c95eb813eddcbaf5bcc5e2000753e8bb0ff91ed2d2ec53f859ebc28da1cd1ac4628ab9243b5182c9dcc62e88740de4b631e8380ffb3be4fe23fbd6f43507022f77247eed9e72f1d04a41de257d7a204e1de19cc00e7fdb2f1d44ee0e88fb2cf1bcb49543e278f80c6970d0e5ff9bb44b1a02fba6f704b2112781a225525f9d1ca60e5d7ebef654df9d7eb040a4628546d791379228d5ea3ee49270d164e355a856d079616614d6f6a668169e043f53aa64f6fe7c4c605ee6dfcabb8001743232360d4727895c118c3fabde6d9d492ac2331542f7d705c614d32a9b5a7da8e7e6fe66ec40431e7d04699e372a46e0ed2efd33cd6a1b55161139c71abdf6fa99a47983e274a33762c353d4ac2ef006cd3223ca2b9ad4bc7a8759d54412184155e5dc27df0285913d6e2b76e7cfb042410b0d008c11a2dfbfc98006733a0f7ae8c66063e956bb25765c89f925eb7d41e5d46e80cda32d54b203ef3eb88c67abe78fdde88f9cf7bc50ae1e1bbbadeffb6eb9450a8eeb8cd290e8d74ca8c32d995afa60f7d5cbc718f3b1f865311a920397eee27274b844a553b6fd778b93df4b4be06e899f38b49fadd6b61db43dc29756f0d67884891319853a9745431cc91d106e5cee53392f6f92a2b636378e71f07985bb0cb7cb48d4877d212625a22a75d7e35e5035f4aa43d5c2ec921502764fe99349719fccbd1ecd980af650af47c85a14f4311d29049b67c55c3445121a7f26c9fb3379c2fe91dd075b03bc4a89255714e13f00dd7271b0e757db15aebc9303dd8c76173e67e6dcc216c73fc3a2d8b83f41d7156f6a4e9ad56d029bbe9e4d76bb5e177c90740eafa587b32c185b1ad78f6b6953b5c29c3356c1989db4d7dd12b6f48b464fd6ca437fb57918919c938da6a520584bfe564125acb4c372c64a213e0e560ea7566a05598fbc9f99e89e06af1445f6863430d3682ed9e2c55aec90d91be5205368cccc8f01773dd5ba674ed951633f58aabcb58c3014edd2d4456144886f43a634b38305fc4b7daf1fc8c87626e20ada5b071a66486734163181ec52be689066f896ca1ca08e26c7d6fcd05efcf6c245cc15ebe78a7b6663e3c46e37cbe75b433fdacc0c88fddaf054e7f4ded01753dbba2cc18eb8d36dba8e70073e99535cd9de8d93adc3344c1b3ab4c74f858d7e31ff1dd99de7f5b800db12cac9f90985df34ff2b7fab4cf27dd07acd215406cf00659751fbc625f975f3b2939c5f7d23fbe0dd7cec2d0f8ac7bdffb24228a0994cc777fea44fe7ea374543d739459e6fb41adb54e258e99c9fe1be47d42813ce71be8fd7e3b5bde7aab2362573316d1def370173ff5682f490ad932e9672f2c1757bd221f46765c52a6961e5b0ca764d53aa95f29d473da8a7908c9f6610889a166876ba6df92e1dabacd019a22faf9bf0c7aec5fb4fa7a9a4df4a82dfbaffd5cf1b55ffaac9e9c18903cec41b1f373c48d6e867d8d67dac5b61ec17d0c93b56c74ba89c422f04ec5dc37789d6fea3decd048ceb3d48141e28ce2506e783f6e71126c0ac8865324339f6fa96b62f6cd769cd8c94b054349f32cf6976e60adbc7b3c25b6586cf8ac8ae60eecdd7198f47415f4d3aa32b801d7dfbb3c8e0765764997524153e45add781aeafb90b536c1e96b35c44d2686b2242cc61b3f3b9eb2aeaed45d4101e3d4de301834103d3e12a8944c92a8699b46c528420d93d22a219f15f3895984f31b5a1bc2edf58aea98ce9d2e6522870fcd8dfbbb4beba018db823ac05fd2cb0c300d89d5cd72445cb35bb556ad4d772e313e0bbd19969c0f542945b4564dd744a4304d3eb7c9c116dc5d41f471fc7aa2d5d3e3e70f7eb9b2d3efbe4d505b33f5b9c57fb238923050ec8f9921bd2017ff48a824041c4b245c9658300d39c699b140aa0fa5dbdaa5d619b74aceb892353e689623f85a22db01cf1348caa592c9758871740ecf930334661712c49304f5f5272016854503d8c0e665a29a77ce1eee8b7ae80a70e6fee21bd721400d688bfe0a903cd6da080d3d002c158b7e6cc83f987cbb0c4f9994dfb4399d77daf0d583b9c88550eb30855e1ebbeff8f00cb46722330bd1485b6cbc9a7867e6f341dc9f2454e9cabe297a6a53c4d7b7fb2c240b62bbf39435727ede962c7e998c942b54fae7f531ab89e5b020c1931438cb6b41af81b0d6d6b35f1ba1284b287ecb7ad6a77901324403ce21214704eaba91558c2ab0498a54b2760272d7769a1611e12145a18b79e8a0e0be5f30f976a445c3aa4b0682b0b30cefc7eaea2bfc2b1b01fb4af17e1a0948f9ddea50723af9d680d29af4f7b2e39eb0f84032587d662642fb20b89df1f201bf129e7fe41e0ac2c46afb7a02174754d9cc92a832820fbbcdbe37a9b9283f40a179cb76aae8f65309cf701edf1865fe1cdf1b02bdc22a2e00e9d3592251c7f8902e7656a67e71083c6652c6886ffde9f42fcd2cd957058e28eebbd103ad80a33f328ab9f9652c558b9aebdca1c5b39012e5ec976a8da02e215390edb2397ac67942fa6e26a48bc60571775a4affc9c6ed20dcc38428705b2fd39c12413eeb94fd8c28b44890047bc160a4ce9d6c6f5f636a4b1b82e98e2682cfe1cecf3dc2719fea66816a50bb0d0cb94584d90d1ee0254b4ce733f9b7d2db9ddc3573d9475592e9592b1323a0ce3f418ba82fc70d578a402125cbec146f25f74feee70917ea8952edb1a81951873f50a90e27a01686d4b1a0e25b31ad29a64e1afc0646e1cf17f5f84798215203e01c5bd4dad1f111a802a6bdb47a7e937c13cf06ba0122076af97a97af4c371c84744cd91a6a59886fa5990c6c3c4a18d8f875bf35e045b776434fb13fe8c60028ecaf986ce0cbeda17036653a75118fc241fc5c47520d9194b96fd1f427ef273243ddaed89e98b244731855f4193c0ccf5a56bf501b55fe4cbf31160be9c46ff701ae13d33469cd5f0beacb18fe5cc052ffc4c1aeb7e7f2f955818d3bbff70d27ceeeb522a9e05dae288805b64c8f63a61e930077f502ed0d6c6bab3a8ffccb22408cdba6678d66050b533e6a21ca4980c379ee85aa2cbed595ded5ca60b35716351ff6efa5c22d653e0576967affeb7a9f5f63eb253adbc39772b251a891f3f9fb84036ae98b45656b437a49ed1fa9a4ea3757230a9b57191fae54215cbf2b2f67c8585dace43e3b123142cf21deed3ee12831edd4240529b2ea421dfd15a5eec211af13289f94fff5458db0c73add81134920947cff8a61f47d8e24bf94d8365beb2b7faee3f8828fdacb22e028c7353b03c2fa2d3491729add6c93fdc998f45a791a4c29d57761206fa6e1c94ccb03504546b6565200f8088a2c6c7c4516223c2012a60f9def68ae3ebd2fd11d3871e87d9088e84fa5d10f77a0104a1dfec5536e3f07bacf61daf36dc634e8c23f8e1fa34b8be30ab91c18068182e48ae5f0605b96e37c67f10b8d634d4630f4202c22af552f0777ef32f99dbd22f6079d80d5d885a2f70bc9e144536ba10f1b64525c7289c53e9cf7be60ae43b68817becb868b3a671f0c3b1d91494f69ec7a261170dbeb0efc912d2ec34f1d54f791469de27fe60dcfe033e6dec25290e200d6ed92beb40fac4111f8afb691c9fdc3afe20dba7777da1b201b39e53da89790944e9178ad2b79f545433b7e0a5bca239000d9bfd192d6517848132e93959cb26fa0b25cac66385a058cba1106b34be84968d63a9d595b0b2fc9b43d024ed57c9b35f7dd331481640d645fb6c238d4d735f3ebfbec51fa6a69b4066a5171dcccc018301164b9ec36be71181a7a7435cf413cd3368d8a4912352cbd0289827036f5f4dbddf6b1cd55182ef8bcdfed65ce1d1034c33f35586368463411ec299d688a72f4ca980de96a8eb81baec0d5d9ecd2edb5a1d86afeee02fc89973cacade6980bae0632ff119c01fe758d7a744453a1afee05404a1b1c929216ff34f77d46abf586379375fc8fd1cfbfad6083bcea855a3f0def452b46bfc4b3b1dedcb6fd49aeea4e013b21cb8f62c501d4464764f4e19203aa15abbb255a859bd0845d43549b81a8f4f9f126c03d52f94a8725360c5640b646e5d35bb2b7d0618d6dc22e11305da3cc0607758a0cac3955e7e968d5dbc6e7237cff0901bb4871e20dacda3fad84e19b6465c4fde9b8d6ec86261663d07818dd156710a03b49b3259492b7f1bbeb386995feed7c7d4db0f82eb4506cdb29b90da66d1dcf257307eff9438c322b392b5d3050f60b6053e5860ef92849aa2202000a5777587a8d76a172306af3e9b5409b9eac6fceeb71e0818cc31c99219cd79964414535f0b67468eb44cde76f5863c7142eb176d33c7b437ce3b32ae1c7372572e68d7356d8233dd9f0c7c966a7c84e1929c59144292404896b1780544de386a303709af3468a847d69f9ba4634e89ca66b72fef9598c4dbe49c2ba8a29da47ce81eb533b6d8f5af695ec7f4b9cb520a5d582bdce175a9ee9dfb7cff7af4ec2bc549b25ada260e4c9cae94c51aab77ffc65531ae36ad1f8d7a8007cde4a85854e7cc8b22fbfd0754c74af35dd02e9253ef0396241aad9a23964ec636e8913bec89678ced6023b0df650a7e1013a05bf71de21b20f20884b9fb39d033dc267a7d987754af646b77ed3d082bd3801038d0734aad698fd532a1347ab56e317add4ff25bb1783a925e172eec4e7cb5233e66c52f60b7433e1ec9db126e17cfaa7a80ea6db5f42823f040391e3388b1d30f820c54d0ec609c1f59e3189e07db94613df40e42b5735d22f179eef356731f63d7b8c64cfb0680a38f9cc49dc7284ec7713a0f416b2957e2ad2292190855363f18bac8d2adf9afdcd97ca25c7549dda5ae7bbb83d5a74bdce3a78041ad0764187a6bc9c29afe9d6c856145dd0130130fbe298795f273bec1eeb1eba58d8d7733875e80be3980ceae8b0fcc270dd622983d4a4eebe3aa0288883c27053ca27a4b65832b5b5eac27895b27e87d31ce21634473b37ffb61ae34def3a5e717e49b805627c8a8e9c157fd83e382f655844c3bf8c69f72ff808a3f3bc7dc726c45dc9d0cc65ab60ffb9d2bbffe98778742e8f4286adef7e5e2e7a9217e19c04ad30db211508f8b61d64e5cb189f773731f4f15387731d8c690a3a8fc6df6fa356899b140a7d94954e7b49e5c27a0d45d53e6c204719c849774e6817050cb669916d4ce22b82804de015266237bbd65635193d0f6adece30d3b543f4b2f7efcd9b988c3af851f2242db6bbdfc2d89203c5dbfb64f98e1bd3d91c7b90cad292a1dad1462fcd6a0e2ea5dc2a92e30d25838d5f045cfcd0e081a1d7b73a5ee8021c5a4c3226de9fec718bf30b0aea8c6259206ee7c333a57e4ad9be03babd8c3a4d0cb40bcfb249c4ccaf81d25a3147ded721313f77d7b1c38c1f30b3c992a81002e2a1978e8b4ed3000e11ae01aaa70ef8fe90fed3956aff05fbe848efe1ad78a094ca1f85b960d0d3a852b77942af008cebf19a5962130e408a2435cf7384ed73b047e252ae7824e3624b30fc0909f76259486b51d0c18e5893715a14dc4ab7091f7e5c53203e6e5ed933840857cb3d70d77bab94297c2d64c27d6c80f0240b12bd3dd41596a1573ecd7b94a984824a02c7d594ac0a6b7b917665174faf44366ea090e173a45fa52738e1a15abda4a870a89128da8920cea83b42960bfebc23f516a44e34bb6910de9ad7979c3da8ac55654982bd70d506ee4ba3be6ac570e5edb4011d99dd54245dfbd39dfa5ba84e932ba165fdfd088e9ce43f7424f1945ea96cda0aedfe927066380f94c2b4df3ede2d217b66b7345cabfcfcf071f5ae7394f2a8b305cc2605ebba001b47aba76ce2f4cde59490d5cfdec260c0012575608987aed81f6b368fe0b381898b2967568d4729947ee815b12257b703d9f2478fe292c71e3b86548248a702ce846661fb5cab2ce7c72c36261a3bbc9653336f461a8c4257553f48ffe667d96e4f2ddd4e29980d76d79eb805eda29923500bc7c57bbe7b14e6455c45622c5589acfc77109e119db40c63c8a0ef1be12029e21e9d4fe7d6e11b694f5e28a5443a2a6c4b728a17b83318d33e6ba4cab42d19139488e608f03e9b10b654c644346c9baab3da02a68e77a6d32dd62386294a85bdba28fe00a2f4dac29c98aae354f20836bf699aeeda05ea13ab93266b56037d0ea3738ef9f5f308002e6449114925d81b819d81d25df81f83c2629ee3ace3e41858f2c88ef586fb2765b2b230d9756912a5f19b512001cb4a43345456a20f9321e622f06d0e6925400a1012a8df4242661ad2053814f20f24a722ccfc0d5f74ab7e53fac2262a0bb3c1c4a7baff64f8613952c9dd09539e6df97bdd45ad8fe5531f2dc4feba13765fff478b9fc33381563a5a3dfc35d7350ae1cb18ab2c9b95346e67603b767d6e0a322ec1ea3e54ada08e5be87d352fdc5b4d989ac843d377a779bfc0973e014e766ece5c1e36720624d103858d306df91e8a67a0f6d23da41d8b123c4e4fe52aaa2dfb4ab222564150f673ef71f18d43cc306c74874b155585e3c8d729a897e4043568a4a7f8a6a50e2395beb76a6b33f94fb93257e9bd0bdc976551b3275a1ae2a34be9c5627164dcb7a8dc48da318b67297e651beb0dc1a52306db3f973884b728fa10c8de2be140a8c67e8b0af7f75d44b4d4c04ba85ef045ed65cd446af5ab6744089a180664a7c5c1d8a91472f5f7b3ca0bdd12f9645a426ba83fbc4e7522800e61cfea341f9be4b3b8f7b695e3ba54bcbf71b090cb1918462c2642e33076b2e92aedb2baa907454fc7a99b364acfa797846062a00ed882f2d37003c7573994d4a6d1ff55c3c046ae18fab819714a09379a07914b2a372036056f72c05f5fc8971c837e61e065bcff74a4f047c1554767c556e9216fdd31b1664f99c2828b06dd681df298286cbafbc7b5b64e516358e83d930c6dfea08d1f1fa7bbb0e4461540c76c6a05560f614ce207e3df4cf5f684e5d7aeebafbeab43698eb91b68acc64eca2ccde0d56f76011e9ffd658db913101e9f3fa1b93a148dbfa85803b2764529b41d78550f3ccff9a3cb4758a63c1816cd6665d488d95a1fdf364f8632e3975a39470209329bad36b3de408a8ba02dedfee252e6f6654b20af382ed4517c751d5e76fc33e3d38b000a881a73555f6b311f06a3ac75976fef080ddb522b7922dee494d80fecc03b7a513389ef5e343b838c07eee51d8941e5cb7a1ff1d7894c75a5ddd524a8988618cf05896c31f3690fefaf4c66a8163690e9327c94b7f86d263630bf41158c2e97b3a49e9dbee4e050d343ef623dda0023332975a512a2571a37b64431e68990c5dc65050fe515f17322e8530d27f698f2060d119a76afb7228ed72220e644b9a4562bace37439f8b1da7b82a95506ff262171064078cb6e1e8b03c4563032b88a949af5c51bb6155931263850c076bac4e715789b9885e6ea93a6eac9c3e83d63912405a4c256e56b421818285050fcc29a29205f7251acd340c10822f5c4b2c458f9c0fca4d8aa0fef1afa454582dcbbf1d8de62971abee3e48618a7a8f55e6e8ff62decc0b5eb0dfc3a42f96159e5a36718c64e66aaeb30fcfd3b853586fdb1ecb39abddc8bc58ac416d49fa140e4c82d061900da3b9cb0b13f8f3e25ffe65737f2dd3b518b8a54867c2e40f6d6358adc436d5fe182add5dbde737622e272750ac634504a026616c349a5ab73e34e06896c62292aeef71b0295b304c1100c420172125b3c83143d458a75bbde8d90c6b50d4c7c845597e791294aef1998a39cd5d0daf1f6378b7f665217a90bcf91ddbd5cbe1f6b93967129f47098daa772499fe36c99aad25246f4d63c42d40a3ade7c92ff6bc22aa10a2272984df52b7832af10827717ab3140c178bf98b85a42f511c590ed62ec76c5291acd16ec289c4c27d38cacc3da602fec1ac2e9b1a598487d723a94c08a696ec760685183011e912f0885f60a0c39d19cf1ed68b92c129b5a80a69c1b0cc0ebcfdcae0e3bb7fc8b8e08fc1877d2a4e82e17f3cca5df865c96e41e86ec65c09fff42ec3c362cd352e5501e41d6ede9791e3e80d899a84fa2b5f7df90e23a5a9d75c263c2a6e71d568b31f60e6504034d22800214aa2ba73ebe981176890a7290fb0384e20665fefb71ffe896aec952694f519a09c12a4e0603b4cdaef8c7eebdbcc62e6a577aebc0bcb90974098a01852e27b7a7d782a5c9e910255d5b946b12e426d85de9ba9fb000fc0183178d5d892baf5030b0ed8c002912cfeb604cf409941991dbcf00b6234b713bbd549568c15984455268c02cc923fe05280b82f52db2af1c9af803245ef1caa6913d561a6bba3e72068f656575aa16850261b4dcb6432e93a54035ad29187bbf20fa060cb6bb3bae883ea1cac84196e6c37cbb9e071a28a12c0e0dd46f3e23f890919fcdda3363b5a8f86f227f4db086c6738f28a72f54a9418e4e5840abc84d9a2282c2dc1120626ad639d43b0b83d19a70114c1f4daf2cccb160375ce96b49b3dc2248a9374584049b9fbf48314483ec45a331d7014b456341a09dcc75c7adafd6198c343ce7f75dfa254f22a47292baa5ca2e6454c7fef04c17c4b8c11642bb75a144a2fbcc1d2eb7f044f855f1ea166af0be339714cad5d19646a54bbf5a9243b8664f20b4906c3402ec14654afedbf11a87aaef7ca6e9540c57409e05c09bd20699518e33e5d484f3d5c5d7b8d1948ef3b1e4a112cd4127e3a21b03980eec63630d3f38eb4ee01f410aed8a98d4afdd6e763797f438b930fd6eafc76337b322f8649346cfef50a589d6b25968d4dadba6d9f061e70dd1e199237f190b50d7a93847c2ddda88664a4dd75f48b0f7a8c4ca0575cfb1a08f5c79a3918d0bd694ffe0751046db0642d34adc301753dc363e7aa6ed8270c06dacf60901831f4625502013e3c1161d791f52c81a037a9984f0e120231a3b501f2ca4b54c28e35bc0c88c4e71b4ce9abbe1c0c0354483c7ffc013326a27e7cdf21ed46a2804bdb4e35886b33c18eb12bbde55982e6b19e48f4db0421b0bec0836e038777331ffcaea6748b582c3944e48bcfa97e68e655b6be06d31ae8cfd1f81ed79449f686a1879083793e39adc4e6cbdc9ee08e6bb8afe8ea7bcee8a8d8c2f3ad9722fc1c5e0534fe1dd47253e4f47cdf34e1682d92851763521aa4c6d8a27f05a5752b4fd828add6d130b8980604faef10946ef2be7e3effd2c9ac5c18c76cc812a2826c97e0fb05074da39c3c9561dc8c86facf1ed91d8595b409bcbc3c96b941f3899f7e59848666458cb77f9a70b489adf6f25debba4d5ec3443905b991083443f0ee9f39a956fd663dc2da229e4b111b153f9e50d42c6883f37f17e64111daa78593009382285c0d5f41c81f1ca5b57b3f3f82dbb57723aa252a06c6167129b507b50e4f1b7a56b9a3e1bc81fd32ab8517ee744a1cb2b1c0099b6748c48e3a6c1046864b527fa3c979f47353b412e6060be6290904fe8d30980387f24660be972276883a6a648ad82ab97ade6f40b2f06ab0d1f16fd326045b3479c0912c336b0b70a74f6b286c078525b4eaa02d660dc53fe8caa77270a91bb02f2055e3d6a27ed9fcbea8c9709bb216d070698e425d19e4a1e88e61a80b01636d438b81c041d2dc81818ba15c4ea6c913eabe5e73545133927de078319e877c6b3b0addc780bc29a623d26706fa280230485309944e44a18d84c89515426d4253836a2f5b023dd5d8b5265991dbc97adb91ae0ab7f83f569366feee31c428ce36cb9c494974d16624bf5fef014a81cb9fa25eaa4d2736cf1ebf0bdf837c54b220cf7b1a29bc1e700c6577c4ac2cc2520d71a053dfc2c61f618d2d15586d251589948bf2bbcd23da52822ee33ed56b6803a51104ea1b16ef0d28a9165f2827d706b7f2f81c77da3f3245de854e1a08d6b64360db72dc4073d16e63aeaf68575d89c6bba9adf2cf8b68f2eae30be63f0f2b4176cd968e5139c571a6bf1877c7c70caa5241a2e489d297baace4d456434fc2b2cd35ad417450e0e47f9ecedc5cc3e0b30ba2fde30e1aed467011e3d59dc217f3d446e73a08cf574641a3b8ab968fb2290a6d0ce44ef934db281125500457be63d2e01b0bd991d4f30cac0d2ef6137495073452a30a2f8642cbbbbf1e16fb552efaabc5182c65b828ccc0d3bff828b67152f26d2fa1cd8c36c0f20cce4e8147cd601d7666ad0c3bfef2a8fec0158b9e976eb3a31ef558c5e8dbaffd31885bbdfff3e9a2850d94054d43962258c48886882fc08f5a21f372010a96e907d7c6ac82e0b8cf2f8942f4c66210d20b6c089858247fcaa0a14fc47165bec7ea730b44057cd0aa039e2c2f19279805a87cb4786fcbe6ff1e1b44c0ff3ecf31ef776f66c825332e656a46d54aec52634c46fdac9b8c95bfb276754d02e0650e721507f15872f77a0b5439e7d1bab83d6f4ac18d78f7dd3954354ddd89247e1fcef289920216beafa12d889ae1048a134a1ccd9b0de7e6419bb442adfc21a6af71db8db9036b2a1bdc168138b5085c612085cd2130b803c75633d036929c2806a252fccf304bc2b311b82d7392875ebb601284e46b7ff49a821c5ee084cc3e286701d703c659ff0399a54cb1f8e23026191e86531248356254d716e2df02e00da0dc1f3a614869508c871225ef1e64b5986a5f319a8df2cbf4ab6a66075218b9cf3e3bb4b247900f832995c865c0caed968e009fad2ce56fe462ef42e032e2915ad75c3a63a8953ec99052d0e0267e593ce749445951c87316f697c1af1a96a286a5ba144948b9353096b6cdd827d92105a872795d82ff88e548b3af69dbbd6b7b52ad54e931659e6897eb91679a8844e01d5aea529b48519a6ddcef2c5b8c19422722cfeaf8351d7b5d28b9d30206321705b2eedd36f575749fe3fe575ff93424811ed3f4ff26aa91b6b10d048c51a7a327bc5c759e63306c3ab616cf0ac3e87737c88df3fd49aa41f5709f33cdd1b36ef1623efb4c97e156c282d58dee9a065bff6411cd89d242a0872f325f83dc8504c95e553abe3094378fa899b35458ed59c890d28945111072b68a37d6e0b2444490043ac1a5ddcced54fb7623d897579db74d4b87cc42ffb044b50c4e97801795c4f8f58040026bce147843de8b5e347bcfc33ba0997870181dc4417b2caeff31ecb9ebc3b25ae488b740fd167ca2d31e89547bafb015671f56e085541d8e2f856c805695e66b624108618c0387e1ac972ec685872b0ea6c256bc875a4dd9dbf89bd9c2f00d1209893c9b9318e3f34faa3a60f72db33122759afe98dc0af9959dade5ffd8a8563806d22393800084e7841ce90690608266d7905f4bd30931c0e61e70bfd2c088cffeabb49d88d4d77062bdfcd9811a4933e928fe742b0cdf77167191a882c484f19cbaba45092827cf538f4634cc41e3ed3f28a8f76974e49f9a028bb899c0024fd573e6de2a9508ce93c5f1bac1d1a9235aad2e6cee53d1f638fd13790da925a27c1b7c032195be7a8086df16782ff6c6d029e2573b44e92e5a47ef71ae32409712dc1778be80a8b44da15ebab126f291985773aa89f870472339570e554f5921a04b127f19438b0e8fa25c94c5904c3c8131e3ea8129e8eb6a4596839362eeae5e2be560a68a712079153375902c1c121aab0d7dc3d354b127ee7cc30195ed93ec49735f3660c2c6328c5d34e895896cd368e3f31fe37140d9099a788ea6f9ef83d4f38a506e2cfc20172499f1caf0b57b4c2a3373d91fb3292c07945f441a2f76daa0bc471c3b273a81c07e82dac8db19eceeecb7688ba5dd4e593ef88c4cc99252e821d74fd7df408be0f286e1fddbb87dc4c2514ad87574d163ff35ebec6390e33828ec578d57120c18169cf55b7b6ef93363f11ade2741d831d5eaa9997a74d6f4da7d3eb63765c84b63f2c707b676cf26bc882dd8bece7fd5f8672ca5fc07ab2071056c5dfa34cf2d7467c600464f5b7104b435e9dbfe41607189c056c3f093cdbd06a5201d4c1ceab3e289faab989478a7ee4c29ac2b26523155805eef5695b892de191e21fe96a342404d9c4246a559d93f70609ca8044d551f4f781a586993136d73362eb05c69df13dfe0aca3d5326ff67fd542f80ccfaf0a63edc56a258c71a24ee4e0e34cd197849fe56673e1c203f403b2fa34adaee8e668a5138ab324db8e8fa64ce31a2d7912e96755840c90b058d994b3bb530758fa987e0ddc774eeca427bb6d814ac5eb6ba19dd0dd7766399d0244837d2354277aff17a36fc606f30fc3a7dab4e44eb9c20a4e3b336777188e3bae9134360d752e49d2538f022ae648c337c26671bb2e3391a42ebaca9f179afb0e2f4598dee89f5be888e173424d3bc822971103c4daf20eba66a0aa0e4b2ce363464f4696b17dfd48eb61f5c8384f1d67e7627597b22120dbcefb91fc46db4944639aaf71ed61eb808b37a372e1d63a4726307122c4c7e0d2a11887927dee085b68b9b174a2b1df26135116a9e9a001d13f12a46c3e48b187baea8aea34bfe94672eb7ef6b0a2393ea454a7fb914f0786f9c870962412805a44fb654c1a1c195c87f9899dc8d0eabfbe97e154811e822240575f1e53ebc9bfd5b3da592463ff050512bf3fffafa8530a196a6c98d957da1d1ff5d286860d21b483736639e7b67d90d8af85d0b7570bbf2cbb0081ed8f3402ca63f845ac1cb6bd3b19a94c367e798e4a4cd1b5414438264b922a9789197cf261b979428606abe25538cf7f905add61802fd12e3e01ba24236899c7f2684fc4dc7501d3f7f1c3253a04da8b40d784f112ca8c1df3c3d312abe7562af502b4e2975320da92634c5e19f723ef8a902c869bde93eae0fd39630d965d50a2e24b208d08533616588d1cc7c938f96e15057781142dbb4ed7bb9b934374a46967315f8929706d0d2a625cdd4d70b589512949fbb7f74d1293e950b4b37e68ac84004e9be200e508cb1ce60baabed074001d816c6e464de57b3669f191fc57903c44f9d3b7d8814202538439d324db5b9270d1102baf9dae41385cbe36a5988718fc9c41691e3c5ba0d454a6fd2644605362dff3dd9fad58e5591c97d7401b4baec510b721ebd2a39101bcfff5c3fa22c8ee208c484f0f9b6b314ec074685bef8ab490f8e2f0719d5848623e2b21433acfc9a449773ff6b38e8af4157a0f29fc6eec36deccf82280da115f10860ee2fa5b690c01487f78c46bd48869f9089060524e525ec3b65e074c2bbce97f8c1cdafc5fea651921a1cca843f573941ba874bb29ffce55b45e15603299b608b7fa1972f8d0ff649e0c1ac4bee0a7ca8f56fd0ee0dbb5b5bdc6cedb51035822a0e13ef54ac3d9a55793912e44b5a341bbc64b201f4f754fde520779c01d78728fbf383c35b5c392677600f45b323e1846e00cb362aa1dcd708dab834d15663898254ed9eee38972f6c8476013e19ad498db89e512bbf50c2f903a7633cf186b53d0211144c1ac9050c78cb3b509fef9f3428b916c48857c7e5d8948110fc058cc596ba3034ac847b6b13207d4828355e7485d6daf67788aecc6f0f7b6f556ed4794d0907cc6f7a8e0e9f1c30449096d100fc4b4d10b937222a9b4cf8293bc3935551de0a318055ffef9484e0171cef58a05e334efbbc7d5c906d56cfcc5b0d9721aef626e193d8aee44550210f20474fc28db40d8a583205f6fdb28b854e99b6c551957232a8ea12f98e21eabe528ce07cd45d4fad2f1e5651480e09642fcffabc1099b6154f005ec07d62df6a526e4202b290a283bc67af5bf146458de741af44638c5c3aa9a4f3706103f20e88a52c87d0ba3a666f2eaf3bef557292d8cca2c96403e9c7412b1c509c1fb8be37c75c4b13c50001beaaff4c810d586a537f6bd227ffb500d005807a17e07b7ea77a089157e72fea9181f02adc7b94d8e47ddb6a019517a08359b37c8e45b366cce35ef6bfd4267d19ef91ac46970f2f0573c1d22a0505849a2fff7d2c450b17f597ebfd79f28f3e6e87cb244e1620ac0e4311dbd7a6648b3f6b8d98d4b98424d133ddcfec2af609f60222e68849316216f5b216e5db153b4429d70222542c8de051f08adcfdedce52c1af8bbe217faadb6972c0ace62859384a826b1d2e5ba6c38aa344e4610f17ee110c13561e927a50677a076066713787d91303bdc5721c9afe4fbbd65d35cb6a9e8a096dd83b293ddb2da23be1f6eeefa7643ce58878bef7cc2e8d64a15a42cb01ece3ace3adf9e0634b3671ec98b5c66be876555064a0367fc0f2d11eff34c08c806ddabc1247060b7414c88a02ea330fca2f2acdde665a8f18af16ab5d37cc3957671bafcc17ef468c6432a902b7d067b2bad6e36e312bb99b39912473eb9383818e8f72b3aff635577d84f860bf979aad5f65da01b21f83108080fafbbacc539262e815c938baecbe8351a2dadcecc37437c0f7ea8b74a9ea9d093f0f8ac368a4ec47a1364e0cf5d95b310048de032a7c4cb41b49950666e34a9b29042f1093bdd5d7e01bcc72b32ea8131420a8b22c1bd0b8f20dc8e4dfeb250949df9eb8ab0159677b6aced015a73b1b7c7275e606e150b50a14ad47e33497b70f726aa29b97166de4cefaa2aff261cd22ef4c97664abdbbfb6f65ad21aa8a6a4bc8265494d20fc15103c3a93f64511add308f869559d6db979a04018412b57c5658aa2779d2c133953c7353946746266f5c0f956d427046cdc3443e4588dc63a0314c8d529c84e6b181bf5a3b496bef409a087a1d0f6c1702b69acc23b95114d4a3692b8742cf1aa01c7992c858ce8c97904adfca15989da1751093557b456f910658b3339971ab2e7a3d413977e7a39c2e06bc691b0687e90e3ec9822196842c43ca21aae17b96c5f0ca923977237d806045b4614b145621e13c38aded1355cedc61ca21090dba144166a0b94cda14da15c3b08aed8740bba2ca74ba914bd3c8e5242618334b97a81fcbd1a984baddbeb6a4d26adacf75862e552c8beb64aa5dbc19dea4083080f4ccd287742ff65cb9cc4b3f3a293c1d0d91386a6d1e4154bd95906d0806deafd6fe4d1667c95a8e5252a56871d4d4b4778c131e18024a69d4d3fb82d36beb0cb05220c2e53daf9feb3942feb3943e28a8697b1919cffb222a8d22df378def9482687b03a2f0b0f95d26d7bc8428f600ba0ad2a14aff85bb3b99f75c4925625264a6c6a0ecfc73c3504ca54e8d3f986ba716418c01b1f588356abd500dad1c8ca3a64fb8c1ecde53a24f2bf0fa47821a488a3a2392b6920b5b29a1dc96204ffb7357aa046d077c29c8b9a66cad89f3a2fbd11e5e76182117fc99f37c63b8794e425c44c4a4c9e912c91bca537667a814167b11c1de8a7f61734f1d1c4864ee51c2e03dc085c7bcd0687cafe941dd7e1aca9d4ef07dea384216de616944d1467b396e044101b7a20d4ae312c1731a485aacd4e5b35e56c90cec8405efca741715e16c650d2992917c27ed084aefeb4dba8f3c6a25c6688e4f6f65461d12cd8117657e159a8ff3bcd201fb9f8e4affa83dd8a9b9b4f33abd7b2b2af6616aabf118275e8efab260abbe80928310598b6a19c8df772d43d24210e4425d04e828db0085a8d38e33abd15ce203f4fe421ab0a784d13253d1811f77bff218045e6419a6c0a016f5a54f3ad1ddf4b829788266f79cd11d74a06878c81fa2a16d805e6c79445633aa24db1bbb73bbeb80200284b6590510358f62ec2a8f259f06c2054991deb97db79722f30f5be28c8fef1072e2c12978029fadd05e89d7f40e6581b5fe0b262ca3914c35575513d97c90c73524f84e319f5919b34cb6cad44d838b462503ce90bddcffcc35c157f101aea78cd62ace669deef02c605379d16448a3718e18f7c841ad1abd965b59c7330fc9daa584fc2d8713460558738189a549e8f834ba345485e81665ff1f1e2b716ce7d06fe5b4039979dd5875b0f7b1255317867f372436abe9ad416c6014aa28afb6f9d89bbe22604655dcc926cd54f742b182c3128b39fda4f875dee8f07abdfd5ca345bfcfa90fcc0902cc74e1a30012547d8280b1be5f619d0d09175f1b56eb1233236574bc5b7c2d18956550e6c6f176a616e2792df5ad67abbdfe774c0fe8de5f16a5550a2f1f9487e9bc09666449548a5f0efcede2b64da61bc362562c7cf8b76c3189a12a3454731e47183eb5b4d12415da46d3339c0f901ac04e03ca9f94aba48e1f7502929c2350301c951bb277413ed810acfe65d984ca131fa35309844ba63944fa1e098a5cea08d7a5d7134e497a771659950e7eb427ea28e23e01c67437f9a8fa69094b210512125073539f6dcee6275cf3fc9688a74e392ea9fe091b0beac9e9553cc40c93e6f02e169e0c1dce503286e2c9cf34163634a390b4f556047753cb0cef3a265ce45413810c7c866dffd265aea87e2e0ad22a155102fc3cf8d868a651a9db69a1d0481f4c0857ef3971bfe74f046b7db60c7fbfa1c03c20e907b976f1a1ab8e2fd1f6b641960bdd37d813c86914edb741bccde3b942194f76b3e6432cee8c1100f3df3f1032879e1f6f478cbf8a55a7870f8479270e0e35903dc297a49cecdb564acf67a85aad0e7b5447078226655b9f17dc2f53aa0121dc8b90886565e9052a490f86f40109b3f653d6425abc602c37d395d56c15195e41b944fe7af3ad19f3d8188060ef3d1d60defc6c9dc068963a3e63893b21c584ca44eafa4965842efbbd668d70290deb05c9ae42d92df739ea9a45180c144df0e9b8fec3754ae7cc263e6c1f3cb6e80a8664cef357f86cdfa1c2f6e0ae06ded86e97006413dd3b612d0cf71c053a2f0d2dbc9659090d58748ca58d3108437f201fe49f641755fe4190c6a05742384ea4a085ada61faa32b5ee84ae2f4cda61eb4c20b4674874cacb264075c30f242f51ff4b918a438f1b3e5f406c76b56eb0b437dcc8070e6439cc4ff2459f507390b77c936e1813c37e23f115a627ad5dc11d213a3eeb7eb9fd9407f61fca92fdbc26be18cb70e2122458d95e1cccf23ee093e6403f8f4596c6d694947442a60b5829ff6ac3b2b157d06556727b86700991a7cd3b0d34b97ff50b3f36b83b64c66ddd55017533316dcd6c84490c4b34e6815e1b79f2702f103e16c8dae508279f46ed1b595929f445072522fd806a5ec13421958e6428c7a5519f9b416b5d68a5307641a5273068721a966ec592f09c48f1132f4b9d4a4d9655e1679162b04b626d2a29c7fe103610437d8c871a26a718f780998666e80866165e67375a5bef2582e2b77b2df734a27351ab6db3c31906edb6353c31180e781d1e5d6f42a52b4c02521dbba38ab1976284727612f9bbd1cc034296bee556aba46a815ef5e3bfee5575c97f6bbcf911245b26f045c0e0328ad18006da27d9336cc52da2a7b780dd7613712f83dea60c217e1bd5ecbb4b4a869cb39cc4b2a4ca8f48897eb7c20aec3647b38b9d6ce7079bda4cb5c6f91fa0155aeb59a8446f39e9f6528800540efce2af12928cdafac3d1a36621f0d80987379924b00c5f04ec50fade05f351950f835a4f2d3d0e99fd950c63b63ec3aa7790fad42ab4cc1cebb709b2cf22aa92d70971f1bfc119d63c9878b767c756d9d62648b5e50a6160e0b5c5cedd64df07de8d9676094efbe5a66999c97db18ec330f0dd3f859661d8c4b494d6b48447510159a7093562356c54ff7f93928df1de5ff9754f0a4bd758553021d9670b7430259668b67cc791272593766b3ce3299fe3b94a36f9cd9d1bbd498459b45fa814187d7e578547c0b71f8c4d2c197e160aa6ed0fd63866a3e81dba1584d9141b924d2ff9b3b449ad438d5fd5b40d4056e32d78666226c54167be3f2dbdf2ae2a079ac91234a0613bb2c35e7f863bc854f9a9c33537dcd4c7801d66c0766b958ac6755b8220463e310b916378e09079cb941416e51c71529440d33c76a402492d1c11cf53ae3b49f6f692eeac290cdbec019d590f30dde875c059e86195ef3a8d1fefbb11b191deabce5f7dfca030a6b2304b4f05a8d9dad5d0720e8a52d91e40056ae9345d1572957341c953d2d3ac9d56b894daca7043c60009d1f2b3a5754976ec045766de4141da1370a240deb1fe403517e02aee4e5c0f2b7d13f966074980b42a07d26cc5811aec937f79cbaf9623a158b90b2adfe9b45bb8006e546620fbe5c259e4094b3281582be3aae61c94a506ecbfdaa0cc0a8221d9cf4ced42bda8dbbc3b96c9df892f4704afcaa0bd7b8449331a3cc23350ce0db02e0714cefd5c1b8c1d3e1a63d36ad6c7bcb007fc1634dbe970706cb31346d8bfc15621ce5949b45c938f89c8f5b5d2646f7bf7b03e4fa34ddfc84fb4ef05075a3c0dc8ffa6744790d53e277d802093f1625968da67edf7564dd88b6f7e4e3793be9f120a58abb549028b37fc3da587df239d29243ff168b21d9b73f90f0f4340f954b4a32a88e2aa673a06d7d3832a527ccfb9e514c290274278febc09379aea4ee375c121e388597e004995f7ff16b40a185d578e01d75498ce02ce3bb8452fea36c87858ee5e79ea3836022a5dde60118dd89a583fe44486ce00ad5d583f37f9770b33a89d759fafb7e8d9fe9b75cf522a6af65f3b6571088ad52d40cd56557b429fb2acbee8ae46bc9fff0bfc7199999fa5bd6daf5a52fc7434e262692a1669f9adae9e381727f07259ef0ae93d60ee4e752449911a7950ab305e8bb94f54dbb2942f5392402c873c63dbf6ceb87f752d7bcb0d8a702725a45bb6eb49a65995e70c337054b12f3c2d3a9bba0e2a5a45973bdb90bdcfb6d9d1c5c14707f53fa143981372a2d77899e82c61e7554080c31642c403da1acaa172fd5c186315f104e0a148a32993c45ad5b6251eafce83234e4f63355fed35b05e36ac2712dcf7d7f93abcae7e5ddacb2bd258b4311c8dad08e6f36f2635e01694fc9a199f7cb4315fd472bc2bf5513b0331a543c457bcef6e8b858e72fff15b3a0fcf77849d3aa01f34edfc8ffe0a6850e56899263595ace1bcfb63b9853c48488ffb30d204c61c6e9ec315e754bb543e591208e83bc259098e043dc29a338e72cf94ebec98eb24f4007f86d30c4c1d5d035f08485a8cdcbd99ad880e92ef409a5d8f88080758bfaeb2b2ea1f73c973f76dc71ca44cc16f2f370ad360d925e467ca63048db89986e0a6ada05856e2135049161c6cad8cefe97d6a7174ac8076987005b5a745b4c1313f8dd59952a505b2b7c8ff8abf4cc5cb0b36a762a23180d9f18710aa0a08bed5c92a10a4a7563cdbf8c3f1b9d4e0c6fbec0f706556eecf54938dfda4d0ccd905aa57a11a79efc2428638e912191bbbd128f5dceafa5bb7f0aa2f96b066621d38e21676212788b5620a86d0f7d923a8db4f18568e74774822e516d7f078ca9f0372a2b60ee2684935d95fc447dc4ff6d0fa840fa5b340c5a35025d585320c5a4cabe0140e1e48fa0c84b807ca3f3a9391aac8d5c83ba7617dc43ab20f311b842c06ab2cb788d153815d36d21fbb1a047e5d117b53ccd8f86da3bff62ddb8ce714859d3a715ddc6ba74f04fb8d9d5b6aeab38ffe9a3d2420486eee3865ff3a1ebfa505b96a3ad9697769fc4d69ce8c103b2ef47b0735834233d7d1a2bfcdfea4bde6585e42e6914d1721e6b14dce1f189cbbdb3e7f61bc040f0d59d97b9ef1f9b785590dac790b99afc56aa1fe70f1c4a499d5be8fd75ba95b85998937d68868a349aa1efd7b1401ac62a4be9fe8af82d9e2fdf7bc6972e56a97d54645ba1f66bbb7b45c1dbb2c627e6b69a65d4cc7602d08ed6a61b700aa995790789a948ff64bb67f0a2f612aa324f6168f266720fee1ae31ce1cb3c52facef58c8fae14b3bb90d720135d469d960f6a50e1c779ef415368269a7575f30225f51a7ed397b8641f209d730558dcd77a237edad0466642d97f3a427a0332d26573d49d80f2e3a301ad8b160f8bbfaef45546f97a4247ac69d251cee213d09162ad754e7873de91d7b58ac2d75e3377ce82c712fd33d9f581b6153edd1c74f850c919e44ede36dfe1e6df443e7ae9bd813499aab7c92c6ad102587661374037996753eabde1264566b3f08cea5d882196443324f13f544f044cbd24091476cdc898a81b9d4cf85200e87f246166003317da5f737142f2ece33229b5efbfc3d9dc2019e8b02033a4446bf11ca0a2c59eb7ea03c6a876ec163ebd839bc8e829bc184b5fc9785b6533e3fbc242f192e786a50759ebcb105f3b244acd0eef4c5480e3da25661e888c97649ffbece8380b2a80a28299a1cccc75339475836f01cb9a9e3b316c080078bcb7cf9cfe3520dbfa0c62650f4041ee30a6eb81d878f91a34a5cdcb64e556876e8f66c91124c9391c8642912c7772444c0bc679a228ffccf18de448a4bf1a7f86a606f724c120aae6384ce14e5927988f268b59ae0cb074290cff0189bba9f4411c04118f1bdae7d1a2fbd8da7bed23e4d21c65a386a3e19306a89b1d8fad8fe3b76e1a87e5a9a81333144223c5cfca05b11f6fa5b804ca62f057393b4a1ea1a30dab3aecc721f754dbca676bce26fca817eb9163d212acdae2bfa2d250f95d2f70e55c8949b5847acce8fc66308cb130beb92a87bef224580f821abd449851561d123ee954d7b6766239e6d448ead2adc80fc04365dcf750aaef170ddd26a86b7113f9bc759e58d7408ea6aedfb031c91a13d83d6f16191a0635ba240fd7b6386c38a9d7534c66361b61d345a6a7ec34fdd0739ec6fc64a4d521725e6550cac32b5ef518b71882fec8de855f452677ef8446e7f95222b0345d9913adc77c18bad3016c85d833f9eb1f5b75c247a0ea0f41c506873d2d0f61f432c51d97f12d80092c4902fce84ac0fe003ba3de6e93919f633da0a56927d6e9a6ccf5c669adfe076843526bfe90e98eb8dfb69ee80ab7173432f4acfad2ce9bff98c9d60ee738e9f3820d1979c103e7d0954140c3854df453d15af3a162ff42cc45b2cc29a704c9f9bc17e37249e1ff30fa3dc3c2c63034f3b5846b7c3f2aa5c538af4d93599b84b5bfe1beb506dce8feef6ac91280a27f3ff4bd2a446001006fc5d5c98179ca045dbc71b0dd4f92020ad5bbd3949eb0401a45703291f1f6e7e1783a3b60c78592f4a6d749d7df3a14beb12cc757eba13f20c1da3a8b4b09fb90fd30d1a75cf26b71de18aaf15c4144b26e43b81dcc8022db6d503628639c9eb22d56f1d0fd440062bffbd63f4409a4bc7fea6bd78dbf144fb2873dab6a3349bfe32c57b5588a23e92e0aa8b461114357aec98bf52c932b1a688e4c86c43ce63c5cd416356529127c9f6b57c3074b80b0615b9ebd3683f7c9561b17da110983a77fdf9aa38e1475e4d93e81709af968d299636c41a255b76445da1aae35cd9be51d49876de411ee0890d6c83f96b0a0dc7ea3154bef75c4358f66b9c2c6b093eb8325872e2bfa1a513951913f49e00c6540ca976de0ce7a70f612a05cc96e8e63d16852b616862e1d9a33621387920122d1934f18b49413aca0448750004ec4998da79922f0bbbb894fc0938fc89b71d9ec90ac43ea34b0bd4c3b1201d9056403e14f5a9c27810cba0a5d5e1016992cfdd07158ec8a7458dc3385008a2265a28e48f0138d1a8eb95bcf3ed3861ec5615b332667e2ced7433eff6a5359c80362e19681b440d45eb0a2604927da3c2b4a5d163185f675323ba580592d21b83064e13ddc95a6460b8799a16cd9dce00679dd3b3f89e7f4484060f63c1fafa352228a530fb00ee7c863295261437d8370c628146ed77c7fa2a5c1c86816170e6c44377aae2ac748d4efc757d37c6160bcd1ccc710ac6f8336373df23d83d7d8678474fcb6b5700287908d60d64d3fec47f2a85b3d804b20e4a318b97d89324a0577fe9c64e84cef6187d3322d8ecd6aaa832cbecc466ba755d459c091421b5b5dd5cfe10eac272ed8a3eeabccd01167561385cd4d6e97e54c559833de901669e942ae055dc7a72c801bc4f92a81d5b32b1f6a1c918d6e6fdbd4fbeeb3f4af4f5b62fd734a3bae2d0ba862a4839235de4d5907c34963f36d546931e7025837ca9638dd865154638753800d2ddf4ee78ee81bda56ca92863228aa975bac15e34e19c6b1746695c9295b792a40f1811f05816d0cf3976dd6ac6f0d0dae63618b2a240782b2b77110f41b0efb739b9d7bc0f2fe45848c1132c0bfcf4e56c996d1f14ea5880afeb89f4b1e5aa40db50af340e9d2211415e5356b35311ad6d2fcd0cdf794d4c9d98a1f91b3d7b7a44769111a853a78d040b6e31a61f0f87b7dcabe1551c6ad16599e34f147d9c69fc05b60a45b8d593bf9bfbfa4fdd604fca605f6c982743b45625ba7ae59cf5f3e23214dbecbc8b64a66475ad9ccafc96bc66787b011e75da6219fa28a78db1a2dd330a7bdba99ea64f5f01a14d23964b57b22711dc89037273f735ff9c35021907c39bd264afdb0b656c1d9849504b8a9c007b5f2d21a4fefc678c21d626e924572c31b917d7bae9431cc996f662b446132898794b3548d9642bed87fbc4f9271f4e713bb5f8b483567f2e16a721a406390f86b0ec95275e9cccffe12b85ebb66f021a74ea35b0945058ec5737e9e4628c78f604bc66dfcb3a05c03aea79ff5155f20ddea7001b1bff29d0cd9c83faac84d3f262c3d0ef3f5aab295e945f6e37c9a7db334575b5584b104df0feaa99265ab2f3366810130604206082172fbc45a38fbd7f1a05d1b030308ab29abc315e695dfbe24f7514fa79bc94ad8775a29912669e43a571015dee6070ef0b1d6507cd092cae07b4c85b9337d977fd14cdda191b86b22e18d2d8404e3f435386b634bca51dbbb24961f2818ca978d58280e1f4d56bc785dec14a2b40849547a0a258d7ad4c6d9f89fdf675febe0b1680fccb401bd1418945ae83a72e33d7bea6861ee02db53841f6b58080dc59e4cee23144809cd59fd4e3453461803da3fdde5ceb9192b19f19781295e20357e1eafe9c23e487de03ce0862e4f74ef508bab5161d0c9fa80f1657ed2933adb0c4c4277e7a375d4d688ffa109b4f3ce77b0b488e63cd263aa593fb1b3c1ecd2d66a165f704fd08b31c27a57d750f30da46a8cb0a0838b11fa29ca792a4d87e291a0c76a1719bb3c882b33573310224660ee3c83c52b71730994eec474db8b7743ea8e2f6f7bc844610a9b1a120bcb28501dd1c5e520063f5f50e4094195af0c6efc1acf642f981be1b529b72d2ff8183317622c583d1c5ba087a8d53e0a2d7a49aa5acd92c30025fc6b78c0c26497e5c25d2b36d27a67e262ed9cc4674c111fe058456477952af910f26070d2ac9fda08a0fc5051446a35a37c9146d06a39f62efd366b2b8ddd54f78dcf3764cd31530c8790c94d932d1a67f421f7fef19ce467552ea98f9bedb2dfab0b80362397efade832fe525855911c16c9943a61501c9bbfbed88b2c25e62c0191950e15cceecb253c198617ce773195d2f6567ac5d2e5234285e97ba28f06a7d32d29d9e760cead7c353e273a7124dce8bded40eda3b445e02dfa2016d135eef08b79ae8cd5437545aae3ac313345ad2a5b17d4966d8118b1ada1891848bb89b4e86b2dade3fca46132a277aa30d901a402dbc04a580f025a9574bb0c189474a230ab87b8905c59ece9685cfacab819a7392e09cec0b963feee09b241d860648b50b5f42fffc569a9f4df05917e1f773e8fbb96cbf40b99b6935cab0141c02731fafedb00262fe932889ec0ee498e22b5c68a7ff08c47a208ea78ce40453076188fd819d6e5be1227067844618f98d13baf567075925ac38bf2ed328c1f6577d501ec340a4563d9f7cb531295e4ea72c3fa7a60a9cd8d9addf67269a405d44ba6d08bc06bee6c38739b8a9e9646c80b6e6827c6eff62382b09eb9e325e6fbccad7e1cc29926fb9fcf821aee8ac43607e797619773730eb596daf49c3fbc64dc3b8df4640df378a5b299426ab425cd643948313a9b49618a9f5daebc3b8e013747039405da9212b19e8f353f552308fcb875850a84abdfdb40f78994125c80e58690c06e91f3e33babd3ffb6fe95b9395bb0e7170c28c92b0cbe4b599a68bbc0b97fb2a1a7e9d08eaf9d5070156da5023a3425bdc4dcaa8bf96d196e22dc5e25bad2fb2d7ce2140689b8b5cdd29630e0b9428d813d837f31dcc330b8f72a1d177818f5c2691f76470b12be62ba05c65fb0645a3b5881963b7d4b9be8b163d4ce90f3fa1370ff4f9e99281eed850d4432013465574a9b5634c74be8c0aab4fcb3fd2f2287695763a9a7b649a305d1b0c1d3a3b086e9f4d12a2ff3a25d327f49da97ae86f28cb712b1fb7ca87f21e88870ebeaee04a01147fd96697eef0963f590fd9f54ee2a233f5f4dd231dac6308b814a46351d867c871704876943d0b5cb0b228e1d28adae0c544ee2b38530ede47ff24301d673c335b4029c8edffd7f58918e79e9b1143a7cc1e84bad3740f0022749f8446e90961738f877b8a6cc3d6fdbdfaeda85efb4800e2a0976f81428adec9b4c87066d0c85b9c3edc4524e80ea09892c605e1fffcdf0bbe6f3b85bdf13b295a9d5e5e89c00f5a5c35fea0cbb2d693bb1ea3e989151451f4a95dd21ba37b4320bc8e487bfcdd57113a55ed4f21cd851bfa708e6e5e46d94b85cd0d1d74826b377d4dd0f2adb64d59aa3f1ecf9a99c66d08eebcc623324d1ab45e3acf52d2f5c8b8492567aaeafffbe0ec670f58f898ca0ecc09da858402d837c16693f0316d6172d68be14858a4f2ce6b4e7c3586ab459610eaa1d79a0170321b70073c69d672d5f7d5ab3cd3cdfba7f25a2cccfc5631e5631c4e96603fb0d9709b91f52cbcde13a5df00668c0630e2b05a9b58e27ddc4929145095acee94140871db0b6c0815ddd4ca92a035948c8f81c35a04bad81d6d5c84ca7c71ea58422852866fa9c00d47312e34da133e0b13e879d7ef23ef248223dbf3c7a13216cfb70ad0c1f31e6c6a9e269d12ebf1f5a8eb337e63f6d75b675ad3a37fe9454a9329b20390132d7ec58d9451f7fa485bd4ca3998b0c4991241683952b7cdf204ce93afe4616252a6853eb7566ebcbda4e506df69b27bae6121c8fec7d69d4dc0ffb5c1438e09449360d403b2c93ad8b8e63d0555ac9ff343320e7bcecd184c6a8ae2fdd95acb09ac674ad2be098a9798845442c683a53f94a3649b8b3e7ba35b7adea7299a9aef81ac3d4bdee1a5f32c7f3f96fe85c158d1ff8f2e0d9ed8a9728cc4a1e3816df17cf314d332818e4e703d2b7e2dba5ef670a87e6dd34907ec7121a7ad70b8e05d5e36d337b977e6ae886a449a98d588cf286d636d240010ff1ed39c8a376dc346854b0a52b2684d87209fae19b85a332c6b003a7dba7733b58c410426637ad7933831addf216da865104028540baa31a756fc9b79dd7c3b302f18f34878d34b97261641d59de07db0a66ddb05206bcd9964b058c1baadb49bf727f712030f2bc8051aa5a484974804c655237177b625e8263073e1479307b4e3ea03d3c37d25dce8dabe1a0b0cf49202f04e83e434f27def7f2a8c16a6b51b79a1a18d708cbe9f7c5009b1100ae30ebbbd8fb59cdf69849715204862ed15400bf57cb392fbf2c43d12fd4feb8f8df92be655181deae7763ac7a9078151d129330526393d34f805eee404838a718779834075c72c7f14235621f5c63a0b067a2173eca3f02d13e9c9bfa7320625880957c835b7eae874de63505b3fcbef2ddd889cfb01b5bb437ee71e3be45677a2bc517af937127aac8621a822a67103e0af4afe294e2835505e6e1b0b064d8abe2455e70d71265f471c44c3bede11cfab9e4e2d29767bebb39bd3ce7de03f0f8b0eaafaa84431745ce2d9002476a3a709f301c154aff054ea79c55a74d8007dba9c268d04df582657cd4e5defc8c9151be92e989064373988adc170b808e0819c60dea0b9aeced2533aa228a3e8ecce4cf203d7a377ea101273d971524fe2a867a24e797c5c598a133b8d69799c551ff1f3aa04a9ff824cc66da9332394f6da4676a128eb06c71d05d1524851bf53fc7076f97a27d12c4b076c030103a2b99e49d489834a0fb616b44532a1143d55d8bfe9c96251032126c04b75c14abd0f276b7efd5afda7440f86467146bb098c127b997a7f8c0f7550a4cf8fd6b65181f3abc9e4b9bcb94f8cf9aff69d3c7207e91e26ad3d599666ed8aec5af3e6b0eacfdc9473197a2b05cb8202e26ce90ed35a9a54bfeeda6d6bfe6cec637106b163705c57e9f7bb2d72bcf75723030dfd28c4af346b6eea8c5a9f704a8c7dc00ce77954fcfbdbf3937a9d074960ce0820d00afc9dc95cd90ae27ed3bf777974cdf1800b64e5a5258f7a660f6459dc912861f617ab4c9a073deafc96cc98f44350955ec2f0a8561f1e0f0b2d97e9b5c2c21f7706dd7c3847b3f83e33ffb4e17aa1663e8a01cad2861076a4d9191280594ab07298d2546ae590bedc9c9c939f08a1e9de0d790e60d473c1c81e4c1ddba281bc997b4d93df6962eee621c4a94fef1955e2003bc541c691a0c6bc3d376b6174a62d4673b6244f11e704340b15c6c62fdb5ebd2c2874ea17f7caa665a472a23d143db695c7388652cb2fdf5fab0c33b0ec1a3f2463808b78a74aeed185051a992dc6e3d5f05bceca9ae1ae34df30ed20d00bbdabcbe0e7bca23a65abd813c81a70665474a4cd613967019a7150f01e9f9d851a3fc550af591befd79d327731238e4d11855ae706caf64c4fc54ca32a759649cf4df8b052cb82b4587330dcf523d72985fcd6c949d5610ae1156a13ca2db67da6a89c9b19fe2fc780d9161f5f238b748d7fa7106ddca0465faa5c6c693cd13b9933ec67432ee5dd355249c5c2ba54280d5c7f0be4fd1a56cd85c7122d97a34f16dc4340d5a318179cea1ad6a08a881f1dd8e9cf93325f91083798383fdf998ec7d605109570a7f1495dbb06eae4595d9b9a102ebdd9a64e6ffc3e3ae72a6e3e122fdef925bedace6230f15371d0b460f5f66b079cd44cc5c1617c66b3c2d713dc9c945c952ceb92ef0f74d73919b22e965e9e102eed9f1376a9f1e54ec27a99bb0d2bdaed619cfbf5b1c24313df9f6ba9d42ccea9b60db1eccc328f646b999085cf429ccfade76f40d85afa5d66b25cbcf6ce049517692212734e129fc93a030f43ae9c1b8a7e21194e12837dd3aa7311446b0e9634a9df8a80a574611686e3825bcb1464f4af5930ccbd5fb48332b20e98601fd57bbaf57479444108cde47c0b63e70ac477fc30567b57d2fc46df3b51bac560d138bb8cccfc44f6850b0f0e00ed8e5de6f18177b674ef069275b982b74db16632a8e4f40e2cf15c0fdd38fb32f0386e5e4954965af9eb413336f8705cd41a8f58831a2ca914875e6abee416b9ff2981502bb7426093e089c43e453f2baaea2f754158b6d689b5cab53264237da415903931a47688a7a107ab4e38098dfb45e44c6e50f948336e2ef189ef3df42f9705b5a7f97411bd1ec92ef69a43cdc0677d50ff0fa6d79de0105c34ad02c4864b96e2d8c7e84cbf4a0ef9be8dfe054805f8a2d5108c66b73b1f37c98cff3483ce5912b0c3942485d9bd0b1904f51298cb3d63fb0cdb68dcb4095782ea60f6ad5cec77ea2f8fac355c5025f1699926f4d631724c24907772aa065a0622a84d374983ecd0ad21b171d545a267b69c896d7977bf1f5de2d42546e9da27f9b3ce81e0be2f36770e6a90616f3dd59563cdb76769f1e893a64d6d0ed2ae2f1382481def5e4566b94e8dec7a779223c4ab69f0346a4a0b50d79b1e33886881c89b3d2f5e12ed7854051ff2c4450615c4499697d94a647a0230ba27f1198186a97cb5f2f9849bb2133038846db76c55c53661d3c589ca2cc56465959b5987355e5c8d0b57bbd1736303c7206bb94e0b559f243fa652fd2c47a654bc9ef078c242ffc4204032752c811a6a58758371130f3bc627619acc721faf00ec6ba941134b57bf62d9b1f7e3e302227e50b921e47366946518b96d4f9d029f478375ffa2fe61ebb84f7c85f38b88863021f12e1c3d50acc1436a7d2e2914bd3c17e1341885ed6d6581661b562e5920f1d303bf59b2956110eb0d8da8ddbc13c1339f4f613a46137adf38c1266c9f3913b1e030d6f7a48e5bb6ef8ebec96bbe7cbaddd34ae36a684ba4b1d845d64905336351201ad95bb085f8c260e06350a19a5bd1b297176054dcced8001af5b2a16c811b96ff33f758eba6a8c2ac23cb676f308985cf721be4ecc71b9cdf300d1c3143941a946af4d8fc60454bd58d072982696fd757083d960427b5ef83af7b8a16a8afaaaca4a617aac64a7cd52f0a5f4f5d9659796cc3243fda7511f5b29b035e0bdf9f769609e4ac906260cd4ca32b45e6b7a8b38c57872e5bb90c08c7d633667edc19a808bedcaad296eae83fac5eff5fcf7aa354b0d098032e943708f2e5a15a459259c69881a567fde4cae4d78dd40acd84873d622171c4ea3d323eeef113569c78a8d360e6534b3fa15e3a6792eb4c6584a547e01b63acfbc53d47a1682001b6efbf2bc414faaf25050c07801373ed07e5d4584dce85592c82ce39407150e0a83192b2ca4707c14cfb9145f6440317c55348b915c2c0d61adaa67aec536190461e73bca80aa40fc2280f9b00f2894d51e5bdb1da2cffe8c6f4b6400132e86909266795b932a8eb57c391bbc74d5c0c8f7b3f4c9bf734f2a4f39ec13a2500410ab4f0e382c2cc5804968338aad2f50fff36a1627abfa9177e742488e782d39e18b06ed9585c1b8bbc9d84550acf5bc70f25012a790bc23524b991c0bd1c9cc6b1cc25669db20343a7382c43377b264cf4a978977d57ad29a60b1667400bcb76f45922f039a645e385d5b05bb1eb0c5bbe8006cb71b7bf60982e81d5d51ab1ce03ec95a859dba7c2d771f25317f99d6a11ac81d6c1831658242a14d08d42473f193cc3bf64dc9c35d2fb9138b240b522d02bf9eebec69cf1a18a0e8263ddeb9ab1231b56e0c69e59cb1682f011319aeaa0a047d17e988308c3d8136dce08b42427c9fb6664b2590c0380bbdea9915d022ac1dd6685ef44226e88d266302d8db2713d2a42719fde63bed9f2a5264258dda35886fea1a5e081a15f2edf6631310c2b9091c5e1c3c990945cf9daf6ca4ef08c0596075b0d9d1185a4414ef2852038c0e0c941e6ec90bc6321a9c32b7998f5066aa24a606578f350b9579a7ea43d55ef3ea9d6a2fb6f30f25370b5a24dd0d514b4849d09846a6aa3a4f37c4ff07bc23768f5f657468d7253ce651afe31268510de414b5379c14a78f82baf90066e22cf99f26cffb30467cb838b060b17fb89bcce2930b0006e5477349c32d3c8bd42dfabed850b880267ab929203e00d5809aeb5ad9a1b50a990bc5d39f91b7001dc5c3283179e0a17e6103e36d7dc536eee5c45ce533c78413b06c5f21ed9179f77fd1aae9d2ef779c5938f27aac0f5b7e9e33319ce1774f63c66a44bfe9c4e6ffa46d261fa3bb7b4465f90cb590e35e10d19bc094ce9a3207d4715b89fd153c5208ec03e0aeaf6b46523bcacceb4da874bf7473cada43c794044aa4ecc589bae0531470b5573a509755a2732f6a6febc24c7efc4c1de5a5014c4c9cc8750238f8199841c9582897cf672285b6547c3cb00e723418c457d170b198bea7be675c65d2146d60f44300a8d86e3c88a51f81b574fb9689ee541c79b0a21a8ed68e8c0858bb40c3007091fede7b0c061818ab7b23ddbc914e2c77b3074eec9d49b147726cd606b6b65484bb640286c65407f14c7d080a267af959f5cf789c2c843551bdaa503fabc69c008cc9fad4cf394fe26e4faea0e6c1e185057f5b71579e96341dbefa277458d9bc6c91dc0133ad3c6e940cdce43da04de3fdedb7293ceaabe934e355fdd82e0379b7e2b83a13b91cd010d1b16de006bcd1fcf33c22c7d3d75b3e31e89507750370fa751b8932c505f54b324fe93e00280253bf1923437b5c77f024984cf9c089a253f5f0f19e99bece73cc6632c686d274c5f6ad8a5dd64176a420e0ce128e0f2cae1c41fd9fa35f07aa3ec0af8d9de3583c3147ea14b7eece4e8e3933df7c3006221863f626fc2c265fbdb0cac1cfad66cdc502637f62893f457cb6323bd2a7b3448e8187ff60cf1688b446edf7b816ea1575bf3e8219a2dff80fa4fb137320eebedb706eee9437e9614385c418880ef272aa32f5a84dc95eee2eb7e8d5dffb7ce645f0c2c2d15cb50cf3ed37d740f8af6d666025265cd137d5b2144f49615a10104e68c09197cbc36ffd8204cd9f2119559d028520dca19e55f2374a8644e4a9236036a5b868f7d37161fe3c0a596b5be507b9be760f280c574e5688c062628d783dbfbfbf2de45a599f56a901ca760e53881c1b895a8158a3f1917e88c05dbf9b35dea83b63f361b1caed2f80a0ec3f0f26459e75e66c49eee0ef1295805c8455d7d893f5c4ed2c2a55452824fdb2bc2f721dbbfa850943eea44eee40ed98edc189cd70678a1c06f4b770348b52199d625ed273ab06903d9eb36453b40a7789c8402549674e7c3f1a464086be57eada0e7394dd6aa2dc3c056f3c4c8862260832454b2d3c534bd7312df27413ac8da848359665950388ba988a956675089101a18e9b604a1c3f07a1ab87f3d2670cb13b21bd7cd3e571c0a1f69605210b7cd1bbf34649a7a6b82cb1ff6c8454cb20b5a7299107b0bdff30f9e2e0532622821dbeb81508d0df7bdf00d637e1c7bc2c7b72e7a7b10b51fa50e12c561b245079763b0cfcb92ba87ce319181b3734180652cc05a57e0c947b30d6a10bc701e02990a034221d54239fba8657e0380b85dfbc52e48f71ab4e6b31508039313bd3c80c906249aeeee95152c7e07cd7f826da4236af75d64282a7921a7f0ca56e24a6ecb0d091f031783530e5c354c0e3ee38fb7b01333293a724eaf4a37f7fca510613ce351206b4dd57a4e52c3cc819367db2f05fa458780804f188f4c11dd9ba41126e8a7afbeaa1ec75cb5c50f8d54d1973aefa2044de62dff55b808eaccbb42142d1b00e81ce4b818aea034da4bc925b1eb9b6963b97e104be3309504b73009188dc3483a83284511dd5464f2b843d7eec6a96c6906b66550fbe8fcc88738db1d521c191318162e53e33246444dda994e79eec6d1237aac579da8fdf123bbe796393a9cc71917fa4d970be61dbd91a9fe19a54fbea41ca528eb1e5b65b6f2c6d6c7b6ced204f95a3dc8d5b4c701f933ffd72813e25a208fe131113156fa659923d2203ed11187b96cca23ee076e3dd7de6037136117fe7f76df0336f94d67ca8415dedabf28ae9d04ca8d52b8a08d0c84fbd43c358414f9a9851c8c1efda83262aa5b59e26e575ba0e336996e3ed5e3011b2672d46a2f513cf19a9a8478d392e068d5dd997677acfd82fa47ecfe66fd6e7999c090ba4fd6f74592c714e3b12d3ed8c5d057afb40b37f8534c0616dbf8f7928c44f7235765cdf178b57d8a8c047ced8265ed870f9ae4feefc0d2b17389df1e042f982f0df9a38f4a51d6a582ede7ce9dd26516da2b036e27f268b8560719efb7e5554612bb6ab4182b210a665503dff4b8b6e68f472a0b1ac5120a4039a89405fb8a4da0942e7282926961492b454b4206dfe030b905df599a393b50a31cffe5f09a7b1506804affc81e975e74f7a1dda798fe61b3bb092bb59e2e63218f1d331f7f62facd2c51147d134fe03661dea211c0ff9b6dd83a5322b7a6e7c69aaa89b566d2d0925a0cc36ade3671d10d7e573ede704c57c01ee98222d4df4e907265e418877bc43799378dbc67fc71c88720746ebfa5ec42da06c4fb1cc26343ab61e50573d9452e5b0e80799f7b6f4f099ea729602aec80932b961ec7158148324c51a0134be201d97410abaef02c27c606a3c1bb99fdd2a07e7fe82d032db05ff5c103dd26e0243a30233035a07b829c234f6d80c8a07c6a9d5ff9b24c685c70bfd80b3834ad12dd33584d1b460eeb5de7d5399bed0f836d353124a52521877245eb258ef36b7d3d08d32a4eeed8d3587e1107da1d0478d2aafee95ae552bd0287704fc695304a54a732a7374edad87b60b0c225a138c59cf128ba4ac75abbe252aab7bc577f8ab733cf4c7347c5b58a0806d7207e51688d3f670b9511e5e244cba2c1478c1560712920f1f53ca07f1ba8f2c02bd30690303f02c896532a69a20a4a08686951ee3d058a0049f7dc40e5445e537367f78a4bbd33ff0c2e2c7bcb4081fde5bbb626b9d08ba6a78931f1b2ed711dfc3f9258285be7d5599bae1afa9c3553ac2c460805caac267b44b7b87bb7508ce22758da461c709a7abce575a21592c3162e01a01b387be01d50edbea61c5c5147504d9b10b84ba0d8f2e4a9bd2772cff226e693d13c3906c5066c29a6626367183681663ea779131e9f646a7e12319c62a771f8c63da986e12a50c2e34c50e6b42b4ace2ab444f867e419591b403fae9923b6e416991a1e9cd0e466ee1d593dabffc48ce70204ef0a627817527d2a5f4330a15085617ac36433e479b6cae6a3ce450c9e5354a49d75ac9220165d175816bad0d1af63cfa26fd54279c03c2244781116b20cd00605a38760430233f8e5fb1ef2657c634042e5b8eaae6c31e2370d00aceb1455d045163d220e6b9b21645f2b8aa3a024deedac067b4d2fa8475b480cf30bf2272f9eb9169007ff985559d95a611b34b4d5c49aa631dee2c0be7842bd2dd10557572f32881ab7844f0affba8edde0f4f0d523aed99325d0829bcc604eb66558dd160997dcca6ea391c4fd6b08ea3072d9d756f75931cb8337841fc510e8e7eece9d9f11c3c5a48d49880d3045baf13b748d16f76b34bdf278cd9d7b9a17fc4d7cefee0e7a1d4291874bcebf478af590535c4d9c36da4b8bfb39e7dc04adbc282cf6b6d6b5f6b9427783e234901c0a6c301cae7d6a4e0bf39aadb3ddc41added48a1ded4d7aa52d7dd0d5745ce2027077c5afe89326598b6dc6d5b27a7386bf78fa95c3fa6dba14018e00deb23e2723ef0b4b19df278edc87974876a9cc7447c91fe3434fea0217ac86e7b40874d318ed4c892b9052d3ad10ecd65f8a0739187eec20745653a23fb389dbebe723e9367712bbd80a47ea5e1abcbd1e14963cb91d031a9a0f6666ffd60b87e57895993376d0c55b429e22dbf90efbc2ceb986373740633c88c983b111e2edd6a1d1b980074947030453abc5c0107378aabb37fdf8689e2a2ad874185eb581aae05d75ead1a78c82cef6625dd2548668ab4e2eea9babd31705f8549f4bc7671069fedd9e57cc4270613924603e7bdc4e3014567fbcf399e74d84601faafcb7852ed783763fb3b5dc9a9e5aaeb4850bc32ace096fc73bc4626477bbdef1b8ee8533e6642e1931a967c19c22b6f59a5633e8150689b387b7a3ab0ca6a9f03bd4da7b14685b2e3a13e573286ad770dec0200d202a06b029c815b04162f7e8ff69d01a5165e444287d4d03b1306cb2c2a610a5432adcaa94f03d5d2335bd68ca169e1addb6820a406aaba6ab39291379abf7c2f7a78d8a34d80a06c8222ad47d1b5aacb56f4f81c316edf75ef33c4c5fcdac06c6725d76e7c21ae97daccd68516afd4a4b09905f7acd6cd2b67a0a4a4493add80366a9b089e5292a79b6cd3f93c515260813d5d81edfa7e079dcc3a7b44b1a8daf7041eccae67cf4d0be1a8b8921fd6c0843b6504ea818b847e6316b234eed62d0436e02e3d8f947e9f69dce70646be3cb7574715958f22497930c616ef11f48bfa6ff326b3e4dfbed764441717611d3d48fc3f343aeb68f8eb1a6fcce00806a04a31b322d7f7e7899f5c721ca5fa779c7fc61680b961114c06965a6c6082a3c5db5f1e37766c70099e394cb709210eceb9c59ab7c11d5b81f5099e6f9ee99797db625aabf53416ba4377782e958ff0068b7450e08a620aabbdbc2f2c4e46bd9a419a5485a4ed1169c444e2a94166408673fc418eb57641ec3b2482c07b6f1f1eca6231aebf3f04abbf773f45b5821d04ec2469ee30fe2985bc517bdeaecd083a250390b64a410b2541926a76ee6d45d891d7c32d0aac58fd6cc4d77998825e74262fb47bb8dd35861af113ae3c9d6c3a5d42cf4783de7709fd2672b6e07d9ea263bcc24707be66e46770812f9625ca318ab02773798a563bf410448a86b4a7a06547b48880bc01a8ae85bf8a94bf31dfa4f6c8b56de64293e85ec4834e0bc3b3f52816b1e349db3fc7cbb2b07c26293a5413613b30e2159bcd345aed06716fd3337f57eb6dadda593bdc825230e64a1d966bbcbd9eab09d3a41818e7f930ca1511b8193cb099e850007110d0ecd7aabde110873f938a434b808dff66915a7247336c3c9967a4a7d34d3a4f0ef27ee1bb152d61bcdf9c5b911b220980a0d2dfdffb711b3b3d28eca2ac1d9bb94b787b9e9cf3effdb91025eddd0d0bbdbfa176312c06a6f729b72b30ff323c5d17103f6a43ab294bdce2fd919b39ed364f5d6b977a45810c3df23cc73b19929fdeedd45d2f1f7e71e368c873b7c8c15cb140b2ef97557e7d2feb4e99c61d4521487afed47231bcf9310ae66e7d4185800783405b0f12a8b1a2159dd47db251a78f0b4aa72547cefc5abe01eb582ee052a93a237ec1fd67be12660d6479693626e0c2449ff1fd0ea8da71b483548a58c20664a0a2d7f6ac483694cc402592013221ed083572886062b858ea97e289bad7fca27b164b5a5f4cec047e8aa0fc72065d6eda28830f3d216f38e99131f7547b04ad8ae407c37faf22cb38f700deabcfc35977f671b82ec83d3454ed910dc213627670831ecb884b9a69cdd1151ee00a07cd226da1f9e95217088e24ed8800643dc5ce4acd3df480e557f5cf39d47a825b33fa74e5efab398808bcb5d5b08e73b9d67e18f5f9466713ef4e1f7509d6fb2ca8c77a9b562af3272a2a474586f7fdcacbb2ba12be48f9ccf89e5a97a8d2512457c1e8cfb13b1cbd051b3eeaeb9b7797b6a26a7fd75071d2796ff638e722f43215899cfb3998113da7927156bf849d97a8070b96f238dd3f8cac9a5183adf87feaf9a8c93388ccdd80f6127a20aa44b7a03a7b74402dd2aaa60afa4f683500bcee1f367a2b6b1f50d6d903ffde60d5cee72b0bb7de8f12584182d8bb9c1bcde73953c485bbb96de79fdf00f5006b8bacaa07592a4b049b3b80cef0bb72a91f6f63305d9add55898582075249765ab9c0963d7186b8cabdca8244ee5c3dbbbe460a44e3bdf5f7c4debe167767c0b0aec8b0f923bcc60c83da5ec113bf2587947110a112fa59820a0bb16d2025386f2ff9e98e80909806bf4d4e414bcb593c19ed79397f9ae031fbf9dc87611f0821bbd152344cb18d924474b332988f856c1021b9c56018662a73df05c47e927f8194551b714e9730b34b0646c867ac788c35d5792e31e9c5b7804637bafc6ebaea06c1beee1d71b6f61149d9f06ed34c28aff9f2aff4fc704b9420a95eab6f9af5660ceb99302c672ef44b855b92c9ba73a68a4b642938600222392edbf788327d3b946ca6ecdc243a0b94fea957ad09adffcc209beddd18219d9031fa3aa44854549871b37657c1951654bf4a47753d6e5a611ca772e413247cfd80d73d82d22bd10c2ecc69bc0e55e19f0e06ff49a7c9238166046155871f0f8d61a8c7c340e8e3e96ff93d56d5d1357ac76e1730361363b275269c39cc5e6c62ba60589734d5679d1d771cfcd5116a831bb76a60cf109cf1ce6d4df978316a59886ef329b464a39815f8c1624114a0300ec2fff57e6c388735fdd2b759f8500d68ee6c1924d25fd9285952dc513d5b9a06ba0491c0ce38c3cdcaf91de60760c9d988378423730da5a8a51aea5f3ece1367b39a14e06268ee9d4c77da434be3c45e2fa7acdb7c8f3b4930888b8fc8176dd1205b1468a9246bddbb8663b7d7bd89dc7255ddc6377bb1d32dc1919191af161db58ee31cf11350727850785fb7f93241af4c2b3eeeb118b44c5b85bd660a58fe1ed3489e295bbe6ee2e7f5f89cbab3a345bc703757fec4b7f7d929191701fb745cfb9d4d2b8a434313f87bd23c3e7d6035aff4637870c5fb741cf82c1f008a370421d74d09b0f9b60142d39b3a30d2672802f9a078dfbf8937de02370a3c57f147b5178fd09c149f61ceba5cd38c1ed9ea805c7a6553ec7753b20c6d1384481d28277e6d356128a7f8c6ecc75786721e0346c1c7497e4b9be9d4fd05731764735c57d05c3df5d0de1e38fdb8baa0ab2b1aa13917f799c82ea22c119e2011729d2cc1c49253ef8ee824ef648079fd55878dfec2a58d648fa4af35b2301140f089f11641e53ca9c278e7bfbc60efaeff7aec2bc64f4d7eb593f5ab73c4ca13adaca507e086c3550054487c4cbe67c56441df50f26548bf816c0cd349e13f81de3a0e19c195d7ee93014608fbcc62a38a6b9b501f98e2b61d4acec071cf789be6bace9e3b43372d3e2c923e1e531f76760db550ead5f1ec7b998db66ad7ca680391f10e0ddce8fc81d7de6a6b9a619a45cf487a103cb753c7a0747bc6c542f450f82ca5edeaf0e595bd546e3a988dcc4e6af0f53da2e2aaef14ec8852dabb5f2b7841f6771e9cfdbf4828abb66357b04830291d57ee731a0956571dc9006e021145fdc9d77b8474f50dfd39877e11bee4aa3d4757eac2bf036416b50beeeb58d36cd396ac90539b3bb7756c869bad7281488caa30472a03982bccd8710b175c61664e4c38a98e8a517932b2c4ad85da31e454354dea1b75dac5270c892d159e5c05f89e98846d324b97c05c5b23c7213a2526120add08d3fd97866be46fcc866f611a41dcf5da9da8aafe18e7369e978a34401e16fdbf06ed25790647a3edca43e9a48bdc196e9186b13d47a4b88802a71605af2c2e71d29e9555868c73c1d2f8a958f3be307b972cbcb8f52296f7477782d00835c15b1761997b4fa49eb44d18ec73362ff4e0c49f4f75ef87c99647e031eaa17c6aaf1a82b97c78297b0faa5d5fa7a2f3d4a8bd7fd</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">why author alive？</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Records</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>七年</title>
    <url>/2024/12/01/%E4%B8%83%E5%B9%B4/</url>
    <content><![CDATA[<p>我选择将对七年的测评作为第一篇博客，或许该站会变成个人的游戏评价收集处。(笑)</p>
<span id="more"></span>
<p>以下为正文：</p>
<hr />
<p>心绪难平。
我很难评价这部游戏，公正地说，它的游戏性极差，比同类型的《to the
moon》还差；我无意将它的剧情封神，但至少在我这里，它的剧情水平接近甚至于超越了去月球。剧情的逻辑毫无漏洞，我原本以为它忽视的东西在最后的最后忽然提起，并成为了扭转局面的关键。</p>
<p>前十五章可能略有些无聊，但中期到后期的处理十分紧凑，每一章结尾都会是刀子或者反转。当在主要故事末尾出现两人相逢时我终于嘴角出现了笑容，但此后超过十个的ep又一点点温柔地展现了残酷的真实……剧情中的伏笔数量超出我想象，许多我以为只是闲步的对话在数十章后突然得到了解释或者利用，即使是原本并不令人在意的配角也隐晦刻画了背后的故事。
游戏中交织的友情，爱情，亲情……感人至深。春人与葵，17711个七年，当葵在漫天的纸屑配合着戛然而止的bgm下说出那句台词时我的心脏仿佛也骤停了一下。
（试图对感情线评判但是失败）两人之间的这种信任简直是一个奇迹。即便最后两人不再有交集，但春人仍然没有失约。这种程度的感情或许并不现实，但我仍然羡慕并渴望着。
最后，是好结局哦～</p>
<p>这部游戏无愧于其taptap9.9的评分，也值得我连续两天熬至四点的期待。</p>
<p>《我在七年后等着你》</p>
<p>可玩性：1/5</p>
<p>音乐：4.5/5</p>
<p>画面：3/5</p>
<p>剧情：5/5（5是评分的上限不是这部游戏的上限）</p>
<p>总评：5/5</p>
<p><img src="微信图片_20241201223907.jpg" /></p>
<p><img src="微信图片_20241201223917.jpg" /></p>
<p><img src="微信图片_20241201223921.jpg" /></p>
<p><img src="微信图片_20241201223923.jpg" /></p>
<p><img src="微信图片_20241201223927.jpg" /></p>
<p><img src="微信图片_20241201223930.jpg" /></p>
<hr />
<p>喜报：截至2025.1.20
23:26，该篇评测在taptap上获得了155赞13回复1转发，并被选为嘴替发言。</p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title>你的颜色</title>
    <url>/2025/02/22/%E4%BD%A0%E7%9A%84%E9%A2%9C%E8%89%B2/</url>
    <content><![CDATA[<p>我对音乐和绘画都没有特别的喜好，因此这部作品于我而言虽毋庸置疑是一部好电影，但或许震撼感并没有那么强。</p>
<span id="more"></span>
<hr />
<p>作为商业片的话，这似乎并不是一部好作品，剧中的冲突显得轻微而温和，也并没有那么多小高潮能不断地调动人的情绪，抛开轻微的百合向不说，貌似没有什么能夺人眼球的特点。但是，它确实，从结果上来说，也让我这个对音乐和绘画兴趣不大的人能够一直看下去。在我的想象中，看这部电影理想的场景应该是：在某个阳光明媚的上午，舒服的坐在（躺在）书房的躺椅上，阳光能照在身上，我心平气和地在电脑上点开这部影片，带着降噪耳机在不被人干扰的情况下消磨掉一上午。整部影片的氛围于我确实就是这么休闲。</p>
<p>细节之处反而让我印象最深。声音和颜色像是这部影片的特点。单说声音，电影似乎着重放大了那些细微的声音：火焰燃烧与熄灭，雨滴落下，脚步，呼吸，翻书，乐队使用的那些接线连接时的声音……如若不是我的错觉，那这些效果似乎也暗示了窦子对于声音超乎常人的感知天赋。当然，末尾那一幕白噪音和背景音的突然消失也是一种常规但有效的声音手段。</p>
<p>而作为影片名字的一部分，颜色自然也是亮点之一。从我的感官上来说，色彩鲜明而不激烈，感觉十分舒服。不知为何，收音机那一抹红色令我印象深刻。而作为三人组的颜色，红绿蓝恰好是光的三原色，不知道是否是有什么隐喻？其实我一直觉得橙色或金色这种太阳的颜色可能是窦子的颜色，但结尾她翩然起舞时看到的正红带来的震撼绝对是这两种颜色无法比拟的，而一旦知晓了她是红色，那也就觉得红色确实最为合适了。而作永和路易这一绿一蓝更是怎么想怎么合理。</p>
<p>其他方面，很高兴没有把窦子能看到声音的颜色这一点作为“异能”着重描写，很高兴整部作品没有对感情线太多的描写。</p>
<p>是好电影，但我确实无法对剧情有很强的共情</p>
<p>总评：4/5</p>
<p><img src="微信图片_20250222233856.jpg" /></p>
<p><img src="微信图片_20250222233905.jpg" /></p>
<p><img src="微信图片_20250222233909.jpg" /></p>
<hr />
<p>P.S sorry ，窦子，一张你都没拍到</p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>film</tag>
      </tags>
  </entry>
  <entry>
    <title>红辣椒</title>
    <url>/2025/03/31/%E7%BA%A2%E8%BE%A3%E6%A4%92/</url>
    <content><![CDATA[<p>《红辣椒》其反映和蕴含的社会现实和暗示过于丰富，以至于笔者完全无法详尽的写出，于此留下我第一次观此影片的感受。</p>
<span id="more"></span>
<hr />
<p>最近看的几部电影都更类似“叫好不叫座”的类型，无论是《你的颜色》，还是《猫猫的奇幻漂流》都属于那种艺术和文艺色彩较为浓厚，相比之下故事性和吸引力逊色许多的作品，其针对的人群似乎更狭窄因此评价也就更两极分化。</p>
<p>而《红辣椒》并非，即使作为上个世纪的作品，其各方面在今天也能称得上极高的水准，甚至如今仍能在网上看到的许多名场面也出自这篇作品。较为专业的观影者和评论人可能可以从中看到反映的社会现实和导演与原著作者的一些思想，而业余观众也可以从高潮迭起的剧情，瑰美华丽的画面，目不暇接的巧妙转场甚或是与电影相得益彰，恰到好处的配乐中感受到这部电影的伟大之处。</p>
<p>作为题材类似的作品，《红辣椒》的严谨和易懂显然不如《盗梦空间》，但内蕴之深厚，想象之丰富，画面之华丽，音乐之出色却又令人印象深刻得多。作为一部动画片，其对梦境的诡异和扭曲的展现反而会更贴近真实。大量出现的荒诞甚至略带诡异的场景足以让人感慨绘画者的怪才。</p>
<p>正如我开头所说，“其反映和蕴含的社会现实和暗示过于丰富，以至于笔者完全无法详尽的写出”，我尚不能完全理解电影所表达的内容，但就那些显而易见的暗示已经足够我再写一段话。首先，同性恋。在影片中出现了至少两个同性恋者，其特殊的性取向对于故事的发生和推动有着极大的作用。以及，女主“Paprika”的特殊的“治疗”方式——即以交合的方式帮助男性治愈精神疾病在影片中亦有暗示。以及，在影片中多次出现的梦境现实的切换，其标志在影片内明明白白的告诉了观众，但标志却又不是完全出现在影片内——即拍摄视角的越轴导致的不自然感——这一点相当有趣。</p>
<p>以及音乐，也是本片的一大亮点，以游行的配乐为例，导演今敏要求“盛大愉悦但就是让人感觉不舒服”这种甚至可以说苛刻的要求，但平泽进先生给出的成果简直堪称完美。（这一段是看的解说，虽然我自己看确实感觉配乐相当的好但显然描述不出来）。</p>
<p>红辣椒Paprika确实是相当有魅力的主角，虽然我说不出来为什么这个角色的吸引力如此之大，但就角色塑造来说，显然是成功至极。当然，无法排除林原惠美小姐也是Haibara
Ai的配音的爱屋及乌的因素。</p>
<p>可称神作的一部电影。</p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>film</tag>
      </tags>
  </entry>
  <entry>
    <title>画中世界</title>
    <url>/2025/02/17/%E7%94%BB%E4%B8%AD%E4%B8%96%E7%95%8C/</url>
    <content><![CDATA[<p>游戏名：画中世界/Gorogoa</p>
<p>很有意思的解密作品，精良而小巧。</p>
<span id="more"></span>
<p>也是一两年前玩的游戏了，剧情简单而隐晦，倒是没什么好说的。但该作的解密，构思以及美术精巧至极，常常又令我拍案叫绝之处。</p>
<p>游戏的主要玩法是通过画面的移动，重叠，视觉错觉实现解密和进程推动，少数的彩蛋也能让人眼前一亮，玩起来的感觉有种驱动精密机械运作的感觉，环环相扣精妙绝伦，兼之游戏流程较短，很容易让人一口气通关。</p>
<p>游戏的难度中等，循序渐进但不乏大开脑洞之处，但各种谜题十分合理，正如前文所说：”精巧“。</p>
<p>手绘风格的美术令人眼前一亮，用来衬托全作庄严而孤独的氛围恰到好处。当循序渐进的音乐配合着游戏结局时的恍然大悟，总会有一种孤独而荒谬的感觉，美术风格对于结局时那种略带宗教恐怖和克苏鲁的画面也是十分自然，”来自东方的神秘力量“刚好可以用来形容这部游戏给人的感觉。</p>
<p>《画中世界》</p>
<p>可玩性：5/5</p>
<p>音乐：4/5</p>
<p>画面：4.5/5</p>
<p>剧情：3/5</p>
<p>总评：4.5/5</p>
<p><img src="Screenshot_20230604_171258_com.xd.gorogoa.tap.jpg" /></p>
<video muted controls preload="metadata" loop="loop">
<source src="SVID_20230604_171538_1.mp4" type="video/mp4">
</source>
</video>
<video muted controls preload="metadata" loop="loop">
<source src="SVID_20230604_171301_1.mp4" type="video/mp4">
</source>
</video>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title>紫罗兰永恒花园</title>
    <url>/2025/01/30/%E7%B4%AB%E7%BD%97%E5%85%B0%E6%B0%B8%E6%81%92%E8%8A%B1%E5%9B%AD/</url>
    <content><![CDATA[<p>花无凋零之时，意无传达之期。爱情亘古不变，紫罗兰永世长存。</p>
<span id="more"></span>
<hr />
<p>纯洁，纯粹的爱。</p>
<p>美好到任何人都不愿意亵渎的情感。</p>
<p>很高兴最后是happy ending，即便仍有遗憾，但已足够美好。</p>
<p>如若有一天忘记了剧情而再次看到这寥寥几句话，希望你重温这段故事。</p>
<p><img src="keyvisual02.jpg" /></p>
<p><img src="keyvisual01.jpg" /></p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>film</tag>
      </tags>
  </entry>
</search>
